#!/usr/bin/env python3
#
# This code is licensed under GNU GPL v2.0 or higher. Please see LICENSE for details.
#
#
# Output of Brainome Daimensions(tm) Table Compiler v0.91.
# Compile time: Mar-20-2020 05:38:13
# Invocation: btc -server brain.brainome.ai Data/KDDCup09_churn.csv -o Models/KDDCup09_churn.py -v -v -v -stopat 92.77 -port 8100 -f QC -e 100 -target CHURN -cm {'-1':0,'1':1}
# This source code requires Python 3.
#
"""
System Type:                        Binary classifier
Best-guess accuracy:                92.65%
Model accuracy:                     93.18% (46592/50000 correct)
Improvement over best guess:        0.53% (of possible 7.35%)
Model capacity (MEC):               3486 bits
Generalization ratio:               13.36 bits/bit
Model efficiency:                   0.00%/parameter
System behavior
True Negatives:                     89.13% (44566/50000)
True Positives:                     4.05% (2026/50000)
False Negatives:                    3.29% (1646/50000)
False Positives:                    3.52% (1762/50000)
True Pos. Rate/Sensitivity/Recall:  0.55
True Neg. Rate/Specificity:         0.96
Precision:                          0.53
F-1 Measure:                        0.54
False Negative Rate/Miss Rate:      0.45
Critical Success Index:             0.37

"""

# Imports -- Python3 standard library
import sys
import math
import os
import argparse
import tempfile
import csv
import binascii
import faulthandler

from bisect import bisect_left

# Magic constants follow
# I/O buffer for clean. Reduce this constant for low memory devices. 
IOBUF=100000000

# Ugly workaround for large classifiers
sys.setrecursionlimit(1000000)

# Training file given to compiler
TRAINFILE="KDDCup09_churn.csv"


#Number of attributes
num_attr = 230
n_classes = 2


# Preprocessor for CSV files
def clean(filename, outfile, rounding=-1, headerless=False, testfile=False):
    
    clean.classlist=[]
    clean.testfile=testfile
    clean.mapping={}
    clean.mapping={'-1':0,'1':1}

    def convert(cell):
        value=str(cell)
        try:
            result=int(value)
            return result
        except:
            try:
                result=float(value)
                if (rounding!=-1):
                    result=int(result*math.pow(10,rounding))/math.pow(10,rounding)
                return result
            except:
                result=(binascii.crc32(value.encode('utf8')) % (1<<32))
                return result

    def convertclassid(cell):
        if (clean.testfile):
            return convert(cell)
        value=str(cell)
        if (value==''):
            raise ValueError("All cells in the target column must contain a class label.")

        if (not clean.mapping=={}):
            result=-1
            try:
                result=clean.mapping[cell]
            except:
                raise ValueError("Class label '"+value+"' encountered in input not defined in user-provided mapping.")
            if (not result==int(result)):
                raise ValueError("Class labels must be mapped to integer.")
            if (not str(result) in clean.classlist):
                clean.classlist=clean.classlist+[str(result)]
            return result
        try:
            result=float(cell)
            if (rounding!=-1):
                result=int(result*math.pow(10,rounding))/math.pow(10,rounding)
            else:
                result=int(int(result*100)/100)  # round classes to two digits

            if (not str(result) in clean.classlist):
                clean.classlist=clean.classlist+[str(result)]
        except:
            result=(binascii.crc32(value.encode('utf8')) % (1<<32))
            if (result in clean.classlist):
                result=clean.classlist.index(result)
            else:
                clean.classlist=clean.classlist+[result]
                result=clean.classlist.index(result)
            if (not result==int(result)):
                raise ValueError("Class labels must be mappable to integer.")
        finally:
            if (result<0):
                raise ValueError("Integer class labels must be positive and contiguous.")

        return result

    rowcount=0
    with open(filename) as csv_file:
        reader = csv.reader(csv_file)
        f=open(outfile,"w+")
        if (headerless==False):
            next(reader,None)
        outbuf=[]
        for row in reader:
            if (row==[]):  # Skip empty rows
                continue
            rowcount=rowcount+1
            rowlen=num_attr
            if (not testfile):
                rowlen=rowlen+1    
            if (not len(row)==rowlen):
                raise ValueError("Column count must match trained predictor. Row "+str(rowcount)+" differs.")
            i=0
            for elem in row:
                if(i+1<len(row)):
                    outbuf.append(str(convert(elem)))
                    outbuf.append(',')
                else:
                    classid=str(convertclassid(elem))
                    outbuf.append(classid)
                i=i+1
            if (len(outbuf)<IOBUF):
                outbuf.append(os.linesep)
            else:
                print(''.join(outbuf), file=f)
                outbuf=[]
        print(''.join(outbuf),end="", file=f)
        f.close()

        if (testfile==False and not len(clean.classlist)>=2):
            raise ValueError("Number of classes must be at least 2.")



# Calculate energy

import numpy as np
energy_thresholds=np.array([324076562334.1087, 324116014666.4699, 325087792506.7089, 325134351331.9934, 325216309012.14514, 325246003848.3366, 325467301747.96765, 325500517600.12885, 325858450001.97534, 325918238886.8557, 326121481234.6384, 326136216333.2026, 326451120645.00726, 326465856151.13354, 326629939468.9464, 326642968117.2623, 326931143867.75433, 326985332476.42584, 327044228042.3655, 327057527708.1409, 327692543517.0009, 327694465861.5179, 327848600231.4027, 327856100940.9495, 327866759132.2867, 327880054066.94006, 327943113033.80444, 327961588947.57404, 328006275898.9995, 328017061293.41724, 328027818531.0335, 328046834519.86426, 328142662327.1192, 328145527758.23285, 328231309673.2889, 328240322091.6238, 328244617120.7873, 328256936208.73303, 328476626966.51886, 328485475677.5167, 328531069896.2843, 328538061958.5445, 328607859136.6799, 328610881828.54315, 328711591383.3787, 328736084708.07306, 328774893445.9721, 328797853829.8826, 328801791180.6012, 328807051732.39777, 328856873528.2029, 328865979881.39355, 328877638778.97125, 328883129214.2683, 328886941774.5828, 328889057132.5791, 329082612490.2626, 329085315901.7881, 329120516331.69604, 329134198008.9537, 329430591738.6196, 329434526803.6987, 329491395631.25977, 329495151055.86566, 329573635622.0518, 329578814189.50977, 329583552854.53955, 329589177010.3872, 329659929363.52515, 329664038278.69147, 329717475739.8217, 329726753266.10675, 329752821505.35095, 329760922741.31915, 329792748802.51276, 329799286518.1255, 329907763372.49255, 329915483458.796, 329938387463.4326, 329945765050.5858, 329971354099.4822, 329993786921.0504, 330077054947.40045, 330084362070.9641, 330230746567.8078, 330234013337.0669, 330311714402.38947, 330319717764.50055, 330340876691.36096, 330345272767.25684, 330362730442.4053, 330367460103.25195, 330374548294.0516, 330375538630.75244, 330386721553.66614, 330387871302.8774, 330469236471.7064, 330475125344.77264, 330482294753.9502, 330489685430.5307, 330499545158.3655, 330511078316.54034, 330525840497.6338, 330536204764.5205, 330566957229.37775, 330586025682.87036, 330619154711.3058, 330622305156.9734, 330640675041.1869, 330642311472.8331, 330674126965.0687, 330677487011.74976, 330735333676.19543, 330737764895.29663, 330764850457.8918, 330767040918.954, 330793650599.6145, 330797006688.02905, 330805934799.704, 330807258529.6769, 330839804490.8997, 330841211838.8948, 330892448014.79114, 330894526076.4048, 330945337048.527, 330947557128.5349, 331000101184.86633, 331003515159.1143, 331019276619.58875, 331022024979.17786, 331029000984.9432, 331036678114.16693, 331060476987.88055, 331063530879.4904, 331092691592.6151, 331097266731.80994, 331176236994.5842, 331181723289.3511, 331269406432.318, 331273753746.6507, 331286197251.98975, 331287176821.67896, 331312190450.44037, 331314553406.8067, 331351759218.2367, 331354719119.25543, 331370999070.2094, 331371372568.57434, 331374243951.91327, 331378894116.0288, 331384955777.1773, 331390653681.308, 331417579618.8237, 331420820991.4321, 331430975504.72687, 331433336325.05347, 331452229625.0965, 331455109343.5, 331460631309.52203, 331463248537.0093, 331504239248.1598, 331507686622.83795, 331522949772.29346, 331528646603.9949, 331626391601.3165, 331628901194.6273, 331704167454.8048, 331708933649.62256, 331715349113.0958, 331717921842.54443, 331730234931.89514, 331731706074.03735, 331771147714.32043, 331776558952.64014, 331781575841.70703, 331783080540.6529, 331884206195.4463, 331888620241.33936, 331891775038.25385, 331892919177.03577, 331906928649.0585, 331908987284.25024, 331945057962.9022, 331948998959.2254, 331959647943.2717, 331962363790.42096, 331979197127.41943, 331984012344.40155, 332002542537.25684, 332005738972.6117, 332047944606.41095, 332048318798.2637, 332054916940.1969, 332055449879.5626, 332061099330.2984, 332064176923.05994, 332068269140.4276, 332068382360.4407, 332090442562.7711, 332092970399.9437, 332106730482.3407, 332109319600.54285, 332123344019.17944, 332125777402.2548, 332171012218.84863, 332174432562.8664, 332186026055.9381, 332187632889.75354, 332214171037.2986, 332217191209.6659, 332235866071.1097, 332237595694.0216, 332251054983.61804, 332251898444.2794, 332275841409.0696, 332282620563.7297, 332323327365.8626, 332328355660.90015, 332385289270.58716, 332388316560.4173, 332399636859.32904, 332408595551.7528, 332429095100.6463, 332431716775.2478, 332553456123.0493, 332556348277.1692, 332581278799.2699, 332584051988.702, 332593511374.6376, 332597848394.92255, 332618998135.05505, 332621011337.83527, 332639475482.95386, 332639697340.5925, 332731850296.80115, 332736151371.7994, 332805641504.25604, 332805926626.51465, 332809070700.53723, 332812976538.7666, 332827458957.2458, 332830170211.96704, 332869277818.6008, 332869782499.3047, 332874239313.8385, 332877394179.3965, 332878230396.60205, 332879328091.1677, 332885527750.91455, 332887079215.3284, 332905930651.51324, 332908951504.15295, 333010415411.7674, 333015461996.74036, 333025242013.2602, 333026042340.3214, 333052062959.2982, 333059726977.65985, 333091789171.6683, 333092662729.16327, 333096139441.93445, 333098940404.17236, 333158962386.5525, 333160418660.29193, 333217417145.9553, 333221188795.3711, 333235133340.631, 333237787193.8896, 333256391900.4253, 333261110238.1793, 333289200300.4032, 333291719034.51636, 333295146379.6475, 333296603925.3983, 333298900349.4299, 333299980607.0576, 333328502286.49304, 333330562945.2404, 333366400322.77423, 333369866944.76404, 333383220685.85095, 333386072345.62646, 333388762588.516, 333393251572.5768, 333425590270.14636, 333427913108.85785, 333437218172.02454, 333439013814.5947, 333499124335.49927, 333499270900.729, 333531850828.30786, 333535278314.29016, 333545885284.8896, 333546742234.50684, 333555967204.6107, 333556353814.88477, 333619504954.3501, 333619580304.63684, 333647733623.2022, 333648704202.02356, 333669375043.551, 333673091719.4501, 333675287483.531, 333682422719.39575, 333693491250.4774, 333694904960.83765, 333697046721.57495, 333697771169.3279, 333757834298.2937, 333759335493.4745, 333765390317.7167, 333766991930.4098, 333777350060.30005, 333778299401.6103, 333817822305.5574, 333819330788.2208, 333848381622.44946, 333849427046.0879, 333893850189.662, 333896688269.608, 333927146296.31726, 333928957696.67487, 333967013090.7695, 333967791557.396, 333997093903.4306, 333998297106.48145, 334009107132.3779, 334010296496.2788, 334014053190.5286, 334014381568.54944, 334015719899.5459, 334017979746.24316, 334041064214.3007, 334041919850.4801, 334081861729.0725, 334084476083.21796, 334135820080.50555, 334137620587.02167, 334139084179.5579, 334139961178.82227, 334168981358.9592, 334169166697.291, 334190250777.1045, 334191473528.9579, 334194837853.1677, 334195706565.03925, 334209594416.77515, 334211551639.036, 334217421204.84766, 334218030248.9656, 334231652914.86365, 334232578482.26105, 334235844211.96313, 334238674672.46533, 334297488032.4497, 334299204819.23047, 334310346819.1576, 334311148354.2118, 334366585030.5321, 334371855513.57324, 334415478104.07166, 334415650596.32227, 334416371961.6891, 334418033355.4827, 334427235252.8131, 334429169587.62024, 334437011349.9373, 334437696804.1156, 334451211061.71594, 334452048065.71423, 334491234874.31464, 334492432429.5104, 334515935659.71936, 334516325770.9437, 334553834334.2898, 334555271769.2622, 334557140388.3524, 334558410750.654, 334605475296.57837, 334605839471.41956, 334606810376.0957, 334612103748.3678, 334620014623.7326, 334621943854.4138, 334628533785.6114, 334628702477.6147, 334645774102.9841, 334645893238.3209, 334651493002.4441, 334652091063.69086, 334659677181.30225, 334662379119.97205, 334666411362.74927, 334666620116.57556, 334680580055.7498, 334682123555.1073, 334684179150.3068, 334686760854.60693, 334691709479.9136, 334693896023.6551, 334696644111.19226, 334697579839.7491, 334700965593.31116, 334702667693.9257, 334707144788.3268, 334708152283.1592, 334712223447.8383, 334712571360.0924, 334726006783.7149, 334728609027.78235, 334767204637.783, 334768974221.5555, 334774592971.6946, 334775838578.93195, 334777350500.7446, 334778375830.1648, 334817723807.2425, 334819743748.43164, 334854090871.52985, 334854309857.6642, 334882339595.69824, 334883527226.5584, 334883676169.37585, 334884224587.756, 334914642285.4287, 334917170179.86646, 334927738700.6509, 334928812720.28894, 334942121507.1454, 334944506632.3772, 334948386730.1185, 334948759201.9698, 334963008121.1305, 334963895939.1718, 334987106823.5463, 334989539743.53986, 334996934916.8459, 334998922072.86084, 335025681411.92334, 335026134609.1404, 335041385861.2772, 335042174467.5309, 335048194210.438, 335049890203.03516, 335050343729.159, 335051632965.0762, 335062293961.394, 335062939168.35614, 335100385103.84204, 335102882317.2313, 335113178141.72876, 335114675836.75146, 335118604532.4568, 335119442268.1472, 335183654408.422, 335185653938.82916, 335205660140.9513, 335208236232.79346, 335208434843.91785, 335209422660.2156, 335225934575.953, 335226182834.17065, 335252594277.4396, 335253267904.8695, 335258757499.9005, 335259629520.7999, 335274954989.7569, 335275936729.7684, 335296741755.09424, 335298247824.9592, 335346027048.5397, 335348672413.7188, 335374750110.5229, 335376394729.3812, 335390710826.93726, 335391514534.65186, 335393873158.70276, 335394163145.47766, 335444708484.41907, 335445193288.4617, 335447987519.4701, 335448337629.78644, 335450106108.61646, 335451193816.6978, 335456455576.7001, 335457043155.7238, 335463375973.04675, 335466414162.016, 335499873149.78876, 335500941736.7764, 335506789124.1598, 335508851070.47644, 335525074709.79944, 335526294137.84625, 335528315834.5886, 335529424380.60535, 335535009070.7808, 335535796936.06055, 335537857698.07965, 335538797112.31976, 335539424686.0143, 335540214450.68604, 335549682779.16547, 335549993200.4723, 335580924299.74854, 335582233499.2616, 335590162884.4984, 335591794950.0484, 335597673925.88074, 335599381102.7473, 335634674114.0232, 335635189608.2394, 335644007472.2101, 335647001601.5204, 335651454874.813, 335651955006.3433, 335668247200.8578, 335670821754.65247, 335679502359.66437, 335680299620.0886, 335683808116.95557, 335688503410.79456, 335713396802.3469, 335714310200.90955, 335740308144.31116, 335740626842.8979, 335753559116.10596, 335753985372.80493, 335762825019.65015, 335764110846.31226, 335800621879.8476, 335801433435.3341, 335808584766.45416, 335809386121.8695, 335824681144.4513, 335825245443.7335, 335828114629.14813, 335828599903.7056, 335830054929.3564, 335831774266.73914, 335844311121.656, 335845070186.3248, 335873592783.76666, 335873844461.84033, 335883833585.48395, 335885359502.54065, 335900364005.6274, 335900488813.7315, 335914127224.2707, 335914657419.05304, 335950137454.0485, 335950369876.1336, 335950905768.72296, 335951510613.3408, 335959017590.53784, 335960293885.0543, 335970851283.03033, 335972288096.88556, 335976070802.7997, 335977088640.0813, 335989125529.51135, 335990015223.9174, 335992157180.2691, 335992515567.3315, 336003885578.4537, 336004504034.0707, 336062210220.9463, 336063031207.3595, 336075366973.8251, 336077905737.0858, 336080528639.37775, 336082181092.9459, 336096889068.03796, 336097255122.21533, 336100062616.73, 336102595803.2537, 336121811293.0624, 336122950556.2897, 336162167293.18713, 336164122094.45306, 336201029003.70215, 336203639226.99774, 336218577907.9291, 336219271376.3108, 336235817014.313, 336237876908.604, 336247842825.38245, 336248180488.49036, 336259191143.3797, 336259515999.6824, 336278095907.0762, 336278685299.42316, 336281891439.8551, 336282105242.28906, 336304406421.92505, 336305163559.9557, 336331605009.2905, 336332952612.05316, 336334268998.83923, 336334726445.13544, 336334797237.3573, 336335084252.6273, 336345160165.2789, 336346630767.1703, 336347949585.8462, 336348702369.80554, 336352709577.8741, 336355867724.67444, 336365082199.0039, 336366075492.5423, 336366854702.3463, 336367788430.9476, 336387000289.6272, 336388093697.0216, 336391108525.7272, 336391762197.54846, 336393094717.22217, 336396193589.58936, 336408466685.06494, 336409605356.2097, 336420275161.0498, 336421469674.6349, 336423811543.3789, 336424728567.8867, 336457462810.21375, 336459850451.9015, 336481944238.7975, 336483714111.4916, 336494149288.33057, 336494888060.0696, 336500117426.1576, 336502889598.1758, 336517619903.6538, 336518015444.4102, 336555611903.9946, 336557341528.8165, 336562435514.5261, 336562807615.19293, 336582329021.4789, 336583014147.4352, 336585388625.5343, 336586201871.5753, 336587339747.9629, 336588357969.0963, 336599748160.52625, 336600007884.31604, 336615578270.638, 336615752511.4617, 336618154586.2211, 336619016087.0906, 336622798756.43164, 336629065794.13, 336657418758.14343, 336657917589.1582, 336667348052.7471, 336667736435.9726, 336669174779.90173, 336669417225.9346, 336672156960.95654, 336674821744.2375, 336679238404.6508, 336683909787.5804, 336687268055.53357, 336688296674.4873, 336691705701.05963, 336691768008.6931, 336703179329.5731, 336704908502.33154, 336708892384.6703, 336710126950.607, 336715428840.0211, 336715737511.42786, 336724958531.9384, 336725937526.4778, 336729225070.5014, 336729458585.4035, 336760390482.91846, 336762638708.48346, 336768875422.3252, 336770913703.7623, 336772152719.61237, 336772943914.19415, 336780810545.4464, 336781864392.8054, 336812299163.88135, 336813088708.51294, 336826891998.6193, 336828154776.18335, 336833515779.0079, 336833986051.73193, 336871087067.39246, 336871350487.9273, 336878833114.25024, 336879391283.3783, 336879613855.9022, 336880423726.827, 336895468719.7309, 336895822085.9782, 336896368703.7329, 336896418172.3898, 336896817611.3759, 336897312965.2605, 336942688494.6741, 336942795877.3745, 336957865812.7711, 336958346749.2162, 336978813392.55664, 336981451649.2408, 336987818357.96924, 336989864662.696, 336992633940.5653, 336993839454.3152, 337012986654.2582, 337014137004.6376, 337025948050.0835, 337026194572.45044, 337055766126.69763, 337057557317.593, 337059049375.11304, 337060074026.1874, 337068586439.99316, 337069770491.5264, 337074964405.6594, 337076509950.18933, 337078863350.1206, 337080793211.14923, 337093742815.20483, 337096596800.6968, 337163498132.39905, 337163709698.76, 337167161561.83185, 337168527248.9465, 337176179704.3667, 337177173596.5913, 337180981876.06396, 337182533367.65063, 337185444537.7482, 337185481218.5989, 337198892344.23706, 337200228689.6024, 337218840723.06793, 337219286161.9875, 337238336554.3773, 337239457304.03406, 337253601180.78076, 337254797654.8578, 337274833266.1142, 337278021762.37744, 337297339822.68097, 337297709723.0607, 337303993682.79065, 337304713115.60034, 337327664353.2041, 337328612699.3989, 337332145857.7759, 337333528472.9306, 337365795866.53796, 337367030184.5326, 337367910908.0428, 337368360168.4021, 337380940646.6195, 337381244782.2242, 337388143462.75464, 337388486864.0027, 337392749780.5873, 337396074039.13525, 337414505577.9375, 337416194243.975, 337431283129.4811, 337433172164.97766, 337440600154.77905, 337441471116.87787, 337453735260.68756, 337454090057.4653, 337497727780.25366, 337499525923.37756, 337500481753.839, 337500662363.5965, 337501898319.33374, 337502067257.3531, 337511057636.269, 337512116978.04285, 337514205557.7621, 337514892419.58093, 337525525336.1113, 337531387711.10645, 337544598821.1537, 337545212403.40576, 337559351827.6692, 337560247743.4197, 337600842531.47485, 337602974163.9145, 337629424170.62244, 337629568540.5049, 337644183948.4601, 337644344831.37646, 337650473962.6469, 337651539541.40247, 337657422750.1223, 337657889031.888, 337658692286.42993, 337659161186.3279, 337664558334.0134, 337665263422.75903, 337666072734.45386, 337666258670.7511, 337682826102.0588, 337683538471.6219, 337685162968.15686, 337685539689.55444, 337688112693.4457, 337688919053.5165, 337694513337.7506, 337695683497.9712, 337698208544.43555, 337699273116.44403, 337700535233.63574, 337701195878.4062, 337723266106.2097, 337723521383.1349, 337734477300.96594, 337734795853.26135, 337751792591.3921, 337751897594.7838, 337761716363.5768, 337762442348.653, 337773303557.721, 337773480710.57666, 337804988012.79913, 337806039454.3263, 337822422698.68506, 337823399393.28357, 337825215351.9127, 337827041621.3949, 337832149014.4296, 337833743539.37744, 337844212061.13464, 337844322562.52466, 337896655615.47705, 337897010248.6344, 337901596675.4863, 337901902959.7293, 337902518057.4707, 337903051889.53253, 337905561727.56726, 337906751863.4065, 337931382853.69385, 337933979198.64844, 337936889891.56213, 337937917528.693, 337940566303.99414, 337941576909.8194, 337959404293.154, 337960134632.46924, 337965748969.6358, 337966700002.85345, 337985936715.5879, 337986083271.59436, 337992033041.7407, 337996233853.9911, 338004787571.18567, 338006948470.85077, 338018238051.5967, 338020703591.65717, 338042364944.65857, 338044855344.5752, 338052043041.8074, 338053040671.67523, 338056730021.86017, 338057213372.11273, 338065999808.9872, 338067155951.7416, 338083209385.33704, 338083677783.74945, 338084805572.54736, 338086523716.5249, 338093322945.56915, 338093815809.63696, 338115004970.01874, 338117160682.35803, 338122919818.5547, 338124809647.2627, 338144247729.74426, 338145997194.0818, 338152912463.9578, 338153139052.99396, 338161080239.82947, 338161406935.98303, 338175590433.6635, 338176048904.36743, 338187021337.343, 338187765581.83636, 338209736487.07043, 338210314480.4547, 338215321125.69366, 338216394559.72595, 338218601247.4067, 338220897632.47675, 338248292481.9005, 338248579550.70483, 338266161693.0313, 338266372230.3016, 338267702024.8115, 338268456896.8991, 338277986873.36646, 338278719458.57825, 338283332841.44556, 338283552189.3253, 338284028793.5176, 338285291777.7202, 338299684165.5287, 338301623242.95264, 338325219876.3034, 338326521356.95197, 338339599277.63007, 338340967817.6124, 338350794959.9907, 338351270111.927, 338351900425.1043, 338352678209.4922, 338355506651.9686, 338355783355.8561, 338375799222.8021, 338376965350.65283, 338450246031.91425, 338451618747.17993, 338453001511.8599, 338453800283.1074, 338470605201.94446, 338472161340.97894, 338474058856.54395, 338474756174.73914, 338477782543.85, 338479010574.76807, 338479814952.5133, 338480281952.464, 338512361122.56915, 338512440625.42053, 338515565665.6603, 338516866361.87103, 338518503143.8793, 338519153082.7866, 338522605063.6187, 338524158336.25714, 338525542113.70605, 338525930799.0851, 338531336933.0354, 338531941257.86066, 338543181317.6814, 338543791529.94055, 338549267620.0813, 338549806607.3761, 338560438530.4053, 338560529014.70544, 338561098463.55206, 338561698426.12866, 338588916005.3662, 338589429299.4782, 338591052913.4511, 338592206003.872, 338594308463.5231, 338594468666.80096, 338596310759.2335, 338596675339.3278, 338620686503.67487, 338622083638.6283, 338642789573.9461, 338644165412.17456, 338656105951.4989, 338656630598.55444, 338668381577.42053, 338669303389.9268, 338682119047.03156, 338683624421.4759, 338686407536.044, 338687409651.0432, 338690098717.8346, 338691221925.42114, 338697863217.442, 338698885725.8376, 338710153518.10596, 338710616225.5827, 338715084586.1045, 338715576175.1903, 338722271911.3086, 338723333137.8961, 338724321320.04333, 338724489575.3425, 338730882558.4515, 338731073535.4675, 338737553097.58435, 338737873108.52405, 338763287025.34143, 338764032170.0751, 338781010731.2272, 338781352167.01953, 338781824357.0179, 338781927839.2363, 338789898181.7538, 338791028469.84644, 338807687842.75464, 338808172944.5792, 338809512814.2988, 338810927964.02673, 338825502788.5892, 338826017034.7654, 338829645016.6205, 338830139616.9128, 338838875470.51917, 338839225390.17267, 338853682233.9894, 338855234597.1251, 338856195173.3828, 338856428150.685, 338872056004.9041, 338872275850.093, 338890503077.5942, 338890978576.91223, 338893929158.55237, 338895264381.4269, 338897752376.29443, 338898312192.13513, 338906967126.0095, 338908335851.8063, 338910887537.71204, 338911673840.42175, 338933149899.3905, 338934330541.2987, 338949160014.30347, 338951194962.5775, 338953310756.73663, 338954219061.3621, 338968439430.96136, 338969178971.0166, 338979038093.30554, 338979488100.44226, 339003837833.68066, 339006015544.1054, 339013353510.2301, 339013528819.7237, 339020391848.605, 339022129388.07837, 339034939595.40857, 339035786312.25006, 339036394496.9616, 339036782143.19275, 339043611115.2074, 339044528850.73706, 339057885898.8923, 339058281203.25494, 339059000116.9681, 339059451032.29565, 339094045331.9886, 339095573519.6019, 339102023161.93335, 339103490741.02026, 339125375598.2192, 339126312034.06946, 339138509135.5086, 339140227623.88214, 339144205107.55615, 339144424633.54224, 339146797867.6789, 339148450805.0588, 339166340827.4553, 339166584025.5511, 339206703396.6324, 339207460818.39874, 339214009544.3928, 339214585191.0992, 339227810212.2269, 339227898413.4262, 339236860624.9491, 339237525227.3985, 339264320266.134, 339264949322.0909, 339297175215.49524, 339297657787.7296, 339309545027.1794, 339309938616.1565, 339311974736.1188, 339312830359.0134, 339319778162.8635, 339320537491.8057, 339328303278.5326, 339330177434.4815, 339338361751.17303, 339339975952.5542, 339348248930.5833, 339349335148.3966, 339364438611.58777, 339364531496.55444, 339365193074.96826, 339365659261.3135, 339369909021.9092, 339370151823.41516, 339391446171.87366, 339392252643.391, 339398955541.33655, 339399845162.97906, 339404507736.5895, 339405031584.84186, 339428112969.67163, 339429193702.7565, 339441587174.3358, 339442077943.8834, 339445907885.34265, 339446780262.0606, 339448481445.8205, 339448614362.78894, 339453526928.77344, 339453992743.8943, 339457549888.3093, 339457741516.65674, 339458747730.635, 339459501810.5086, 339476404576.30035, 339477060921.1577, 339477669273.4708, 339477822009.4518, 339487384166.0562, 339488467897.06976, 339493909660.4049, 339494583270.77203, 339506406899.5001, 339507143673.1377, 339529735383.19574, 339530131139.9966, 339536296929.1615, 339537805711.07214, 339568135598.932, 339569059224.99695, 339580398949.3178, 339581722741.1268, 339586288839.3879, 339587245909.0591, 339592362153.94226, 339594524441.2313, 339603741034.2676, 339605144726.71674, 339615469937.11383, 339616719059.67676, 339623352575.58844, 339624553613.40375, 339630912013.0228, 339631905048.5967, 339646839223.2634, 339647259088.8943, 339650992777.74414, 339651749185.8079, 339657613627.7803, 339658065339.1101, 339666168638.47766, 339666735717.12775, 339675775358.8436, 339678473222.7207, 339680513514.0763, 339681156174.927, 339695801706.84973, 339696501833.69226, 339710340716.4027, 339711660965.9656, 339715815598.931, 339716145181.2276, 339718231362.34973, 339719946755.2129, 339725677545.5713, 339726305112.6444, 339729467571.6735, 339729683902.21606, 339734014813.6106, 339734350222.6809, 339736502969.27673, 339737116685.5573, 339738834015.1977, 339739414587.0139, 339741420700.19165, 339741980100.4759, 339749243220.59973, 339751727596.2343, 339776575286.79565, 339777191037.6625, 339782254130.11096, 339783439170.8375, 339797847649.14233, 339798035796.20044, 339805229118.41943, 339806144590.70215, 339828056293.52325, 339828821861.19666, 339839669867.1493, 339839792043.1234, 339849862543.399, 339852511103.7789, 339854394984.7819, 339854997704.18945, 339861265586.82715, 339861878418.5307, 339862387038.80316, 339862995585.93695, 339867155806.918, 339868053683.44543, 339869536622.0865, 339869889929.9143, 339877682146.55334, 339877965977.9475, 339893536692.0486, 339897171114.5513, 339899896728.9119, 339900327251.2733, 339903445906.9717, 339903880431.2444, 339904083518.7877, 339904867740.5524, 339913817453.8917, 339914358516.6013, 339917867670.0907, 339917923206.78314, 339920981182.7423, 339921521657.0099, 339952639553.5972, 339952924760.9622, 339961627102.3928, 339962419466.86084, 339975228394.4617, 339977215607.7885, 339980395303.79474, 339980926843.1019, 339988461082.22034, 339989141360.44196, 340006369619.76807, 340006985274.1608, 340014846250.2538, 340015333016.6703, 340040619539.5825, 340041435736.4348, 340045117670.67847, 340045710020.70197, 340056589788.645, 340057667443.6495, 340058138110.5357, 340058376067.3228, 340060111397.4135, 340061129749.92993, 340083260933.23444, 340084485133.43726, 340085775190.28955, 340086398533.88684, 340089438405.56573, 340090469741.3165, 340104743792.05695, 340105336698.46094, 340118039446.7265, 340118345187.4136, 340123540949.26184, 340123807817.17804, 340130113989.7782, 340130197985.664, 340139316420.38477, 340140987485.72266, 340145831908.70123, 340145968662.442, 340161377011.69727, 340162203829.0585, 340169336193.73627, 340170160553.7316, 340171012162.3472, 340171312910.57916, 340173152912.1578, 340174324855.41223, 340179133356.56067, 340180011826.3065, 340190350248.91583, 340190494862.60913, 340193335626.56555, 340194087513.0079, 340204822034.87787, 340206160003.5208, 340208604627.31665, 340208681984.44006, 340233617012.68134, 340234650043.7926, 340240355397.5205, 340241692007.43915, 340250841784.71704, 340251187752.96783, 340266502725.9626, 340266563558.8471, 340290053220.4159, 340290652423.32043, 340305120306.2711, 340307768868.1912, 340309279959.0088, 340309689345.5168, 340310543532.98193, 340310584809.7904, 340323734151.6078, 340324282405.5305, 340327160326.6102, 340327584158.72485, 340333043585.0858, 340333888428.90125, 340340924533.0734, 340341162833.6225, 340344939956.39325, 340345836383.2728, 340349926356.2064, 340350370785.9481, 340362735040.9935, 340363087787.723, 340372232273.6751, 340372258387.3377, 340376314835.54175, 340377054384.95544, 340384316841.08655, 340385313258.16077, 340388082199.05444, 340388570622.30774, 340417151636.31903, 340417490995.3685, 340431368627.23535, 340431691557.7414, 340434587006.2644, 340436595063.7777, 340445671709.9052, 340446324497.6279, 340447091875.1612, 340447197287.64514, 340469318797.0995, 340470026722.2476, 340478908629.0812, 340478999470.9942, 340483922066.95605, 340484352015.56757, 340489996002.1083, 340490350899.9816, 340499047130.32355, 340500339014.2898, 340520167956.5706, 340520349134.3543, 340520940217.954, 340522146579.63293, 340530979152.7212, 340534963749.7357, 340539346621.62244, 340541008258.6531, 340555112277.4431, 340555930461.2832, 340564536950.7004, 340565690869.4093, 340574811155.5729, 340575424652.9452, 340576900154.58295, 340577604789.8111, 340592193996.9319, 340592614945.2561, 340602747648.1532, 340603245425.3476, 340614507947.23254, 340614776255.8762, 340616319464.09344, 340616819837.58264, 340617212639.8889, 340617518945.2675, 340626997271.76196, 340629106244.73737, 340645747075.56165, 340646924379.5597, 340655935858.79565, 340656337896.92725, 340659492964.7549, 340660026989.9857, 340666875538.455, 340667017030.0611, 340681393304.93854, 340682615313.14, 340685211071.5765, 340686324529.1854, 340709393236.26685, 340710100708.4386, 340719767578.05695, 340720381004.5488, 340726341429.1631, 340727128590.14606, 340729270632.638, 340729923266.7589, 340732980418.6608, 340733225828.85034, 340736127157.96826, 340738090986.03613, 340741614993.0465, 340741757710.30585, 340750693803.49316, 340751120295.8684, 340755969459.05347, 340757235519.614, 340776739272.0443, 340777835103.374, 340781424815.38586, 340783694553.94336, 340823346051.14014, 340824966280.4155, 340848545739.3308, 340848705309.9987, 340852807823.47217, 340853512321.70996, 340874611474.7211, 340875562779.9262, 340884108485.09406, 340884281002.46234, 340906612638.56836, 340907576318.35046, 340926252686.9612, 340927738440.5996, 340937170460.84595, 340937503773.66095, 340944966739.0339, 340945851587.1382, 340952718767.5437, 340953320750.2726, 340953502366.97595, 340953851731.1677, 340959849415.23364, 340960718665.89294, 340965395376.99414, 340965885267.05383, 340966725414.36066, 340967304753.1557, 340982025812.541, 340982691071.79034, 340993262952.8314, 340993995030.1411, 340997960866.18604, 340998645509.9816, 341015452961.4902, 341016148524.5757, 341042289935.2388, 341042738777.66425, 341062201876.9582, 341063144466.2092, 341070469888.2604, 341071259730.2391, 341072005333.14136, 341072449642.1879, 341072835195.3793, 341073513850.896, 341077053184.7805, 341077831969.0558, 341078464740.9219, 341078684420.8384, 341082871396.4258, 341083237048.3899, 341092595494.89905, 341093510134.463, 341094506914.6553, 341094763835.28046, 341096146031.1393, 341096702572.5351, 341099830406.0383, 341100623043.67395, 341137292625.6757, 341137665529.50806, 341139252667.82794, 341140030236.469, 341165110729.1709, 341166231091.72156, 341170449006.8106, 341171942509.00934, 341177352200.8336, 341178450703.38696, 341182524647.461, 341182808361.663, 341188645863.22046, 341188871862.1128, 341202695529.27203, 341203201262.7981, 341204384259.1345, 341205025405.14844, 341208494281.10767, 341208717663.5907, 341218290177.8392, 341218375163.2138, 341221469779.0102, 341222548944.0008, 341225730973.5545, 341226017302.3951, 341231070249.6942, 341231782111.9585, 341237135066.8157, 341237950228.11536, 341248675161.5243, 341249058821.22253, 341257936315.9941, 341258850962.0438, 341267557914.4982, 341267674342.0076, 341278398412.6355, 341278889148.31445, 341281751822.1504, 341282869532.08264, 341283881386.3881, 341284976219.978, 341316409643.57227, 341316840410.0635, 341330841586.4125, 341330913984.4369, 341350557915.8517, 341350959159.1031, 341352993028.25745, 341355383597.82227, 341372475849.1053, 341373889001.7249, 341375411287.80347, 341375903412.16315, 341383034686.7054, 341383133016.016, 341384774224.3564, 341385089083.6402, 341397141643.5048, 341397980649.75244, 341428914744.72174, 341429034850.068, 341429319465.97406, 341429525203.7797, 341447844352.7131, 341448289004.8185, 341455843480.13696, 341456931693.59106, 341458397318.22095, 341459801782.9297, 341468244365.6986, 341468498072.03314, 341480800633.4684, 341482654697.77075, 341489594349.8224, 341489756649.67346, 341500559360.1776, 341501866537.4136, 341511788054.0549, 341512192069.85535, 341512725460.9579, 341513306309.36316, 341524424340.64923, 341525704090.8386, 341531255559.2052, 341531662347.94165, 341549344328.4143, 341549551803.8949, 341564371875.3263, 341565079378.78735, 341569138560.9375, 341569731903.9131, 341572273150.2285, 341572798960.36383, 341574209843.2672, 341575691546.1417, 341586312919.6564, 341586884086.3249, 341589383568.14, 341591198008.1653, 341591828873.7322, 341592683628.7555, 341609126838.4382, 341609729320.3258, 341612695964.3529, 341613300588.70654, 341627973681.2239, 341628523793.78033, 341633209093.1589, 341633775882.61646, 341637839640.4426, 341638415148.7251, 341643458340.1918, 341643904689.92206, 341645802918.03125, 341645941127.80005, 341650423291.5443, 341651193614.9643, 341669629948.7895, 341670230406.44165, 341703000200.0357, 341703370808.28094, 341725300845.07086, 341725934982.5809, 341726353782.14124, 341726643547.4596, 341732939488.56274, 341733422642.3729, 341753050354.21094, 341753490521.86597, 341765713309.11584, 341766426167.3464, 341785049136.2372, 341785482948.81287, 341796279310.7228, 341797673573.7091, 341803761990.0524, 341804776327.5193, 341809104204.4247, 341809865671.88574, 341815139800.0386, 341815602522.0763, 341817609282.3387, 341818675411.45026, 341833012743.62054, 341833227256.34064, 341834701094.86255, 341835019216.16, 341841621298.34424, 341842857292.49915, 341855933556.9981, 341856274032.3708, 341857103693.5226, 341857179651.9103, 341861695957.0032, 341862290573.0359, 341884639865.8152, 341885545610.4982, 341888048134.29285, 341888976850.4517, 341889951928.625, 341890700431.34216, 341909747505.8233, 341910267882.8456, 341914733217.19946, 341915227409.9962, 341920371957.6232, 341920516659.3182, 341934211489.9163, 341934905983.9817, 341947098571.77466, 341947463412.7256, 341953752530.34064, 341954316705.2598, 341957981342.1801, 341958379161.162, 341980011431.2181, 341980252771.7851, 341982225777.28, 341982874978.38336, 342012264200.57513, 342013690782.6004, 342014343374.0754, 342014513077.8873, 342020996796.3431, 342021385447.1178, 342035300986.8484, 342036805316.8042, 342040210158.3, 342040348682.8116, 342043139504.2964, 342043628097.17725, 342043979672.8474, 342044515518.71063, 342051067921.4139, 342051836059.9903, 342053075153.8115, 342053412575.7118, 342054731511.66174, 342055129068.4607, 342067467568.34766, 342067931550.1481, 342071379555.1022, 342071624449.0989, 342074549025.18494, 342075599102.3308, 342080834786.381, 342081711495.00946, 342092906728.2378, 342094293001.95734, 342121894586.05383, 342122352232.5345, 342127079832.61194, 342127605149.90466, 342132368434.412, 342132974755.5381, 342141242850.82697, 342142035325.02185, 342161802198.3769, 342162788789.77454, 342165045210.3956, 342165945312.01086, 342168573774.4269, 342169099039.97595, 342175482706.7341, 342175805248.3562, 342177924069.3775, 342178394707.84766, 342180230080.9578, 342181007306.10986, 342194172499.8624, 342195240471.49817, 342195337469.61206, 342195857693.6733, 342201802265.1742, 342202374222.36554, 342203029160.97345, 342203239452.2519, 342213196475.02515, 342213856182.7643, 342214003972.3933, 342214877571.52, 342220359828.71423, 342220650398.8369, 342229140632.1692, 342229384068.6684, 342241701281.09937, 342242517948.74615, 342249877343.074, 342250536003.98175, 342256250587.10455, 342256852464.27985, 342270301242.29376, 342270518094.8769, 342271750510.05066, 342272332215.6889, 342272874831.08496, 342273120369.5948, 342278438349.3125, 342278711600.2476, 342283293770.4769, 342283909630.43066, 342285394936.7391, 342286606654.1841, 342300201630.45374, 342300395105.4559, 342319119033.1475, 342319433213.33673, 342319689012.91656, 342320079110.7129, 342344809385.34686, 342345247475.5476, 342374641584.6389, 342375016861.7565, 342375178305.6903, 342375357683.3684, 342388540386.82587, 342389842133.25366, 342409454534.28394, 342410906366.0375, 342412581571.7296, 342413498491.3434, 342414275639.5708, 342415268329.4206, 342420568552.4525, 342420716565.60364, 342422776017.94446, 342422938353.5366, 342424131562.7263, 342425015646.66364, 342441964093.6398, 342445829967.03406, 342448444215.8978, 342449087620.684, 342449702271.48254, 342450741332.4828, 342462586110.00024, 342463027338.24927, 342471553890.24805, 342471898850.50586, 342481679675.9443, 342482209459.01526, 342484092434.74646, 342484291472.60254, 342494539217.19507, 342495356947.9641, 342504554091.0147, 342505881121.7937, 342520694047.2155, 342521294322.4081, 342540313747.035, 342541467193.0468, 342549246301.8329, 342549303644.8844, 342556604935.9701, 342557507210.00305, 342563616247.77734, 342563837379.4222, 342567711186.8186, 342568523722.1388, 342570567422.29016, 342571799472.14954, 342574472294.0613, 342574748719.5923, 342577338785.9922, 342577804734.1767, 342589905134.02216, 342590398071.5717, 342590761262.5369, 342591042458.6885, 342596935555.15436, 342597197635.4192, 342611760155.40894, 342612084769.2678, 342612282071.4446, 342613183988.5947, 342615087825.5161, 342616913548.6872, 342629191637.4662, 342629865973.78705, 342636223666.4759, 342637299336.2346, 342644061488.0447, 342644303088.3452, 342649576708.91846, 342650159935.84705, 342651370069.0343, 342653330481.0697, 342657618471.3595, 342657747119.5348, 342659794632.1262, 342660095644.64124, 342667234475.6004, 342667612854.87616, 342713958775.381, 342715257048.07825, 342735149879.62036, 342735895494.593, 342750318611.01874, 342750554682.85547, 342759907575.18695, 342760651893.0228, 342760962274.4441, 342761415017.3828, 342765126965.16797, 342766228077.7125, 342767128774.1104, 342769180795.9594, 342785530423.79535, 342785979240.04443, 342786641517.968, 342787638635.42444, 342788691683.036, 342789642789.54474, 342804461321.0243, 342805335072.1468, 342813858523.7053, 342814310738.62915, 342821590183.93445, 342822087166.9279, 342825858785.48303, 342826423006.13794, 342833694365.6179, 342834597722.7651, 342861231133.67456, 342861859442.10986, 342893959133.95483, 342894088764.31793, 342900778795.14, 342901753923.82874, 342909033828.6819, 342910141471.0377, 342911267726.0531, 342913408089.4022, 342918266488.7892, 342919256775.5, 342921218981.4409, 342922039658.10876, 342938276256.8644, 342938426677.3414, 342945047104.4684, 342946007764.88727, 342955760115.688, 342956782404.7704, 342968050981.26013, 342968754694.1555, 342978951425.2986, 342979383301.57666, 342983853683.36475, 342984457335.33435, 342991540476.70197, 342993267651.1275, 342998612715.7788, 342999890023.6027, 343005602434.40607, 343006215004.24915, 343007657548.2556, 343008289321.7212, 343015073873.0176, 343016108619.1578, 343030600493.8067, 343031163649.4951, 343041528945.90295, 343042009908.28143, 343059494579.339, 343062006615.3823, 343073303649.84766, 343073719326.4693, 343078745516.09326, 343079978040.6603, 343102690612.713, 343103801022.9205, 343109367530.0567, 343110806403.9915, 343117690704.87427, 343117833692.34, 343119519563.9746, 343119583918.59875, 343122269482.53894, 343122971189.3191, 343127739033.3258, 343128073646.6068, 343131204007.7544, 343132422397.9667, 343137871305.93286, 343138699229.589, 343141652582.17456, 343142364821.5399, 343168019851.28455, 343168221285.20654, 343180549285.1703, 343181783412.5221, 343186432016.2163, 343187591873.7594, 343199609947.8219, 343200251716.4486, 343200796128.26794, 343201401415.34814, 343204073397.2927, 343204261313.0282, 343209248203.79126, 343209652339.4911, 343210879472.34924, 343211376404.88635, 343213103715.0686, 343213607089.8552, 343218370550.95056, 343221111704.78455, 343221650368.7874, 343221988065.1255, 343237616656.92053, 343240313718.7926, 343244328417.531, 343244701444.7817, 343261872140.60345, 343262080884.1247, 343269234053.87476, 343269686388.39417, 343274880386.7075, 343275950880.963, 343284787215.868, 343285307270.5374, 343307166241.67395, 343307605006.3303, 343315901763.9807, 343316399848.0052, 343329088234.7019, 343330118631.9403, 343335855920.9072, 343336382867.82477, 343336921971.57745, 343338002142.7189, 343352535688.55994, 343352876980.8286, 343368633700.6483, 343369303566.4106, 343372049838.12695, 343372126243.2472, 343396941327.8888, 343397064863.0861, 343404849390.3037, 343405595275.97925, 343411478664.3402, 343411691426.7578, 343415268588.72253, 343417136291.5736, 343419164361.6019, 343419276740.4696, 343420855446.8017, 343420977503.6952, 343434558003.02234, 343435605678.5158, 343459400601.532, 343460479388.4231, 343466919647.2046, 343468637442.95764, 343473260920.33594, 343474012826.8085, 343499373454.6098, 343501797257.55853, 343533190286.2177, 343535749529.1001, 343539560775.4668, 343540510349.3478, 343557993676.3185, 343559295578.3945, 343567138690.53174, 343567306983.1815, 343568027602.92236, 343570058837.6642, 343579300051.1344, 343579455862.02875, 343587213344.78235, 343588190617.43567, 343591754915.50757, 343591987254.1118, 343603735237.43274, 343605189337.2666, 343613792034.17065, 343615103705.2047, 343622952327.86, 343622999529.44446, 343639127377.1688, 343640008447.3578, 343659322558.46484, 343659917515.65497, 343664979000.5161, 343665180510.1196, 343697933571.7976, 343699328563.1688, 343718035979.2584, 343718441037.5533, 343721252525.4552, 343721912135.563, 343723355866.53345, 343723907098.9003, 343745335884.14777, 343745720676.5553, 343746805417.04803, 343748711287.1992, 343767169777.3842, 343767624092.5646, 343779715851.3974, 343779814108.5573, 343791448204.412, 343792959003.6153, 343796568004.59467, 343797185354.24036, 343798692033.1519, 343799077270.23724, 343800936765.54297, 343801020929.09143, 343807037980.0456, 343807793951.8882, 343826497327.4384, 343827227061.73865, 343831062697.16187, 343831266201.0311, 343852234663.22876, 343852376470.9739, 343871519226.0154, 343871907705.3887, 343872449546.02594, 343873686566.2449, 343876753865.4447, 343877166139.22156, 343882048334.23395, 343883131256.44916, 343883906786.8597, 343883994277.317, 343897364447.6429, 343897708015.655, 343904225966.37, 343907359035.2987, 343936651623.15796, 343937600041.8701, 343948413275.6845, 343949027109.5315, 343968234625.59705, 343968782513.1931, 343970184474.29047, 343971437072.5415, 343976923279.70703, 343979969768.60455, 344000536869.3194, 344001081478.71747, 344017076120.0335, 344017797521.60077, 344024564761.9496, 344027676137.5707, 344040678980.39136, 344041836144.40533, 344043188049.91943, 344043683253.42706, 344053119309.2204, 344054123628.8256, 344057668678.54614, 344057871598.095, 344064362223.1291, 344064710731.49243, 344067727814.635, 344068194970.721, 344086276398.3273, 344087402018.2723, 344111968649.1922, 344112939242.2387, 344113780877.7593, 344115252307.51294, 344124188326.7191, 344124576667.9853, 344129940592.7879, 344130313996.49414, 344134956837.3499, 344137228912.0194, 344145802731.0895, 344146179973.0304, 344159002013.97705, 344159649460.1267, 344162335659.68896, 344163558596.0186, 344166673552.9502, 344168316496.5722, 344189098959.55457, 344189375807.4468, 344197394978.0733, 344197676808.8607, 344209277651.2491, 344210676760.4516, 344215164887.63135, 344215503062.3463, 344241281924.77576, 344242188713.36755, 344249170013.8938, 344249795831.91504, 344249956736.9801, 344249997143.719, 344258538295.2859, 344259334730.7183, 344275558433.1034, 344276115047.54083, 344295631456.8351, 344297092841.59717, 344314030392.5432, 344314214771.1617, 344338731674.6692, 344339333840.21063, 344348708253.42993, 344350383532.8949, 344353675759.72485, 344354093538.8471, 344384135288.0457, 344385119627.7424, 344389268723.4502, 344395168455.9911, 344400182053.20984, 344400750984.50085, 344401437624.1184, 344403257466.00684, 344410404530.4501, 344410489043.8032, 344424382744.16833, 344425156154.3647, 344436767665.667, 344437642736.6957, 344444386721.5043, 344444565524.1018, 344448778351.5263, 344449773052.4386, 344458874978.01715, 344459627843.8582, 344469948818.5021, 344470326553.50446, 344474293359.17395, 344474748127.8694, 344476261442.7354, 344477355577.6342, 344492785930.2073, 344493345421.8922, 344498413975.5403, 344498886045.7613, 344500378357.1665, 344501217536.6443, 344501758733.72253, 344502357972.4658, 344522792277.2693, 344523580984.10046, 344548625165.06714, 344548895147.8363, 344549285448.6396, 344549925106.2837, 344553765009.7954, 344555126719.1756, 344559174178.62646, 344559526908.693, 344576346760.1605, 344577119725.7472, 344608223015.22235, 344608494596.4727, 344620296594.06885, 344622711409.0316, 344654681586.79584, 344655610452.8832, 344663419477.94745, 344663648129.8612, 344680999498.6416, 344682123643.9412, 344683011117.41125, 344683529451.3806, 344686331891.5039, 344686767865.3255, 344706133955.8176, 344706494644.4926, 344708366783.96094, 344708800416.22864, 344709804725.9143, 344710125628.4486, 344731146171.0017, 344731547167.6138, 344736239929.7617, 344737243256.1761, 344737518911.7488, 344738101419.87024, 344739768050.7251, 344739966493.84143, 344740466064.78284, 344741587387.3724, 344754490305.0643, 344754524224.4741, 344769694175.44495, 344771673535.4286, 344797429714.5305, 344797685186.6651, 344798048210.7049, 344798741516.01013, 344799651981.65906, 344800193650.96185, 344817589722.63306, 344817952230.47327, 344832955246.3009, 344833064766.5437, 344839060531.57904, 344839485330.5033, 344840742014.19446, 344842641171.85406, 344858470484.60156, 344858721219.9745, 344928985492.38794, 344929767832.77075, 344940851525.1704, 344941452226.4979, 344953438360.2095, 344954249503.87775, 344958669310.3012, 344958821034.39056, 344979094536.0922, 344979787265.63306, 344984686658.455, 344985064973.3877, 345046527346.39795, 345048167758.3369, 345077058005.01587, 345078507050.603, 345080627435.58496, 345081196032.05145, 345091943705.45605, 345094135078.4335, 345103598148.31696, 345104524626.0955, 345106343662.0309, 345106417147.6993, 345132298314.91113, 345132780459.99805, 345140802667.1413, 345141285077.71594, 345145074707.51965, 345146666251.6975, 345168445888.2356, 345168690635.2771, 345175556606.1682, 345176084851.0184, 345185216430.2149, 345188007418.12244, 345191088446.42096, 345192244519.4658, 345198240443.62103, 345198783573.3384, 345202526247.944, 345203221350.06006, 345221851924.12616, 345222263429.8771, 345222919203.54803, 345224009960.7002, 345267075051.3208, 345267666462.9644, 345284642460.8811, 345285138449.2234, 345320524592.79736, 345320983883.5846, 345326409898.2361, 345327110777.16125, 345333224113.3336, 345333537574.0542, 345336522672.9054, 345337318667.99927, 345340097703.12274, 345342470613.1884, 345350503183.2196, 345351514271.44257, 345356271034.4419, 345357439012.0204, 345360572664.41394, 345361391522.43353, 345364415628.5217, 345365174395.42786, 345375725823.03424, 345376717938.8707, 345402792460.1422, 345403955846.77014, 345408301617.3425, 345410086254.9418, 345423497526.2645, 345424170907.9879, 345425142091.01917, 345426260308.5532, 345433836580.69073, 345433997951.9345, 345473705391.10645, 345474560573.4169, 345495648123.18176, 345497614869.8519, 345504944488.52075, 345505468392.46686, 345518221695.7592, 345518863590.5985, 345543825088.4138, 345544301207.478, 345563159727.84827, 345564576751.61774, 345570502185.0109, 345570947648.2616, 345580966070.20074, 345581893849.4081, 345583235471.52686, 345583785332.43054, 345593153810.4877, 345595135228.37036, 345596071338.85156, 345596437529.3395, 345609085390.11865, 345609736221.73566, 345615838036.4092, 345616671215.57605, 345624681665.23474, 345625861608.0475, 345630160045.27185, 345631788182.11725, 345637519036.89185, 345638351487.9765, 345639129987.3264, 345639697540.34717, 345643444836.3717, 345644199620.00635, 345652769437.4315, 345653240327.4059, 345678860952.239, 345679970066.0291, 345681476529.801, 345681539666.6193, 345682550893.7997, 345682860808.85004, 345683249240.8348, 345684398950.58984, 345691133422.31445, 345691852514.88525, 345710616039.92175, 345711117603.1017, 345721973274.854, 345722215767.9625, 345722896906.82263, 345723434003.4788, 345728380259.22375, 345728551329.8535, 345738091424.16516, 345739151032.11633, 345759253907.8989, 345759816634.0338, 345786230058.5762, 345786429129.5781, 345786606167.74744, 345787001119.0585, 345791075570.4098, 345791322888.13513, 345791759783.16833, 345793010978.8636, 345794394200.2399, 345795512175.015, 345804420200.89734, 345806140824.8729, 345845938391.88403, 345846439078.07935, 345850353365.00946, 345852061509.29565, 345873447626.208, 345875516101.0736, 345884564598.85443, 345884708165.32605, 345886264428.7217, 345887268059.5016, 345899597738.30365, 345900994424.28107, 345907020778.34235, 345907957872.21875, 345940712515.52356, 345940883840.20654, 345948428991.657, 345948938277.1036, 345959748984.6477, 345960279471.1939, 345972934175.6775, 345973837443.65125, 345989645900.00073, 345990061454.39185, 345999148040.981, 345999522658.99274, 346007144291.68256, 346007579785.85583, 346020916557.29517, 346023229195.97253, 346037230503.0402, 346037702043.4488, 346037892314.6935, 346038130291.7716, 346039347879.17334, 346040169822.05585, 346056882207.8563, 346057763675.1786, 346107711421.1404, 346108337944.7377, 346114770215.1704, 346116074588.4697, 346129486762.3404, 346129631950.58124, 346132243397.77606, 346132303820.1632, 346144742845.94666, 346144908961.0029, 346145631096.5207, 346146378649.7839, 346172698405.7219, 346173623946.5681, 346208302958.04663, 346208685839.6305, 346230957685.16223, 346232273017.6281, 346239423093.324, 346239558511.1312, 346245577939.8347, 346246874216.2388, 346251546489.99316, 346253977969.02637, 346264802587.00024, 346265281909.90173, 346270124939.94165, 346270412385.27246, 346278653830.8563, 346279699624.66156, 346290548334.61206, 346292941190.0691, 346294927813.84326, 346296681613.1803, 346297250121.70844, 346297663693.8751, 346298495206.86255, 346299633151.12805, 346303928549.53577, 346304194211.5511, 346317213220.9164, 346319227414.2438, 346330436162.0828, 346332251973.4497, 346333457406.2324, 346333888494.4271, 346341564061.4839, 346342948951.82214, 346356952772.1345, 346357528590.85504, 346358234001.38464, 346358726732.4473, 346360111605.4333, 346361320792.342, 346384819314.55237, 346385410905.02844, 346409134891.07996, 346410287263.67694, 346424719881.34326, 346425171422.65204, 346431455371.9945, 346431699565.8003, 346443618201.6153, 346445151270.47906, 346466327733.0332, 346468497832.9745, 346470863480.9615, 346472930323.8641, 346486640675.91235, 346487392453.1416, 346490271214.16174, 346491196708.4389, 346495477987.3356, 346498330963.9605, 346513106893.3337, 346516012959.606, 346528410103.4856, 346530822456.9542, 346539189520.24713, 346539465475.35474, 346541126494.2665, 346541163782.2268, 346543259497.00305, 346543546648.65735, 346545255892.7501, 346545724928.4636, 346556019447.5249, 346556463300.04175, 346587010808.1162, 346587584305.297, 346589832857.8516, 346590615964.0282, 346591794562.34143, 346592110317.3003, 346598664071.17053, 346599023295.5254, 346614350603.8337, 346614687360.3057, 346618749370.1289, 346619567397.4525, 346647004665.3986, 346647228355.4408, 346651490524.45166, 346652024549.798, 346657469846.11566, 346658194860.7654, 346679784921.4315, 346680192485.2803, 346681882680.56555, 346683092491.6349, 346683981356.99146, 346684577712.5149, 346710061561.5226, 346710280063.4015, 346736436455.52386, 346738773928.75415, 346742272728.5514, 346743639044.2102, 346750982497.83496, 346751170112.579, 346757911420.1498, 346758109492.3057, 346762919306.1267, 346763306642.7643, 346778368705.30725, 346778786285.5498, 346786959915.2263, 346790130383.9273, 346796673623.29724, 346797586643.5128, 346805305133.91895, 346805765509.8585, 346837614489.5685, 346838374224.8538, 346839320603.73676, 346840114405.98267, 346841339060.07263, 346843204784.25397, 346846468702.66296, 346846902192.09906, 346862555487.54, 346863239934.99524, 346864461637.6055, 346865840308.78595, 346872105084.771, 346876394348.50934, 346881267565.52014, 346882929137.1618, 346905043675.7262, 346906159348.8395, 346913447502.6628, 346915301175.3022, 346930297259.4562, 346930665724.27954, 346932513771.72845, 346933013319.30133, 346938396732.18695, 346939029588.90106, 346957835486.68, 346958573115.52234, 346978375831.1121, 346978966353.8434, 346983455363.9717, 346984399070.51587, 346986105628.5155, 346987565004.8551, 347000579671.75494, 347002164338.7437, 347007960212.8082, 347008346753.0912, 347009659409.8447, 347010053291.2185, 347018892102.5295, 347019093128.0756, 347020162965.64795, 347021065963.0006, 347025245323.3191, 347026264151.5755, 347028225621.1214, 347028880363.2772, 347061828463.75635, 347062659166.3311, 347082281625.0283, 347082710595.2596, 347096232523.42676, 347096793081.9601, 347113618508.47546, 347114526061.47266, 347129106227.78107, 347130549483.228, 347137390252.9257, 347139525367.6297, 347171165172.2328, 347171560755.5737, 347171851870.52905, 347172873659.7925, 347182714347.4009, 347183723510.91986, 347195459471.5365, 347196045129.2099, 347214448529.79144, 347214683043.5641, 347215142741.34674, 347217122156.07556, 347224717653.854, 347225811156.3573, 347252409671.0078, 347254254612.8833, 347269281084.69824, 347269749151.9425, 347278830888.104, 347280118276.6135, 347298281913.4227, 347298387382.9905, 347298622839.00806, 347299460349.4253, 347311292839.25085, 347312146223.5643, 347313187379.0442, 347313960129.54517, 347321851394.0469, 347322917665.4342, 347354536086.03766, 347356454333.43445, 347357896211.43164, 347359152227.6489, 347381397172.558, 347381595442.8063, 347397650267.6177, 347397867948.7837, 347415626569.54016, 347416637317.6119, 347418418113.69617, 347419236525.1001, 347427810929.68536, 347429159824.1744, 347452380504.77405, 347452596035.35364, 347465302414.049, 347466776697.2269, 347469100252.1509, 347470266254.0663, 347477074795.7666, 347478606806.27246, 347492906601.37024, 347494676264.24695, 347504648468.3229, 347505332112.8308, 347518491041.4362, 347518911956.39856, 347523163985.26825, 347524605939.4286, 347535703789.0104, 347536716978.70166, 347555142874.0675, 347555409265.57764, 347581691081.7815, 347582838697.7263, 347595406393.6044, 347595735160.1487, 347597080468.39307, 347599010111.5692, 347634147474.88885, 347634983602.52454, 347642366846.851, 347643094042.23413, 347648113355.97784, 347648430562.7771, 347652575751.9802, 347656682674.0167, 347658676732.901, 347659415206.765, 347676293948.2252, 347680579482.4072, 347686458906.1443, 347687884065.43933, 347696292887.894, 347697419554.2111, 347702672770.02893, 347703830838.1819, 347718617472.36743, 347720270585.6015, 347747000301.74115, 347747602588.9032, 347748416155.45447, 347748882745.9596, 347753323984.5038, 347755300128.01294, 347757277918.10156, 347757961894.6831, 347761194643.8292, 347761999654.3682, 347764938969.7456, 347766386428.5695, 347768069517.14545, 347768469707.38806, 347771464537.7843, 347771917753.63416, 347790634604.3638, 347793121157.1792, 347826941820.0847, 347828716576.62524, 347831788444.96375, 347832395174.55084, 347844720149.8274, 347846097730.067, 347849935488.4001, 347851732690.6462, 347854211246.4149, 347854360900.87585, 347878089491.2617, 347878348779.05396, 347883894518.47217, 347884547774.43524, 347892754831.2925, 347894471109.78326, 347917294950.8202, 347919068745.5587, 347925451362.1911, 347926347442.29913, 347933912449.5809, 347937925175.69147, 347948655513.9385, 347949330839.22894, 347956757508.3331, 347958851552.64453, 347961489333.42584, 347961938477.0918, 347963078862.1393, 347966402713.27924, 347973115317.6048, 347974338644.306, 347977774655.68396, 347978785038.3529, 347979638624.94116, 347983653516.6494, 348004425167.2811, 348005972347.26404, 348012689439.9556, 348013752130.58856, 348049052407.41797, 348049663218.8133, 348080172723.4033, 348081265295.2241, 348115673927.91766, 348116273351.0946, 348178606631.3657, 348181228631.21484, 348185831202.8795, 348186606785.87463, 348197627580.7395, 348198605778.4366, 348200202512.7526, 348201096803.1245, 348206710571.29376, 348207529189.229, 348208451660.86816, 348209118615.5721, 348227264646.5786, 348227812531.04675, 348250662390.3805, 348251220618.84503, 348260187207.14514, 348260891829.7468, 348292246009.8274, 348293342090.5976, 348332452671.436, 348333691400.03906, 348351218395.5288, 348352134937.37036, 348355594309.4435, 348355976046.90796, 348360681513.0985, 348361161669.75024, 348371780139.6904, 348372607690.8114, 348406005861.2961, 348407437469.3009, 348418218528.79016, 348420554364.0776, 348428910240.9752, 348430105568.8789, 348488221099.0563, 348489465825.11633, 348520492082.72473, 348520992927.663, 348533460247.75037, 348535170521.3126, 348585533591.7304, 348586286779.8739, 348593514079.1449, 348596046862.42584, 348614892797.2169, 348615861251.4441, 348624594961.5908, 348625252938.26624, 348651603306.2, 348652542063.2612, 348671729045.61786, 348672701551.0741, 348676204887.9183, 348676939481.81506, 348684929000.87415, 348687437122.4043, 348695595022.0756, 348696646645.75085, 348744575412.2306, 348747123592.5803, 348753012580.2459, 348754807684.8959, 348758860365.6606, 348760146064.4818, 348762449181.4514, 348763049947.6595, 348774434586.4389, 348775752193.0525, 348781957820.5316, 348785000412.03064, 348792920083.0884, 348794111475.2942, 348808445247.3185, 348809191188.7583, 348814601734.5358, 348817969147.43823, 348848461677.3837, 348849335829.4325, 348871810608.32056, 348873027518.3938, 348882652208.81335, 348883305332.55597, 348916732996.93616, 348917408685.98926, 348929170530.0256, 348929597612.61725, 348940113314.6554, 348941296633.97675, 348951621489.5476, 348952312797.1613, 348955941629.93805, 348956835661.2318, 348968770577.2116, 348970207590.6661, 348992383171.3816, 348992586054.04663, 349005289783.6537, 349008251048.0397, 349037642059.2378, 349038089197.6634, 349052513405.0194, 349053911814.5408, 349069328104.1559, 349070035724.8635, 349087344332.5445, 349087706545.8087, 349116154466.74506, 349118723004.782, 349155989876.8189, 349156305926.246, 349172618058.60925, 349173529992.43365, 349195147329.0299, 349196023365.5701, 349224180998.30786, 349224276472.1619, 349233122402.8959, 349234768709.61475, 349249354504.33777, 349250273867.9761, 349271960276.85297, 349272880611.5724, 349278028256.72906, 349280042285.9366, 349281892545.32794, 349282128650.7622, 349297183005.12854, 349298568248.2971, 349304610878.94116, 349306404105.9673, 349318075878.9252, 349320045234.13007, 349325279021.2947, 349327235478.0902, 349337738857.7047, 349338542190.7373, 349363052778.91925, 349363193776.97034, 349383512497.91376, 349384866079.9338, 349400274876.9574, 349400916021.3418, 349407882560.9122, 349410439430.95685, 349436855422.17236, 349438445320.9595, 349470467178.88904, 349473021363.9264, 349484209443.07385, 349486362653.55505, 349514365535.5697, 349517276194.9608, 349543942845.07367, 349543983295.53125, 349550632388.9324, 349551123751.6217, 349614376365.4463, 349616030045.26917, 349617510783.7573, 349618083634.95105, 349631244708.47925, 349632322218.7101, 349644702696.1499, 349647048043.9386, 349653945851.8179, 349656300272.1334, 349682962466.28815, 349683983665.572, 349686869563.87177, 349687830317.80597, 349695034623.2377, 349695791402.4723, 349708444786.70337, 349710053421.6743, 349715708515.78, 349716090070.5085, 349722009097.4812, 349723984121.87915, 349729806238.8706, 349730250051.09674, 349746725828.7781, 349748492064.8555, 349758294411.1654, 349758621345.8037, 349763227428.1371, 349763530841.00244, 349811965195.5513, 349813942325.08875, 349890836272.9337, 349891281038.0031, 349956350884.68396, 349956893938.89374, 349989554436.4352, 349991062805.631, 350013296607.473, 350013810402.4506, 350019579323.09875, 350020565767.0813, 350023186933.22107, 350024382523.29297, 350037412563.1448, 350038998478.1477, 350065841695.8469, 350066371348.9746, 350071301463.98676, 350071991290.91626, 350088036635.15564, 350089086984.10315, 350093991571.2753, 350094848028.4238, 350097142947.76733, 350099355956.1081, 350110533403.99146, 350110877288.3372, 350206801594.1199, 350207906472.6458, 350211959732.156, 350212711194.68945, 350240016272.8083, 350240449383.29407, 350252740650.673, 350254136655.6157, 350256915764.3229, 350257870547.2514, 350282006182.62317, 350282645277.7245, 350285661186.67175, 350286921505.728, 350294702414.6851, 350298477275.68616, 350347373887.5419, 350348277926.4951, 350385663004.1786, 350386454920.9894, 350389095289.37744, 350389517191.4657, 350409421599.9376, 350410397998.1133, 350434735231.79285, 350435413229.3598, 350449157621.5273, 350450861430.2614, 350477901523.5707, 350479638957.37646, 350521734742.04016, 350522095448.433, 350530337293.7371, 350530826205.0653, 350560461393.4721, 350561448071.4686, 350616054796.29895, 350617389631.5895, 350624913407.3281, 350627353905.23096, 350633711780.00525, 350634526867.14777, 350635925722.87805, 350636509895.7567, 350648300829.46295, 350650109856.2654, 350669555075.77905, 350672047337.79675, 350696429970.19214, 350696726874.3579, 350708629209.38007, 350709236937.26196, 350748893462.548, 350749777095.657, 350792712431.08545, 350793061292.9927, 350807840897.3639, 350812838401.6832, 350835099274.8179, 350836206289.98987, 350845169826.6044, 350846200121.38727, 350885348473.5089, 350886057531.6667, 350960774709.37427, 350961186600.957, 351021669699.57935, 351023458000.9564, 351028539622.1813, 351029560648.79065, 351033305143.5968, 351035306425.3582, 351104971798.1122, 351107263581.31885, 351118757843.9631, 351119761009.8447, 351139636742.7588, 351141667361.5382, 351162846868.9409, 351166214558.5858, 351170316121.16736, 351171288129.0453, 351186625751.8944, 351188427544.16125, 351197060587.90906, 351198819426.6082, 351206244216.293, 351207105467.3989, 351210357459.0967, 351211781485.3635, 351237187008.5555, 351240387270.1464, 351259715945.1532, 351261638943.808, 351269033613.89246, 351271230870.603, 351274555712.9116, 351276051252.12994, 351325615120.1554, 351328226205.47437, 351333045309.7263, 351333826091.27246, 351375563099.8485, 351378105614.4921, 351410102169.0271, 351411139450.19714, 351422813368.8658, 351425019503.22424, 351437335895.89954, 351440235688.72253, 351445257070.64594, 351446167527.15936, 351471999598.57446, 351473215911.75366, 351492131293.58936, 351493431507.5868, 351516782621.2073, 351518168797.74744, 351552783860.19165, 351553490736.56555, 351557947164.89526, 351560700446.7461, 351563496833.3437, 351564102543.21936, 351588390438.20593, 351590282699.65906, 351596356393.0719, 351596690629.8111, 351607619009.01184, 351608708940.56354, 351639999374.6805, 351640357228.61, 351644290032.0895, 351648953833.317, 351658327195.8264, 351658847536.4425, 351674512267.9966, 351675339918.14417, 351675532864.0012, 351676374678.64325, 351688082476.3176, 351689569806.7679, 351792298188.8402, 351793457569.6001, 351845673405.7766, 351846675829.84485, 351866735945.9624, 351872715567.28186, 351922960476.7336, 351923894141.96295, 351947393172.303, 351953147331.4663, 351974700000.6796, 351976315501.3025, 351996517879.60236, 351998037738.8901, 352004428023.5202, 352006461617.8704, 352015150273.0452, 352015665441.0121, 352033786741.0731, 352037523786.7704, 352045763046.0112, 352045896055.4828, 352085247044.36694, 352086097788.6968, 352127425808.56995, 352129906765.23694, 352155811633.6748, 352156784723.2165, 352177272223.0454, 352178906267.9125, 352182322954.21423, 352186947559.86707, 352254953352.1018, 352255961751.7567, 352345392085.4629, 352347752497.81793, 352359509440.20374, 352360296982.2881, 352373137665.50806, 352379974206.73627, 352390303434.83325, 352396801232.53357, 352408490519.0309, 352411069422.7533, 352413542336.1728, 352414822364.9094, 352417888664.08075, 352422420201.393, 352534232820.1283, 352535647143.63245, 352578821161.10406, 352580927440.1842, 352581370089.3335, 352582583987.9188, 352644834567.3958, 352648621754.2131, 352688799643.36554, 352689699305.7682, 352700738293.4568, 352701149176.4513, 352754256463.45056, 352755870794.546, 352758717927.65405, 352761315101.2378, 352814374294.18835, 352816722844.2904, 352853497839.0083, 352854853338.1427, 352878053483.02014, 352880801749.28485, 352898584862.1707, 352906389321.5666, 352963668280.2093, 352964629881.5419, 352967150937.1443, 352970337437.638, 353028485731.5587, 353030003104.48254, 353044347639.9275, 353045604534.7545, 353071758308.7225, 353074922678.2581, 353105965602.9634, 353107064450.25073, 353119679643.6408, 353121777572.05304, 353145823848.7676, 353154777086.4304, 353156177650.7689, 353157092077.93854, 353180786478.9009, 353183544114.89465, 353191108234.8091, 353191313256.8911, 353195817646.02954, 353196364675.51465, 353210474659.74414, 353212596101.9728, 353239480211.8364, 353240730647.4575, 353250099385.92004, 353250575319.0597, 353375761740.6405, 353379171258.03357, 353496392760.9479, 353499270230.7788, 353513276485.42834, 353518486715.68207, 353676222304.1702, 353679335243.14874, 353702196975.6692, 353708213139.5483, 353755279710.9872, 353757878976.6068, 353771919370.8755, 353774633429.0884, 353779241482.3561, 353781632501.728, 353799645161.42804, 353805197615.40485, 353827847599.3716, 353831781474.23926, 353841291656.21796, 353844609247.08295, 353870200177.4531, 353871549350.57605, 353926892354.79395, 353928754609.03375, 353946184211.95337, 353950105277.354, 353962975849.1685, 353966344294.9165, 354065063049.6039, 354067660259.4153, 354078146917.4055, 354087637632.8058, 354095498434.4474, 354098891339.56165, 354173165239.15656, 354176509859.6543, 354186154747.0796, 354190993507.01685, 354260124643.4002, 354260631619.812, 354268407123.53534, 354271531023.11304, 354363318354.2976, 354365459036.7529, 354390249443.83167, 354392645645.89386, 354421615863.6674, 354423457450.2798, 354452884662.77344, 354457575512.7363, 354531701320.9669, 354531957110.2, 354615699192.8479, 354620925805.93665, 354652619068.2726, 354653577356.8603, 354671766078.50134, 354674512307.53625, 354742225111.8052, 354743132527.8036, 354771399000.3485, 354773995134.9153, 354803837582.7103, 354807970715.0529, 354906418408.72565, 354910820312.93054, 354917721987.9478, 354919269059.9114, 354922516968.217, 354923594591.51917, 355085249783.87335, 355086901669.923, 355162770392.3739, 355165313461.18164, 355207030088.37, 355210455724.03345, 355218524580.56696, 355224633771.9377, 355252551026.6527, 355254673079.1555, 355337775758.04944, 355340156037.86304, 355462341499.31793, 355478238956.7078, 355495343716.0656, 355497966565.9685, 355528230677.4661, 355532379966.1681, 355599548841.21924, 355600872479.5918, 355786814140.7041, 355789187285.00653, 355811925747.4174, 355813789882.21643, 355844916046.10266, 355850322964.69946, 355918735879.87573, 355925377265.4185, 356006434267.22253, 356009074438.1767, 356012552625.04517, 356014825208.3279, 356061560044.34357, 356069989453.83966, 356121254236.3459, 356123427262.464, 356153096322.3667, 356155465677.59326, 356243280449.3141, 356244451377.3501, 356389643596.5684, 356399289336.8675, 356524048929.562, 356528407977.9621, 356543809124.5133, 356549297565.13257, 356666236319.46423, 356667279262.97327, 356715845954.9624, 356724209504.13556, 356744134072.2019, 356745239888.8865, 356748449965.8209, 356755439866.1189, 356870947173.2815, 356873901364.80334, 356876119508.0682, 356877062838.56946, 356918077978.4652, 356918715391.35144, 357026613482.14734, 357032638406.1391, 357241392406.8991, 357246057133.3085, 357350700222.0048, 357351959839.4482, 357370790955.96106, 357372500345.8603, 357417133116.6101, 357424379867.43835, 357682793061.6817, 357687827469.8739, 357691375782.0437, 357692791312.4834, 357742507718.48486, 357744448491.39075, 357799779233.2908, 357804029382.47125, 358023634934.6804, 358026525003.3423, 358034751182.264, 358047333787.30286, 358159858292.89465, 358162590328.21, 358240799353.7874, 358250260409.9158, 358272457757.51196, 358282162615.03546, 358348020235.37604, 358358755072.1373, 358364109092.3468, 358378379648.9832, 358392492439.13947, 358398744599.2617, 358571011470.46423, 358578111352.5853, 358703931347.8324, 358711753385.7974, 358771524488.3067, 358773676140.98914, 358790466087.7562, 358798944271.46106, 359191288056.97235, 359193829547.23346, 359217005015.4872, 359229010604.1361, 359243777260.03467, 359252995197.61804, 359260546427.49854, 359274785675.2842, 359308012322.44055, 359309755884.02167, 359571827874.3716, 359574684325.15027, 359871367397.74146, 359871622590.88995, 360307421269.76587, 360323235387.9359, 360456235075.5842, 360469859424.2519, 360508890740.5187, 360514110192.4118, 360557715526.41614, 360568138639.30164, 360716137639.0639, 360724083182.87585, 360738391338.2882, 360758604631.59985, 361051348026.05774, 361061427678.1658, 361330853735.4225, 361334335146.5033, 361495803442.16516, 361511489675.32135, 361536258434.853, 361582147996.19934, 361641222093.4508, 361647114901.026, 361728856403.0641, 361741693587.38696, 361754475237.14087, 361764628772.76184, 361861499373.9394, 361884587496.1391, 362101393148.9031, 362108402281.29395, 362235895726.0354, 362242942784.1252, 362290581579.75464, 362305316794.775, 362733238862.93195, 362772334739.104, 362975803511.90967, 362982986284.2195, 363100846346.4607, 363108619065.39417, 363120970485.64777, 363127252159.61224, 363311953520.4079, 363316453298.73425, 363520197043.365, 363571558703.65564, 363622652868.7648, 363658934328.29724, 363792226619.78955, 363803984384.1691, 363819250511.9223, 363840219771.71045, 364600034383.204, 364620423051.2483, 364985143895.985, 364995595399.49475, 365144625334.42944, 365150738797.31024, 365358514656.7214, 365389096442.01886, 365416776098.21985, 365431760261.4072, 366111281977.7727, 366122392472.45135, 367552168739.31555, 367585398585.708, 367825703659.9105, 367849123989.06287, 368350035557.6409, 368423077319.3358, 368754601023.8314, 368787920797.443, 370162338115.0126, 370322598492.0758, 370627365791.1571, 370673950113.85706])
def eqenergy(rows):
    return np.sum(rows,axis=1)
def classify(rows):
    energys=eqenergy(rows)
    start_label=1
    def thresh_search(input_energys):
        numers = np.searchsorted(energy_thresholds, input_energys, side='left')-1
        indys=np.argwhere(np.logical_and(numers<len(energy_thresholds),numers>=0)).reshape(-1)
        defaultindys=np.argwhere(np.logical_not(np.logical_and(numers<len(energy_thresholds),numers>=0))).reshape(-1)
        outputs=np.zeros(input_energys.shape[0])
        outputs[indys]=(numers[indys]+start_label)%2
        outputs[defaultindys]=0
        return outputs
    return thresh_search(energys)

numthresholds=3486


# Main method
model_cap=numthresholds
if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Predictor trained on '+TRAINFILE)
    parser.add_argument('csvfile', type=str, help='CSV file containing test set (unlabeled).')
    parser.add_argument('-validate', action='store_true', help='Validation mode. csvfile must be labeled. Output is classification statistics rather than predictions.')
    parser.add_argument('-cleanfile',action='store_true',help='Use this flag to save prediction time if the csvfile you are passing has already been preprocessed. Implies headerless.')
    parser.add_argument('-headerless', help='Do not treat the first line of csvfile as a header.', action='store_true')
    args = parser.parse_args()
    faulthandler.enable()
    if numthresholds<10:
        if not args.validate: # Then predict
            if args.cleanfile:
                with open(args.csvfile,'r') as cleancsvfile:
                    cleancsvreader = csv.reader(cleancsvfile)
                    for cleanrow in cleancsvreader:
                        if len(cleanrow)==0:
                            continue
                    print(str(','.join(str(j) for j in ([i for i in cleanrow])))+','+str(int(classify(cleanrow))))
            else:
                tempdir=tempfile.gettempdir()
                cleanfile=tempdir+os.sep+"clean.csv"
                clean(args.csvfile,cleanfile, -1, args.headerless, True)
                with open(cleanfile,'r') as cleancsvfile, open(args.csvfile,'r') as dirtycsvfile:
                    cleancsvreader = csv.reader(cleancsvfile)
                    dirtycsvreader = csv.reader(dirtycsvfile)
                    if (not args.headerless):
                            print(','.join(next(dirtycsvreader, None)+['Prediction']))
                    for cleanrow,dirtyrow in zip(cleancsvreader,dirtycsvreader):
                        if len(cleanrow)==0:
                            continue
                        print(str(','.join(str(j) for j in ([i for i in dirtyrow])))+','+str(int(classify(cleanrow))))
                os.remove(cleanfile)
                
        else: # Then validate this predictor
            if n_classes==2:
                tempdir=tempfile.gettempdir()
                temp_name = next(tempfile._get_candidate_names())
                cleanvalfile=tempdir+os.sep+temp_name
                clean(args.csvfile,cleanvalfile, -1, args.headerless)
                with open(cleanvalfile,'r') as valcsvfile:
                    count,correct_count,num_TP,num_TN,num_FP,num_FN,num_class_1,num_class_0=0,0,0,0,0,0,0,0
                    valcsvreader = csv.reader(valcsvfile)
                    for i,valrow in enumerate(valcsvreader):
                        if len(valrow)==0:
                            continue
                        if int(classify(valrow[:-1]))==int(float(valrow[-1])):
                            correct_count+=1
                            if int(float(valrow[-1]))==1:
                                num_class_1+=1
                                num_TP+=1
                            else:
                                num_class_0+=1
                                num_TN+=1
                        else:
                            if int(float(valrow[-1]))==1:
                                num_class_1+=1
                                num_FN+=1
                            else:
                                num_class_0+=1
                                num_FP+=1
                        count+=1
            else:
                tempdir=tempfile.gettempdir()
                temp_name = next(tempfile._get_candidate_names())
                cleanvalfile=tempdir+os.sep+temp_name
                clean(args.csvfile,cleanvalfile, -1, args.headerless)
                with open(cleanvalfile,'r') as valcsvfile:
                    count,correct_count=0,0
                    valcsvreader = csv.reader(valcsvfile)
                    numeachclass={}
                    for i,valrow in enumerate(valcsvreader):
                        if len(valrow)==0:
                            continue
                        if int(classify(valrow[:-1]))==int(float(valrow[-1])):
                            correct_count+=1
                        if int(float(valrow[-1])) in numeachclass.keys():
                            numeachclass[int(float(valrow[-1]))]+=1
                        else:
                            numeachclass[int(float(valrow[-1]))]=0
                        count+=1
        if n_classes==2:

            FN=float(num_FN)*100.0/float(count)
            FP=float(num_FP)*100.0/float(count)
            TN=float(num_TN)*100.0/float(count)
            TP=float(num_TP)*100.0/float(count)
            num_correct=correct_count

            if int(num_TP+num_FN)!=0:
                TPR=num_TP/(num_TP+num_FN) # Sensitivity, Recall
            if int(num_TN+num_FP)!=0:
                TNR=num_TN/(num_TN+num_FP) # Specificity, 
            if int(num_TP+num_FP)!=0:
                PPV=num_TP/(num_TP+num_FP) # Recall
            if int(num_FN+num_TP)!=0:
                FNR=num_FN/(num_FN+num_TP) # Miss rate
            if int(2*num_TP+num_FP+num_FN)!=0:
                FONE=2*num_TP/(2*num_TP+num_FP+num_FN) # F1 Score
            if int(num_TP+num_FN+num_FP)!=0:
                TS=num_TP/(num_TP+num_FN+num_FP) # Critical Success Index

            randguess=int(float(10000.0*max(num_class_1,num_class_0))/count)/100.0
            modelacc=int(float(num_correct*10000)/count)/100.0

            print("System Type:                        Binary classifier")
            print("Best-guess accuracy:                {:.2f}%".format(randguess))
            print("Model accuracy:                     {:.2f}%".format(modelacc)+" ("+str(int(num_correct))+"/"+str(count)+" correct)")
            print("Improvement over best guess:        {:.2f}%".format(modelacc-randguess)+" (of possible "+str(round(100-randguess,2))+"%)")
            print("Model capacity (MEC):               {:.0f} bits".format(model_cap))
            print("Generalization ratio:               {:.2f}".format(int(float(num_correct*100)/model_cap)/100.0)+" bits/bit")
            print("Model efficiency:                   {:.2f}%/parameter".format(int(100*(modelacc-randguess)/model_cap)/100.0))
            print("System behavior")
            print("True Negatives:                     {:.2f}%".format(TN)+" ("+str(int(num_TN))+"/"+str(count)+")")
            print("True Positives:                     {:.2f}%".format(TP)+" ("+str(int(num_TP))+"/"+str(count)+")")
            print("False Negatives:                    {:.2f}%".format(FN)+" ("+str(int(num_FN))+"/"+str(count)+")")
            print("False Positives:                    {:.2f}%".format(FP)+" ("+str(int(num_FP))+"/"+str(count)+")")
            if int(num_TP+num_FN)!=0:
                print("True Pos. Rate/Sensitivity/Recall:  {:.2f}".format(TPR))
            if int(num_TN+num_FP)!=0:
                print("True Neg. Rate/Specificity:         {:.2f}".format(TNR))
            if int(num_TP+num_FP)!=0:
                print("Precision:                          {:.2f}".format(PPV))
            if int(2*num_TP+num_FP+num_FN)!=0:
                print("F-1 Measure:                        {:.2f}".format(FONE))
            if int(num_TP+num_FN)!=0:
                print("False Negative Rate/Miss Rate:      {:.2f}".format(FNR))
            if int(num_TP+num_FN+num_FP)!=0:    
                print("Critical Success Index:             {:.2f}".format(TS))
        else:
            num_correct=correct_count
            modelacc=int(float(num_correct*10000)/count)/100.0
            randguess=round(max(numeachclass.values())/sum(numeachclass.values())*100,2)
            print("System Type:                        "+str(n_classes)+"-way classifier")
            print("Best-guess accuracy:                {:.2f}%".format(randguess))
            print("Model accuracy:                     {:.2f}%".format(modelacc)+" ("+str(int(num_correct))+"/"+str(count)+" correct)")
            print("Improvement over best guess:        {:.2f}%".format(modelacc-randguess)+" (of possible "+str(round(100-randguess,2))+"%)")
            print("Model capacity (MEC):               {:.0f} bits".format(model_cap))
            print("Generalization ratio:               {:.2f}".format(int(float(num_correct*100)/model_cap)/100.0)+" bits/bit")








    else:
        if not args.validate: # Then predict
            if args.cleanfile:
                cleanarr=np.loadtxt(args.csvfile,delimiter=',',dtype='float64')
                outputs=classify(cleanarr)
                for k,o in enumerate(outputs):

                    print(str(','.join(str(j) for j in ([i for i in cleanarr[k]])))+','+str(int(o)))
            else:
                tempdir=tempfile.gettempdir()
                cleanfile=tempdir+os.sep+"clean.csv"
                clean(args.csvfile,cleanfile, -1, args.headerless, True)
                with open(args.csvfile,'r') as dirtycsvfile:
                    dirtycsvreader = csv.reader(dirtycsvfile)
                    if (not args.headerless):
                            print(','.join(next(dirtycsvreader, None)+['Prediction']))
                    cleanarr=np.loadtxt(cleanfile,delimiter=',',dtype='float64')
                    outputs=classify(cleanarr)
                    for k,dirtyrow in enumerate(dirtycsvreader):

                        print(str(','.join(str(j) for j in ([i for i in dirtyrow])))+','+str(int(outputs[k])))
                os.remove(cleanfile)
                
        else: # Then validate this predictor
            if n_classes==2:
                tempdir=tempfile.gettempdir()
                temp_name = next(tempfile._get_candidate_names())
                cleanvalfile=tempdir+os.sep+temp_name

                clean(args.csvfile,cleanvalfile, -1, args.headerless)
                cleanarr=np.loadtxt(cleanvalfile,delimiter=',',dtype='float64')
                outputs=classify(cleanarr[:,:-1])
                count,correct_count,num_TP,num_TN,num_FP,num_FN,num_class_1,num_class_0=0,0,0,0,0,0,0,0
                correct_count=int(np.sum(outputs.reshape(-1)==cleanarr[:,-1].reshape(-1)))
                count=outputs.shape[0]
                num_TP=int(np.sum(np.logical_and(outputs.reshape(-1)==1,cleanarr[:,-1].reshape(-1)==1)))
                num_TN=int(np.sum(np.logical_and(outputs.reshape(-1)==0,cleanarr[:,-1].reshape(-1)==0)))
                num_FN=int(np.sum(np.logical_and(outputs.reshape(-1)==0,cleanarr[:,-1].reshape(-1)==1)))
                num_FP=int(np.sum(np.logical_and(outputs.reshape(-1)==1,cleanarr[:,-1].reshape(-1)==0)))
                num_class_0=int(np.sum(cleanarr[:,-1].reshape(-1)==0))
                num_class_1=int(np.sum(cleanarr[:,-1].reshape(-1)==1))
            else:
                tempdir=tempfile.gettempdir()
                temp_name = next(tempfile._get_candidate_names())
                cleanvalfile=tempdir+os.sep+temp_name

                clean(args.csvfile,cleanvalfile, -1, args.headerless)
                cleanarr=np.loadtxt(cleanvalfile,delimiter=',',dtype='float64')
                outputs=classify(cleanarr[:,:-1])
                count,correct_count=0,0
                numeachclass={}
                for k,o in enumerate(outputs):
                    if int(o)==int(float(cleanarr[k,-1])):
                        correct_count+=1
                    if int(float(cleanarr[k,-1])) in numeachclass.keys():
                        numeachclass[int(float(cleanarr[k,-1]))]+=1
                    else:
                        numeachclass[int(float(cleanarr[k,-1]))]=0
                    count+=1


    

        if n_classes==2:

            FN=float(num_FN)*100.0/float(count)
            FP=float(num_FP)*100.0/float(count)
            TN=float(num_TN)*100.0/float(count)
            TP=float(num_TP)*100.0/float(count)
            num_correct=correct_count

            if int(num_TP+num_FN)!=0:
                TPR=num_TP/(num_TP+num_FN) # Sensitivity, Recall
            if int(num_TN+num_FP)!=0:
                TNR=num_TN/(num_TN+num_FP) # Specificity, 
            if int(num_TP+num_FP)!=0:
                PPV=num_TP/(num_TP+num_FP) # Recall
            if int(num_FN+num_TP)!=0:
                FNR=num_FN/(num_FN+num_TP) # Miss rate
            if int(2*num_TP+num_FP+num_FN)!=0:
                FONE=2*num_TP/(2*num_TP+num_FP+num_FN) # F1 Score
            if int(num_TP+num_FN+num_FP)!=0:
                TS=num_TP/(num_TP+num_FN+num_FP) # Critical Success Index

            randguess=int(float(10000.0*max(num_class_1,num_class_0))/count)/100.0
            modelacc=int(float(num_correct*10000)/count)/100.0

            print("System Type:                        Binary classifier")
            print("Best-guess accuracy:                {:.2f}%".format(randguess))
            print("Model accuracy:                     {:.2f}%".format(modelacc)+" ("+str(int(num_correct))+"/"+str(count)+" correct)")
            print("Improvement over best guess:        {:.2f}%".format(modelacc-randguess)+" (of possible "+str(round(100-randguess,2))+"%)")
            print("Model capacity (MEC):               {:.0f} bits".format(model_cap))
            print("Generalization ratio:               {:.2f}".format(int(float(num_correct*100)/model_cap)/100.0)+" bits/bit")
            print("Model efficiency:                   {:.2f}%/parameter".format(int(100*(modelacc-randguess)/model_cap)/100.0))
            print("System behavior")
            print("True Negatives:                     {:.2f}%".format(TN)+" ("+str(int(num_TN))+"/"+str(count)+")")
            print("True Positives:                     {:.2f}%".format(TP)+" ("+str(int(num_TP))+"/"+str(count)+")")
            print("False Negatives:                    {:.2f}%".format(FN)+" ("+str(int(num_FN))+"/"+str(count)+")")
            print("False Positives:                    {:.2f}%".format(FP)+" ("+str(int(num_FP))+"/"+str(count)+")")
            if int(num_TP+num_FN)!=0:
                print("True Pos. Rate/Sensitivity/Recall:  {:.2f}".format(TPR))
            if int(num_TN+num_FP)!=0:
                print("True Neg. Rate/Specificity:         {:.2f}".format(TNR))
            if int(num_TP+num_FP)!=0:
                print("Precision:                          {:.2f}".format(PPV))
            if int(2*num_TP+num_FP+num_FN)!=0:
                print("F-1 Measure:                        {:.2f}".format(FONE))
            if int(num_TP+num_FN)!=0:
                print("False Negative Rate/Miss Rate:      {:.2f}".format(FNR))
            if int(num_TP+num_FN+num_FP)!=0:    
                print("Critical Success Index:             {:.2f}".format(TS))
        else:
            num_correct=correct_count
            modelacc=int(float(num_correct*10000)/count)/100.0
            randguess=round(max(numeachclass.values())/sum(numeachclass.values())*100,2)
            print("System Type:                        "+str(n_classes)+"-way classifier")
            print("Best-guess accuracy:                {:.2f}%".format(randguess))
            print("Model accuracy:                     {:.2f}%".format(modelacc)+" ("+str(int(num_correct))+"/"+str(count)+" correct)")
            print("Improvement over best guess:        {:.2f}%".format(modelacc-randguess)+" (of possible "+str(round(100-randguess,2))+"%)")
            print("Model capacity (MEC):               {:.0f} bits".format(model_cap))
            print("Generalization ratio:               {:.2f}".format(int(float(num_correct*100)/model_cap)/100.0)+" bits/bit")






        os.remove(cleanvalfile)
    

