#!/usr/bin/env python3
#
# This code is was produced by an alpha version of Brainome Daimensions(tm) and is 
# licensed under GNU GPL v2.0 or higher. For details, please see: 
# https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html
#
#
# Output of Brainome Daimensions(tm) 0.93 Table Compiler v0.94.
# Invocation: btc https://www.openml.org/data/get_csv/53997/KDDCup09_upselling.arff -o Predictors/KDDCup09-upselling_QC.py -target UPSELLING -cm {'-1':0,'1':1} -stopat 95.17 -f QC -e 100 --yes
# Total compiler execution time: 0:48:51.96. Finished on: Apr-22-2020 07:25:31.
# This source code requires Python 3.
#
"""
System Type:                        Binary classifier
Best-guess accuracy:                92.63%
Model accuracy:                     94.66% (47332/50000 correct)
Improvement over best guess:        2.03% (of possible 7.37%)
Model capacity (MEC):               4046 bits
Generalization ratio:               11.69 bits/bit
Model efficiency:                   0.00%/parameter
System behavior
True Negatives:                     90.10% (45052/50000)
True Positives:                     4.56% (2280/50000)
False Negatives:                    2.80% (1402/50000)
False Positives:                    2.53% (1266/50000)
True Pos. Rate/Sensitivity/Recall:  0.62
True Neg. Rate/Specificity:         0.97
Precision:                          0.64
F-1 Measure:                        0.63
False Negative Rate/Miss Rate:      0.38
Critical Success Index:             0.46

"""

# Imports -- Python3 standard library
import sys
import math
import os
import argparse
import tempfile
import csv
import binascii
import faulthandler

from bisect import bisect_left
# Imports -- external
import numpy as np # For numpy see: http://numpy.org
from numpy import array

# Magic constants follow
# I/O buffer for clean. Reduce this constant for low memory devices. 
IOBUF = 100000000

# Ugly workaround for large classifiers
sys.setrecursionlimit(1000000)

# Training file given to compiler
TRAINFILE = "KDDCup09_upselling.csv"


#Number of attributes
num_attr = 230
n_classes = 2


# Preprocessor for CSV files
def preprocess(inputcsvfile, outputcsvfile, headerless=False, testfile=False, target='', ignorecolumns=[], ignorelabels=[]):
    il=[]
    
    ignorelabels=[]
    ignorecolumns=[]
    target="UPSELLING"


    if (testfile):
        target=''
    
    with open(outputcsvfile, "w+") as outputfile:
        with open(inputcsvfile) as csvfile:
            reader = csv.reader(csvfile)
            if (headerless==False):
                header=next(reader, None)
                try:
                    if (target!=''): 
                        hc=header.index(target)
                    else:
                        hc=len(header)-1
                        target=header[hc]
                except:
                    raise NameError("Target '"+target+"' not found! Header must be same as in file passed to btc.")
                for i in range(0,len(ignorecolumns)):
                    try:
                        col=header.index(ignorecolumns[i])
                        if (col==hc):
                            raise ValueError("Attribute '"+ignorecolumns[i]+"' is the target. Header must be same as in file passed to btc.")
                        il=il+[col]
                    except ValueError:
                        raise
                    except:
                        raise NameError("Attribute '"+ignorecolumns[i]+"' not found in header. Header must be same as in file passed to btc.")
                for i in range(0,len(header)):      
                    if (i==hc):
                        continue
                    if (i in il):
                        continue
                    print(header[i]+",", end = '', file=outputfile)
                print(header[hc],file=outputfile)

                for row in csv.DictReader(open(inputcsvfile)):
                    if (row[target] in ignorelabels):
                        continue
                    for name in header:
                        if (name in ignorecolumns):
                            continue
                        if (name==target):
                            continue
                        if (',' in row[name]):
                            print ('"'+row[name]+'"'+",",end = '', file=outputfile)
                        else:
                            print (row[name]+",",end = '', file=outputfile)
                    print (row[target], file=outputfile)

            else:
                try:
                    if (target!=""): 
                        hc=int(target)
                    else:
                        hc=-1
                except:
                    raise NameError("No header found but attribute name given as target. Header must be same as in file passed to btc.")
                for i in range(0,len(ignorecolumns)):
                    try:
                        col=int(ignorecolumns[i])
                        if (col==hc):
                            raise ValueError("Attribute "+str(col)+" is the target. Cannot ignore. Header must be same as in file passed to btc.")
                        il=il+[col]
                    except ValueError:
                        raise
                    except:
                        raise ValueError("No header found but attribute name given in ignore column list. Header must be same as in file passed to btc.")
                for row in reader:
                    if (hc==-1):
                        hc=len(row)-1
                    if (row[hc] in ignorelabels):
                        continue
                    for i in range(0,len(row)):
                        if (i in il):
                            continue
                        if (i==hc):
                            continue
                        if (',' in row[i]):
                            print ('"'+row[i]+'"'+",",end = '', file=outputfile)
                        else:
                            print(row[i]+",",end = '', file=outputfile)
                    print (row[hc], file=outputfile)

def clean(filename, outfile, rounding=-1, headerless=False, testfile=False):
    
    clean.classlist = []
    clean.testfile = testfile
    clean.mapping = {}
    clean.mapping={'-1':0,'1':1}

    def convert(cell):
        value = str(cell)
        try:
            result = int(value)
            return result
        except:
            try:
                result = float(value)
                if (rounding != -1):
                    result = int(result * math.pow(10, rounding)) / math.pow(10, rounding)
                return result
            except:
                result = (binascii.crc32(value.encode('utf8')) % (1 << 32))
                return result

    # function to return key for any value 
    def get_key(val, clean_classmapping):
        if clean_classmapping == {}:
            return val
        for key, value in clean_classmapping.items(): 
            if val == value:
                return key
        if val not in list(clean_classmapping.values):
            raise ValueError("Label key does not exist")

    def convertclassid(cell):
        if (clean.testfile):
            return convert(cell)
        value = str(cell)
        if (value == ''):
            raise ValueError("All cells in the target column must contain a class label.")

        if (not clean.mapping == {}):
            result = -1
            try:
                result = clean.mapping[cell]
            except:
                raise ValueError("Class label '" + value + "' encountered in input not defined in user-provided mapping.")
            if (not result == int(result)):
                raise ValueError("Class labels must be mapped to integer.")
            if (not str(result) in clean.classlist):
                clean.classlist = clean.classlist + [str(result)]
            return result
        try:
            result = float(cell)
            if (rounding != -1):
                result = int(result * math.pow(10, rounding)) / math.pow(10, rounding)
            else:
                result = int(int(result * 100) / 100)  # round classes to two digits

            if (not str(result) in clean.classlist):
                clean.classlist = clean.classlist + [str(result)]
        except:
            result = (binascii.crc32(value.encode('utf8')) % (1 << 32))
            if (result in clean.classlist):
                result = clean.classlist.index(result)
            else:
                clean.classlist = clean.classlist + [result]
                result = clean.classlist.index(result)
            if (not result == int(result)):
                raise ValueError("Class labels must be mappable to integer.")
        finally:
            if (result < 0):
                raise ValueError("Integer class labels must be positive and contiguous.")

        return result

    rowcount = 0
    with open(filename) as csv_file:
        reader = csv.reader(csv_file)
        f = open(outfile, "w+")
        if (headerless == False):
            next(reader, None)
        outbuf = []
        for row in reader:
            if (row == []):  # Skip empty rows
                continue
            rowcount = rowcount + 1
            rowlen = num_attr
            if (not testfile):
                rowlen = rowlen + 1    
            if (not len(row) == rowlen):
                raise ValueError("Column count must match trained predictor. Row " + str(rowcount) + " differs.")
            i = 0
            for elem in row:
                if(i + 1 < len(row)):
                    outbuf.append(str(convert(elem)))
                    outbuf.append(',')
                else:
                    classid = str(convertclassid(elem))
                    outbuf.append(classid)
                i = i + 1
            if (len(outbuf) < IOBUF):
                outbuf.append(os.linesep)
            else:
                print(''.join(outbuf), file=f)
                outbuf = []
        print(''.join(outbuf), end="", file=f)
        f.close()

        if (testfile == False and not len(clean.classlist) >= 2):
            raise ValueError("Number of classes must be at least 2.")

        return get_key, clean.mapping

# Calculate energy

# Imports -- external
import numpy as np # For numpy see: http://numpy.org
from numpy import array
energy_thresholds = array([324455074703.8961, 324514136357.37006, 325134351331.9934, 325173651892.03326, 325309971116.4341, 325383720933.7776, 326183652520.7759, 326208895801.04736, 326504443974.384, 326514099631.1721, 326745165916.49304, 326749788182.83075, 326896520611.76355, 326924731697.392, 327351050552.64154, 327359021608.5668, 327484677939.6492, 327504079663.8433, 327934797800.27936, 327938247603.0328, 328466874442.525, 328470427166.3922, 328480290207.22095, 328489333825.3816, 328550470621.1769, 328566745034.8417, 328689510434.5336, 328692908441.2982, 328849685382.3356, 328853767811.921, 329084417968.4718, 329092732328.7036, 329401980121.1437, 329405609999.10095, 329417735743.475, 329421989237.02454, 329462495729.77435, 329464509064.1389, 329496327294.49146, 329510689541.7572, 329520355956.33325, 329521315476.0431, 329711763488.1457, 329714434430.59753, 329829173388.18225, 329831042618.55597, 329866904612.309, 329872413870.5647, 330057390296.4043, 330064520574.51855, 330164471056.81494, 330166196337.6424, 330172622560.0917, 330172979750.2017, 330182270360.8556, 330183611387.28455, 330296360065.0915, 330299717437.92896, 330589868682.30005, 330598872184.7133, 330628478716.2337, 330631365566.9318, 330691936848.59204, 330693635406.3894, 330759696950.92303, 330760597007.3578, 330780877793.014, 330786528172.20825, 330828692585.56714, 330831937251.5327, 330884122961.40924, 330887211907.1266, 330907321387.91187, 330907865068.8558, 330957365320.9812, 330958280506.5211, 330962490017.7521, 330967173117.2036, 331003515159.1143, 331007323564.7401, 331117654123.3304, 331121456801.40125, 331143332933.019, 331143908062.43164, 331250909496.4302, 331251330517.7465, 331392638420.9967, 331394485018.5479, 331427520869.22253, 331430975504.72687, 331443392823.6063, 331446761441.87994, 331451432117.7203, 331453861122.59894, 331464502728.8867, 331466333598.02466, 331561264449.89716, 331566985437.7844, 331570359377.2639, 331571117953.6715, 331602277929.34204, 331603253483.7822, 331610541587.38104, 331612367206.1576, 331613830326.4148, 331617823124.4862, 331633480331.4418, 331640820335.46155, 331679605551.63025, 331681182088.8449, 331683426956.3649, 331684315496.3174, 331777435865.6722, 331779442059.8161, 331785141856.7333, 331786715536.04395, 331788168787.4253, 331789726511.76447, 331793832933.5538, 331795571400.3181, 331798433274.2883, 331800717820.5209, 331812537239.2163, 331816227070.24915, 331820580126.9918, 331822040097.4014, 331838336870.90356, 331838415132.8696, 331853365687.09296, 331858683915.14954, 331892919177.03577, 331897300273.4005, 331922153784.5238, 331927831126.6754, 331975996783.2621, 331977180989.70984, 332024715761.4988, 332024742711.71423, 332110083251.34454, 332111944920.96106, 332117081901.30676, 332119758458.806, 332153983921.68024, 332156707116.87976, 332190085177.0039, 332191157685.44165, 332198029757.2305, 332200568171.86914, 332216338039.3336, 332217328569.0803, 332224106159.3978, 332224853456.80133, 332260848073.4028, 332263804746.6632, 332344361921.4542, 332345291034.4857, 332457123599.78546, 332459301206.2144, 332498709634.30475, 332501434511.5409, 332550115072.08215, 332551858928.30133, 332555563561.0539, 332557769014.32776, 332591033307.9331, 332591828755.0703, 332601432869.1011, 332609293188.20526, 332639686633.6437, 332639782126.87854, 332650194323.6851, 332651263159.57947, 332718993241.9978, 332719616104.2115, 332843053489.4385, 332847284834.53, 332863081901.93854, 332865444308.9249, 332911306043.9806, 332911771774.75854, 332945154460.00146, 332946765219.05176, 332954621656.66455, 332955613951.9624, 332973167125.52747, 332975580279.2435, 333011202901.35474, 333012286824.6198, 333018891457.49835, 333020442515.1086, 333058904399.7349, 333060640114.3176, 333065577678.88025, 333066566880.2914, 333112271427.59424, 333113059772.20074, 333148681221.0912, 333150427737.4934, 333203316174.9787, 333205816160.51587, 333229937761.685, 333231285535.8906, 333236925702.3678, 333239311406.19995, 333317964211.30597, 333319339343.3822, 333332993579.2104, 333335162549.26074, 333350099279.857, 333351248339.08405, 333361758781.05615, 333362595591.8261, 333411364028.4479, 333414437414.61127, 333435860832.1191, 333438461858.4108, 333482873481.7522, 333486609871.1497, 333508968442.5354, 333510706039.92017, 333513347200.22754, 333515337297.05945, 333538541526.67944, 333539683593.7737, 333585507605.1722, 333586573644.5438, 333640900628.92993, 333641555452.306, 333650154320.9674, 333650823702.9487, 333754015544.4408, 333754433099.4656, 333791706362.6576, 333796630337.84045, 333799774869.3123, 333800627571.23376, 333803802187.2613, 333805202042.3871, 333813217167.98413, 333813810818.43176, 333814065446.7715, 333815866323.3591, 333935067964.1323, 333935798257.9402, 333943049622.99994, 333943581233.06244, 333960655506.25903, 333960736431.0022, 333980990909.4216, 333984367925.2716, 333989830745.3661, 333990668618.1709, 334029184084.48645, 334030494719.1787, 334033355737.2109, 334035577958.2704, 334038720714.524, 334040521024.2392, 334070231460.73486, 334071269331.6727, 334087796645.1334, 334089949514.313, 334094090019.8219, 334095573495.81555, 334125247162.6104, 334127447983.24304, 334203152248.46045, 334203902676.4448, 334215616967.9906, 334216846459.7223, 334234255380.1823, 334235516828.7684, 334256465323.78015, 334258515777.01697, 334287111610.8238, 334287876414.391, 334292421153.8426, 334295623217.1337, 334309552710.61646, 334310470861.7186, 334311196194.6752, 334311420094.449, 334331574741.17725, 334333780412.01514, 334345460796.92584, 334347776007.4033, 334415806619.50446, 334416437979.83014, 334427662077.6377, 334428511753.9121, 334457010395.8408, 334458335335.17474, 334479178050.7693, 334479712779.34406, 334529228291.4346, 334530236923.8666, 334537661243.43463, 334538361090.00793, 334558274249.3767, 334559547739.00903, 334565752828.8268, 334567100173.6254, 334587800846.59827, 334588180536.9679, 334627005270.1986, 334627929615.7854, 334645762147.958, 334646897556.656, 334666147151.8175, 334666411362.74927, 334672193392.5828, 334673663799.5204, 334688252243.0519, 334689050019.6411, 334693081282.21924, 334694016554.18555, 334698480072.92126, 334699498239.8929, 334702979535.2546, 334703871460.7135, 334731179905.3598, 334731730883.32764, 334739416829.2088, 334740029856.54395, 334770844719.7128, 334772292777.409, 334780629127.2538, 334783063075.5138, 334802390391.41833, 334803826077.20703, 334853679058.00024, 334854090871.52985, 334854309857.6642, 334854581484.60913, 334856573528.6707, 334856741481.6266, 334899410030.0575, 334899851004.5177, 334902462169.9612, 334902867824.64, 334932306590.0355, 334932797399.01447, 334938038793.2761, 334939053041.94586, 334949117948.092, 334949985280.78235, 334951826869.44556, 334952973813.0197, 335036289690.1845, 335037970701.55035, 335057949188.38, 335058381962.7958, 335094639670.05725, 335096238148.65607, 335114304429.4402, 335115475440.9153, 335122202150.2056, 335122503911.7539, 335140317035.8623, 335141018967.44977, 335156647770.4828, 335157659963.5298, 335171003835.8689, 335171551036.2279, 335186130454.12463, 335187793674.87085, 335197390087.333, 335199239503.6095, 335206474338.65625, 335207087799.3594, 335218616688.08704, 335218668612.5016, 335233035275.15607, 335235089823.766, 335264758576.4059, 335265641568.9336, 335285176193.1427, 335286253623.9068, 335295836747.0062, 335296540948.70544, 335345136047.39264, 335346027048.5397, 335351825189.46686, 335352161031.2726, 335354024372.55786, 335354410444.65106, 335382563168.4059, 335383786574.1131, 335408524637.27136, 335408831441.5647, 335418570425.80945, 335419810749.05707, 335423476237.9251, 335426945989.75446, 335446429534.73944, 335446902872.8405, 335452363129.88544, 335453423991.8019, 335462783368.94025, 335464289311.9087, 335477965975.49725, 335479422367.57935, 335483574034.3273, 335485544364.73145, 335489628278.41187, 335490056907.877, 335499023265.79614, 335499987264.0824, 335506192640.742, 335507272535.8466, 335519565812.9444, 335519751650.2787, 335534990520.7145, 335535414828.6333, 335536858522.2013, 335537609639.4585, 335547795702.047, 335548082269.29236, 335557524214.86194, 335558148437.33435, 335579254806.2486, 335580022101.4907, 335583306615.35065, 335584244082.9247, 335597210836.6154, 335597577171.5255, 335641898339.1087, 335642507774.2125, 335654204863.8639, 335655430419.0763, 335656982675.9889, 335657768531.03687, 335683199079.0016, 335684738145.7929, 335702290553.1538, 335704357756.86035, 335738002533.9325, 335738226762.2061, 335739624989.2065, 335740048707.7911, 335756144299.3289, 335757299730.55054, 335761468631.189, 335761837422.36914, 335764693687.2977, 335766163324.31116, 335784522733.2207, 335784732123.43726, 335786511038.2136, 335787642000.3684, 335801453997.23047, 335801884386.9132, 335820323795.2782, 335820443782.97345, 335823540385.50275, 335824292895.77563, 335827781257.3285, 335827986726.2378, 335829483436.65906, 335829760401.1028, 335837191266.86633, 335839645889.54224, 335843632159.8283, 335843686175.9271, 335850736409.746, 335851333789.5983, 335853598231.2687, 335854236568.24, 335859425267.94257, 335860095057.27167, 335871062368.26105, 335872639072.8243, 335881357050.3581, 335882699720.7653, 335924997413.5586, 335927331591.2333, 335949962653.6984, 335950361096.74725, 335960293885.0543, 335961975655.2042, 335976925008.4583, 335979227572.0293, 335990123433.28174, 335990541518.3977, 336014219960.7925, 336014968948.405, 336022956159.8155, 336025906135.8984, 336035699910.5602, 336036866937.9856, 336053695259.59283, 336054053207.9957, 336057378819.28937, 336058783861.43365, 336106650394.70984, 336107813817.31616, 336110964041.3, 336111212859.9492, 336158139378.3828, 336160137647.3325, 336167346772.8872, 336168066652.7933, 336168634908.21826, 336169763208.73193, 336183571821.7314, 336184893709.62915, 336190028213.16016, 336190834354.5868, 336219271376.3108, 336219421911.118, 336239417295.95355, 336240271594.94775, 336244439116.87744, 336244726011.344, 336248150445.8235, 336249013303.7261, 336266450053.59314, 336267007925.4783, 336269080563.0408, 336271359448.2076, 336277126767.7959, 336277730002.78925, 336293866663.82043, 336294505639.1622, 336302361484.5325, 336303402674.0093, 336317802899.39355, 336319587138.29553, 336337998855.2227, 336338618669.56055, 336367788430.9476, 336368635690.68774, 336396648410.9994, 336397164142.961, 336413649655.4632, 336416417750.56537, 336471626124.50085, 336471987712.51447, 336479313565.7398, 336479897906.27924, 336497920946.64905, 336498019304.06085, 336509078048.69653, 336510314044.39526, 336523073375.382, 336524055390.28925, 336526128519.56244, 336528461165.3263, 336529561993.7251, 336530159129.67413, 336570920677.4116, 336571352751.3181, 336576002721.10693, 336577071165.8016, 336584706666.81177, 336586153163.7212, 336612154768.45703, 336612717719.24365, 336621089894.98737, 336621322234.0078, 336641108634.07196, 336641546004.8539, 336655244301.1364, 336655669854.29785, 336656007486.9757, 336656459179.5493, 336683909787.5804, 336684492059.1975, 336704647732.6647, 336705441451.5663, 336706485506.8113, 336709083043.9541, 336711142691.2921, 336711696218.8423, 336720235258.91174, 336721096805.9199, 336735546098.4923, 336736384139.4685, 336751952245.90173, 336752944313.37195, 336778512452.2121, 336779207266.1998, 336794239921.02045, 336794694708.7595, 336797778037.6815, 336798607202.50446, 336805162219.19165, 336805324600.1771, 336807648631.9452, 336807983180.6518, 336810220839.36304, 336812191343.8928, 336817662045.9446, 336818126582.614, 336824954679.44543, 336824999663.23456, 336835632479.3065, 336836411070.04346, 336861309000.4113, 336861939283.2313, 336869274889.25476, 336869454494.8779, 336882148708.59143, 336882506033.6302, 336884369966.6367, 336885439923.83923, 336918122148.11566, 336918803610.2065, 336926709962.8192, 336928677987.8374, 336941039240.16547, 336941661245.3855, 336961609468.67194, 336961871633.7985, 336968197699.7472, 336969673147.5397, 336990371527.7161, 336990648913.01715, 336991603286.22534, 336992326280.7743, 337019006880.1151, 337019174131.6736, 337024360437.38574, 337025266876.31287, 337040801247.9962, 337040890634.7035, 337041740767.9176, 337041969869.07623, 337042422003.2692, 337042960549.4181, 337048690901.18994, 337051888895.19543, 337062082864.62195, 337062308306.6679, 337072607304.2423, 337073180825.10895, 337081609527.16455, 337083014701.7981, 337088361665.1703, 337088966622.8729, 337104477388.76965, 337105057806.60693, 337111079785.1385, 337112150569.6485, 337125792867.8354, 337126716355.513, 337145362767.9858, 337146122125.4221, 337148593192.4945, 337150315506.359, 337153026300.20435, 337153079687.44763, 337197920461.96014, 337198581930.64746, 337205426325.6344, 337206389879.4223, 337210049130.98413, 337210376693.28235, 337211600940.3882, 337212889281.0515, 337258675931.80347, 337259169632.6415, 337276435824.9504, 337281119711.29767, 337287282853.91534, 337288461733.7517, 337305082232.28674, 337306607233.34485, 337313239858.124, 337313513858.13806, 337346910769.20233, 337348785446.52875, 337350737869.5098, 337351215692.66016, 337368360168.4021, 337368949807.40265, 337380468000.9158, 337380709081.2612, 337380846223.32874, 337381150358.9334, 337389775956.0631, 337391306091.7824, 337392499322.1943, 337393389739.45703, 337398786516.20667, 337399692148.8295, 337402120406.42206, 337402356567.5459, 337423107884.54767, 337423336337.9319, 337436537689.4947, 337437020013.786, 337443202523.0692, 337443486103.8142, 337445453788.7352, 337446822043.9649, 337460471736.30005, 337461875769.0571, 337488994587.20984, 337489523985.9429, 337492065036.9803, 337493949549.0548, 337494345907.8735, 337495892823.6759, 337502228042.5099, 337505391789.4467, 337519459603.70325, 337519741791.2455, 337532237379.8811, 337532714051.43884, 337542422795.52576, 337543034001.3086, 337558988045.9851, 337559303580.9995, 337574596112.0742, 337575333939.0822, 337575824969.3686, 337577257543.4307, 337583539835.4031, 337584091796.6076, 337604281171.2891, 337604721963.5508, 337608323534.2518, 337608919514.01276, 337612890272.4836, 337613438259.8621, 337614770216.981, 337614957198.61365, 337634479580.088, 337635072015.4354, 337638342379.568, 337638839003.1825, 337647271214.0054, 337649440719.44226, 337665263106.2935, 337665329866.49536, 337665549746.3408, 337665793418.0127, 337672398223.85925, 337673462821.01294, 337686375936.6367, 337686394008.8194, 337686611783.1649, 337686759739.5709, 337717003382.53296, 337717564277.9575, 337718435919.8939, 337719397139.92914, 337729916423.807, 337731476629.3061, 337733722295.4757, 337734211457.5238, 337750563294.224, 337751223684.0657, 337751799577.2803, 337751869758.2102, 337768137276.69806, 337768260184.2616, 337778319743.37964, 337778503678.48987, 337780538952.6826, 337781184271.68713, 337799380359.6741, 337799938247.5429, 337801317454.97156, 337801654365.18225, 337828981197.2621, 337829440715.35034, 337849108386.8485, 337850394244.36975, 337855020103.06445, 337855524006.31244, 337872416555.5056, 337873013349.9485, 337890704142.2572, 337890854043.3254, 337892817012.1096, 337893843304.2025, 337902701376.24414, 337903296996.6263, 337905239513.692, 337906334379.99866, 337906853458.8428, 337907508983.8187, 337910876748.61646, 337911671241.0111, 337913041701.0045, 337913642825.68945, 337916746137.26086, 337917542342.6151, 337919470828.2729, 337919920382.4864, 337929209865.08594, 337929305787.75525, 337943517676.606, 337945301537.30115, 337956778685.91986, 337957605541.1672, 337961028639.3292, 337962008148.5154, 337964953256.1, 337965211432.31885, 337971663798.38184, 337972020003.80566, 337987334696.79895, 337988790838.3075, 338017500548.72314, 338017831553.48, 338078332470.8925, 338078985842.38635, 338080942259.92993, 338082790069.1725, 338105371004.79205, 338106006617.3834, 338109313828.34595, 338109734082.16754, 338127772921.9701, 338128539423.08777, 338134334844.6554, 338135101195.6791, 338137222914.0251, 338138768295.51996, 338139185018.45825, 338139297221.00415, 338148466278.0609, 338150261825.65845, 338156627962.4386, 338157187974.4253, 338158718583.69617, 338158878107.66833, 338160078459.3684, 338160692310.6988, 338164534327.7448, 338164838390.3138, 338170957078.4408, 338171060059.6814, 338186412477.4324, 338187021337.343, 338189403244.1439, 338189799302.7864, 338199686192.4357, 338200082396.90393, 338200611158.7413, 338200896394.86145, 338202765234.75354, 338203659855.11456, 338225813020.0983, 338226598488.03894, 338228276483.6149, 338228848154.4031, 338248623202.88696, 338248813184.88116, 338259078401.4718, 338259190809.88666, 338263868302.2571, 338264155139.46606, 338276600069.7253, 338278026663.38055, 338282173693.69824, 338282979010.02637, 338288386852.61365, 338289319368.1771, 338295089129.6375, 338296167764.0823, 338302802602.4089, 338303869141.82666, 338309818243.5889, 338310188410.2311, 338310851954.19806, 338311354361.3594, 338311692898.62354, 338312063318.1841, 338318541114.5489, 338319340906.99756, 338319748243.0995, 338320457871.4962, 338336935196.6095, 338338190183.83673, 338343594546.4645, 338344234324.2133, 338353868402.3071, 338354140824.2395, 338361900589.5197, 338362490482.2405, 338369154483.679, 338370552526.0116, 338385894346.6766, 338386408269.036, 338386927786.8208, 338387230385.5099, 338409976006.4545, 338410705232.0731, 338413395782.2367, 338413858917.78845, 338414242967.58624, 338414375285.7474, 338415944002.8466, 338416899185.8955, 338418553390.056, 338419003709.8933, 338421533309.9192, 338422131771.4796, 338424674175.32275, 338425721581.5162, 338433246344.0332, 338433873750.21027, 338437788983.3603, 338438190276.6554, 338441684907.4044, 338442524660.53827, 338446130737.8397, 338446756210.00977, 338453800283.1074, 338454149434.1266, 338462161857.68524, 338462586830.99744, 338469027083.948, 338469074073.709, 338473728168.48627, 338474140939.86414, 338506380905.06775, 338507005885.27026, 338508716176.268, 338509072345.86664, 338546924876.9872, 338548317024.49744, 338552709984.24713, 338553812721.15656, 338571429197.1847, 338571659680.6719, 338573703090.3158, 338573951928.03796, 338575162281.2777, 338576373345.57776, 338579040046.35486, 338579542595.59503, 338585969368.9171, 338587757551.8063, 338589572238.49347, 338589893247.5556, 338593381391.27924, 338593673241.2903, 338593932274.67615, 338594325316.1276, 338617950603.0041, 338618150076.1145, 338625409430.8412, 338625612657.06934, 338628443227.65814, 338629291047.9553, 338636418977.53546, 338636829420.3074, 338640219095.0123, 338641305613.4734, 338647653607.91675, 338650232735.5497, 338662587172.26025, 338664620302.98755, 338674446749.7841, 338674576196.0378, 338674610959.82623, 338674706573.5558, 338689807538.6675, 338690719460.291, 338693305948.2665, 338693544688.3331, 338706430260.4384, 338706548858.766, 338710616225.5827, 338710986408.59485, 338718102742.79553, 338718346302.0675, 338723452563.54443, 338724055476.1508, 338724743221.4631, 338725720779.6327, 338733745706.1305, 338734612079.2842, 338738206372.5323, 338738410817.3109, 338745047946.3783, 338746891571.27, 338759582246.2472, 338760440212.7157, 338772971749.523, 338773778300.9807, 338775008837.1415, 338775632517.6764, 338776218548.3758, 338776444525.9966, 338791913595.8541, 338792049729.87256, 338798465337.0812, 338799125489.02905, 338817360303.4329, 338817543339.20154, 338821112738.2744, 338821948369.88855, 338825294455.85156, 338825770005.2392, 338842003760.51514, 338843750370.0354, 338853753149.4905, 338854169359.371, 338875504689.4563, 338876496431.571, 338881563170.11804, 338881597250.3532, 338885310344.1853, 338886275966.4165, 338902650597.87537, 338903538128.17523, 338907155227.001, 338908634229.3421, 338913384078.9368, 338913421628.0064, 338914194829.2445, 338914444621.6407, 338920346920.2697, 338921490420.66223, 338923900330.3553, 338924792321.87244, 338925039184.61414, 338925527626.8155, 338934844082.4, 338935178674.4123, 338946708927.3025, 338946911018.3802, 338947656225.5683, 338948324943.5216, 338953848240.3099, 338954756544.93536, 338965903143.7071, 338966283855.3727, 338967589625.5444, 338968511729.9032, 338969440733.3529, 338969648550.60254, 338972679725.07294, 338973987287.93024, 338975762782.755, 338976449805.2607, 338986307577.66675, 338986731875.0614, 339002070985.40344, 339002301826.08844, 339016646382.7366, 339020119777.45935, 339044187040.0067, 339044240605.58997, 339048150172.18634, 339048571214.5503, 339061126882.7257, 339061860155.5476, 339079550790.2387, 339080330519.09106, 339084013426.89136, 339084436478.29724, 339089777547.12976, 339090452686.0595, 339091494596.36646, 339092168432.1118, 339097365271.5497, 339098041699.448, 339102624339.4398, 339102684661.8278, 339103109570.807, 339103481631.96106, 339107920891.8197, 339108245495.9219, 339120987288.0408, 339121277043.9739, 339122787800.108, 339123657083.0315, 339125824042.38, 339126117321.48883, 339126605313.1782, 339127099449.356, 339137654546.17114, 339138721817.4995, 339143187262.4457, 339143618202.33716, 339145193455.8142, 339145314005.8368, 339152260185.9155, 339152659911.7877, 339155808282.46277, 339157008192.93604, 339161161416.7645, 339161557436.93134, 339170258933.48395, 339172189876.82196, 339175252539.45105, 339175634609.9176, 339176049285.25366, 339176856188.81165, 339186476526.0525, 339187211669.1671, 339207700245.7177, 339208222692.5092, 339212813649.17175, 339213241337.626, 339228430285.5454, 339228736122.0752, 339246647569.9104, 339247284252.7313, 339253586068.0602, 339254002934.40826, 339259063249.865, 339259998871.91864, 339268043582.3085, 339268567977.6416, 339279830186.436, 339280674704.6457, 339284071416.6238, 339284838321.12244, 339297559587.5557, 339297782544.2583, 339302964614.6655, 339304009337.37366, 339340039060.8439, 339340451093.0883, 339340721544.70374, 339342081873.0577, 339354938194.166, 339355864390.61035, 339381470982.9829, 339381818943.5052, 339382288073.21265, 339382768410.5266, 339407728714.60736, 339408300285.4227, 339417085992.101, 339418153008.1371, 339423913587.05835, 339424025016.15845, 339443656168.5239, 339443899265.1334, 339446565057.9215, 339447339765.338, 339459009808.1318, 339459380386.22156, 339476175351.66156, 339476404576.30035, 339482261388.40125, 339482917430.09753, 339488880150.73474, 339489160434.4465, 339497138091.1023, 339497489396.1875, 339514590780.40393, 339515187472.5415, 339534830079.4983, 339535492801.92664, 339537847829.7492, 339538323979.9426, 339546023729.67346, 339546880897.6454, 339550885748.43274, 339551220615.75574, 339558866295.1959, 339560338311.00433, 339565551634.1808, 339565642520.3578, 339575944631.62085, 339577308510.7136, 339584324677.78064, 339585981269.10516, 339591523511.1775, 339592094472.68097, 339597770519.1886, 339598254557.0536, 339602793806.93427, 339603423895.986, 339636862945.1974, 339637470134.22626, 339638370254.9193, 339638807081.7918, 339645662434.07837, 339646281540.6992, 339650374823.2294, 339650783056.74646, 339664117577.7677, 339665405709.7969, 339665882730.60095, 339666531479.9971, 339688448001.73303, 339688962056.2595, 339705803387.3075, 339705942211.4798, 339706622710.62225, 339707078453.0733, 339714459482.26306, 339714814583.46545, 339715448197.8843, 339715985241.8125, 339716534894.2815, 339717009570.4436, 339717643196.4203, 339718413609.5079, 339728279059.4392, 339728799470.01324, 339732680191.1068, 339733855768.6169, 339734350222.6809, 339734697500.67773, 339742088876.00464, 339743161852.5134, 339744906310.9904, 339745153888.59753, 339755300510.44464, 339755469269.76245, 339763903587.55884, 339764719606.80115, 339772484686.0724, 339773063626.13654, 339781299035.0051, 339781662904.4557, 339803417453.246, 339803842389.85394, 339809473933.4232, 339809513787.81964, 339812582357.88824, 339812999348.5471, 339816648863.24744, 339817267820.76184, 339819676404.04126, 339820570721.8983, 339828961457.3366, 339829679042.79486, 339853631660.0249, 339854403935.5182, 339860535561.6195, 339860984147.9371, 339863967982.23016, 339864631173.5507, 339871107338.2906, 339871584786.8827, 339879433547.05835, 339879646183.6804, 339889907316.5027, 339890504264.262, 339892753224.176, 339893206014.1584, 339898285057.79224, 339899281347.9641, 339920163768.6584, 339920511660.6418, 339927076519.4602, 339927210129.9049, 339936648442.379, 339937247972.6199, 339954395712.99365, 339955736082.31525, 339960564914.08594, 339960889116.1875, 339967683837.66864, 339967946312.3915, 339972419117.41565, 339972995014.2206, 339986765069.3136, 339987414748.18774, 340016136831.42786, 340016663377.62067, 340016801915.7875, 340016927630.0336, 340022470906.1495, 340022670801.7195, 340028178508.1929, 340028902781.6146, 340036436843.3622, 340037471179.774, 340058341742.8157, 340058461736.9241, 340071589350.1362, 340072146851.51715, 340085366936.18835, 340085812706.62463, 340086671729.0255, 340088525839.364, 340097014637.67206, 340097572844.0077, 340099933736.49585, 340100268311.0842, 340111873570.692, 340112187642.0569, 340112888392.2905, 340114858920.5622, 340117770108.2989, 340118066479.2361, 340120896122.3085, 340121402165.8176, 340130369691.51086, 340130797548.43176, 340132135980.27856, 340132679718.4152, 340138685681.6138, 340139206631.0303, 340143914884.86865, 340144362952.9888, 340144688641.12994, 340145326919.4647, 340161029447.64417, 340161224675.63464, 340165140570.57135, 340165226658.193, 340165628275.9631, 340165691679.89453, 340167657751.94257, 340168577977.78235, 340176745978.32837, 340176787917.81177, 340178633814.8303, 340179094983.63416, 340180872462.3531, 340181101979.3425, 340183256667.922, 340184066360.8096, 340185170516.3839, 340185996045.3865, 340197866240.6261, 340198619867.09686, 340206524651.4069, 340207266775.2948, 340238205222.7477, 340239475643.34265, 340245792170.5913, 340246394565.3546, 340253390208.5331, 340255877638.8171, 340266316325.26904, 340266404584.9908, 340273808740.77, 340273995430.51227, 340301333058.9204, 340301374722.51587, 340301413129.51526, 340301488109.04407, 340313196522.6105, 340313757814.7914, 340328424660.30334, 340328807848.27856, 340333228745.3633, 340333934765.36, 340335213177.1289, 340335461750.52026, 340336042205.3865, 340336995514.4248, 340349572880.78296, 340350052128.6608, 340351969714.08954, 340353406392.8727, 340358019652.35034, 340358764417.50287, 340365432354.6266, 340366256720.23486, 340369941037.6455, 340370394012.2501, 340372258387.3377, 340372735040.53625, 340374607262.79846, 340374858488.7674, 340375490667.0001, 340376166801.40515, 340381252505.74146, 340381709569.98987, 340382058574.6972, 340382601334.3449, 340383759634.4888, 340384446495.30005, 340430976033.8535, 340431368627.23535, 340464478390.65027, 340465468704.3985, 340466509365.666, 340466730337.3737, 340474188769.6936, 340475003488.1326, 340493377090.3126, 340494690036.1704, 340506997054.009, 340507677980.4448, 340517013657.6396, 340518598795.22314, 340524917417.51575, 340526627048.3617, 340537650394.3321, 340537969377.3994, 340540719861.745, 340541056433.2926, 340542516356.9971, 340543546371.22235, 340554737879.4913, 340555503117.11206, 340563603466.0764, 340563706122.91504, 340573607473.2817, 340574130232.63696, 340576492951.5049, 340576872554.7798, 340578007363.01807, 340578285107.8451, 340580776353.9006, 340581210191.6848, 340582381392.4408, 340585103990.8007, 340603932784.29443, 340604636850.9501, 340610254507.7866, 340610879164.6846, 340617180335.5, 340617433604.7876, 340626304732.348, 340626472016.56885, 340628741209.2425, 340629101900.1466, 340629722512.605, 340630136492.4813, 340640252823.842, 340640670688.3076, 340641629385.7518, 340644612444.6957, 340645470447.4562, 340645685066.4286, 340656437312.29895, 340656593361.45233, 340658353590.9364, 340659012732.4779, 340659806252.3058, 340660365309.4435, 340672476754.15985, 340673458768.14, 340675870925.51483, 340676266858.5967, 340684043962.47614, 340684234516.2084, 340686790045.2101, 340686954113.2234, 340692036112.49207, 340692271226.5469, 340693188058.5324, 340693405792.98236, 340695253051.772, 340696046842.8941, 340704287218.6936, 340706371736.6969, 340708106546.5675, 340708407855.9207, 340716394743.96643, 340716678781.8463, 340717288135.8695, 340717998832.17126, 340722960006.77783, 340723185307.9839, 340751120295.8684, 340751329431.38196, 340767860827.0059, 340767999373.3507, 340774509307.77795, 340775142364.0936, 340779078023.6533, 340779497284.50995, 340779822051.9752, 340780011949.20667, 340787127804.18396, 340788275953.4176, 340789761930.78864, 340792252503.94934, 340807085573.1314, 340807838715.3762, 340810810772.0841, 340811225609.41016, 340816162423.72003, 340816835519.90247, 340820171178.5525, 340820725841.31177, 340823279520.5976, 340824899749.8729, 340835591186.7386, 340837026668.4249, 340844614607.0463, 340845564912.4302, 340848921317.63403, 340849402340.07, 340867650855.2385, 340868244327.8778, 340873256591.7299, 340874376094.0269, 340884941202.8369, 340885628639.4252, 340891103211.8322, 340891522488.57587, 340893393216.5603, 340894112325.4895, 340907279578.46765, 340907733285.126, 340909682907.9798, 340910365972.2594, 340913685970.39386, 340913998580.327, 340929561652.22595, 340930570161.1592, 340931789692.12897, 340932997325.3473, 340940007913.31354, 340940784837.96985, 340954436078.54956, 340954488869.9176, 340954695586.6401, 340955075450.15015, 340958767204.6273, 340959410382.82654, 340961449530.4798, 340961565462.0217, 340961884734.1506, 340962694241.9261, 340969896120.85895, 340970176538.1029, 340971009671.91455, 340971753965.6214, 340974242908.4022, 340974557584.9839, 340978832313.67566, 340979423068.4137, 340981507382.42126, 340982232038.56976, 340983717370.4493, 340984035939.2254, 340991794211.6141, 340992304279.17236, 340992945950.0447, 340993268994.5082, 341061877718.8552, 341062201876.9582, 341066810279.08527, 341067818471.6749, 341071259730.2391, 341071584044.56805, 341073596530.7577, 341074312036.96027, 341088589857.35284, 341088797324.1072, 341095239222.3864, 341095678874.6049, 341100623043.67395, 341101078637.2722, 341108323020.6664, 341108989720.2811, 341113501471.4126, 341113606980.254, 341114170435.07, 341114730576.0032, 341116792870.47656, 341117133344.84766, 341120276711.7355, 341121247349.9026, 341139884748.81213, 341139947191.7986, 341141560085.84735, 341143326832.2042, 341158228098.8535, 341158505937.0561, 341158952333.43933, 341159382606.0041, 341170013548.43994, 341170319269.85614, 341174402699.9236, 341174475518.35645, 341178530925.10315, 341179188267.9719, 341180326652.24097, 341180771001.4925, 341181185358.1087, 341182746175.1379, 341194265838.57776, 341194711648.6095, 341202745041.5944, 341203348725.7689, 341213120040.59985, 341215582918.8826, 341218531563.0222, 341219110973.9513, 341229014734.9467, 341229546924.8469, 341229878948.655, 341230175479.8187, 341233919121.58044, 341234487481.2644, 341238581083.7782, 341239075254.56177, 341239477556.3191, 341239833198.14966, 341240704470.2876, 341241039629.6123, 341263435452.59875, 341263740698.6858, 341267674342.0076, 341267809874.3554, 341268297311.63403, 341268758348.75, 341271258326.3159, 341271862388.38684, 341272828702.35736, 341273640669.05383, 341282391451.14966, 341282896004.61334, 341283855893.9949, 341284296368.0567, 341286462127.0077, 341286658846.5163, 341297466880.1166, 341298144054.57227, 341301496077.3798, 341302574205.13257, 341317404124.46216, 341317891747.66174, 341320354976.7097, 341321045662.32825, 341323898420.2567, 341324910300.0702, 341340921146.06537, 341341962729.21704, 341344818231.8419, 341344888340.2867, 341345615279.1472, 341346456108.1269, 341360238187.6261, 341360987670.3204, 341370754226.51556, 341372048946.1599, 341375747527.7589, 341375794718.28125, 341379305703.6007, 341379410136.50507, 341380161180.0654, 341380540035.94653, 341382331434.58685, 341383225445.1321, 341391270936.2623, 341392886572.26587, 341393301763.8888, 341393681930.00336, 341395147615.0392, 341395668765.42944, 341402777447.00195, 341403150165.7683, 341405697957.9042, 341406597192.11206, 341418050722.4333, 341418256193.0374, 341425062311.2742, 341425978802.7627, 341428228500.54425, 341429011708.37695, 341430019030.45215, 341430192366.9745, 341444437834.7309, 341444701102.52295, 341445598515.9746, 341446240258.5416, 341446769180.78577, 341447028206.70435, 341455189785.328, 341455456242.7468, 341461489733.6597, 341462131561.86536, 341467908458.56573, 341468244365.6986, 341490156793.92017, 341490602064.00653, 341495261984.645, 341495867105.25195, 341508076314.31946, 341508298065.4873, 341508469224.27246, 341508609018.53186, 341509984587.89014, 341510697838.2396, 341516800597.37244, 341517053871.2697, 341531079998.1589, 341531498385.49603, 341536924620.9998, 341537615749.8009, 341545273396.7355, 341545359214.5576, 341546916009.9574, 341547583488.76624, 341555214237.5416, 341555921027.41113, 341577789897.3744, 341577857702.1854, 341584713006.2438, 341585163741.5261, 341591271024.73444, 341591576935.2438, 341593976065.91504, 341594266328.15576, 341597954356.9375, 341598654665.1384, 341607042924.1605, 341607176473.07635, 341611034865.4912, 341611321114.06134, 341614544228.0325, 341614809484.8418, 341626784119.6011, 341627201537.0517, 341630045378.95374, 341630764235.9317, 341631760857.12305, 341632204032.23663, 341654154994.4706, 341654347033.1277, 341659209482.5939, 341659576051.7466, 341668956102.9529, 341669629948.7895, 341672472449.61194, 341672797900.18616, 341675419098.906, 341675945690.66626, 341686401253.50116, 341686462357.61707, 341689491362.84143, 341689588037.8523, 341691073586.26154, 341692681169.1367, 341700262339.9564, 341701220193.8652, 341713804281.86304, 341714847228.267, 341724528393.1068, 341724992164.26733, 341732896335.4744, 341733157077.6255, 341738841423.64355, 341739243214.2585, 341753494675.937, 341754235195.3616, 341764259800.2594, 341764759681.9132, 341765345273.7163, 341765923344.54504, 341770714492.16046, 341770962253.7711, 341773180925.625, 341774008049.61, 341776733268.54047, 341777672262.00916, 341786841306.3876, 341787118914.63965, 341792289851.7899, 341793012715.7224, 341794458159.0287, 341795214510.2937, 341851662561.6524, 341852246506.1903, 341854954448.8002, 341855947444.83636, 341860524550.4225, 341860750880.1208, 341866196188.1948, 341867098742.54297, 341873354895.8416, 341873807048.7857, 341879484099.1465, 341880069251.8002, 341882017801.828, 341882855128.18427, 341887737336.7816, 341887826186.9697, 341887922623.04016, 341887954605.85486, 341893053493.39197, 341893417846.5426, 341904422674.8071, 341904703343.5142, 341922742576.90955, 341922747083.1277, 341925772660.9811, 341926560670.24255, 341929568961.20856, 341929825870.8445, 341935884336.9759, 341936320363.83704, 341938856853.3273, 341939527352.657, 341951372425.99304, 341951657474.2241, 341955501785.7755, 341955711521.8861, 341965917802.6835, 341966183538.52246, 341973069206.2339, 341973466463.3963, 341980252771.7851, 341980481071.93445, 341984903986.8095, 341985849443.36597, 341991445342.7846, 341992841582.7996, 342000834255.2919, 342000885490.95984, 342004332387.407, 342005321213.23285, 342009866087.0924, 342009894458.81335, 342010249093.1461, 342010658434.3917, 342013841759.5857, 342014135836.6448, 342044678672.43884, 342046224476.03516, 342055794380.17346, 342056891220.98035, 342062162257.3445, 342063008466.4917, 342065930199.97064, 342066752878.5759, 342083259402.527, 342083876696.03784, 342101378728.5198, 342102306413.25854, 342103809193.0021, 342104621554.85974, 342112896204.145, 342113715816.0687, 342125914115.579, 342126680702.4132, 342150304778.8658, 342150908142.8293, 342157639093.15137, 342157907309.9175, 342168260653.73975, 342168573774.4269, 342174392460.4093, 342174924606.19104, 342180219671.8624, 342180398428.4916, 342182988157.57635, 342183308422.10706, 342185038608.78796, 342187608778.6219, 342203239452.2519, 342204070048.27344, 342214982540.94604, 342216040297.9697, 342217882100.3633, 342218748711.02606, 342225921916.48987, 342226095847.7942, 342228824443.4634, 342229083020.6408, 342229369015.18884, 342229406512.26074, 342229716284.28394, 342230262123.98865, 342233472748.9474, 342233834776.60785, 342253056949.7154, 342253403389.1992, 342255006789.4258, 342255806752.5613, 342258590400.82983, 342259028260.6365, 342260839020.25, 342261767163.4852, 342272915626.8379, 342273161165.34766, 342274856846.9084, 342275661538.6816, 342277101230.43884, 342277674291.78577, 342278702060.2797, 342279417034.29193, 342281471043.5746, 342281975507.53015, 342283812466.85925, 342284038452.9399, 342301911687.89276, 342302305579.9517, 342304496694.51526, 342304769661.2147, 342312862667.3528, 342313380070.6309, 342316653341.6907, 342317394784.3514, 342343826801.8157, 342344020656.1073, 342345499195.8276, 342345563653.47455, 342348780925.87683, 342348845639.76904, 342353474820.3411, 342353925347.8492, 342356161600.14264, 342357276385.48505, 342367742100.6349, 342368026270.51746, 342368891144.641, 342369453454.3047, 342369663233.0859, 342369858191.18506, 342375094288.8157, 342375178305.6903, 342405755137.26416, 342406188032.07654, 342408574556.01263, 342408917447.6096, 342411053360.71716, 342412068400.865, 342414549925.29114, 342414950687.83026, 342418742673.1947, 342419796950.7478, 342421292435.30615, 342421535386.0153, 342422938353.5366, 342423341794.56744, 342423642790.8435, 342423782407.98413, 342438841053.34216, 342439549653.8605, 342441460994.34924, 342441597538.6538, 342445415157.11145, 342446161910.8726, 342446731091.13806, 342446883167.0825, 342450110308.9376, 342450631789.3317, 342454471517.78284, 342455589378.24567, 342458370800.6379, 342458596700.14594, 342476701964.5464, 342477195463.0055, 342486603221.4938, 342487673051.3324, 342490348035.3395, 342491482860.0117, 342492525093.13214, 342493389069.37665, 342503805533.4856, 342504078061.7821, 342508466602.08154, 342508704208.5342, 342511587322.31854, 342513173293.30273, 342520404065.69714, 342520994729.6803, 342523407223.6588, 342523580930.34485, 342533705523.6549, 342534336982.0249, 342535377768.36536, 342535955989.9729, 342555123510.49475, 342555988661.6793, 342563811097.5124, 342563956878.8382, 342569069852.2002, 342569566010.2467, 342576971125.6685, 342577159868.11926, 342578819551.3783, 342579021727.30365, 342583534033.18335, 342583869434.4619, 342591042458.6885, 342591835750.74414, 342592691588.4579, 342592947925.67444, 342626233839.06335, 342626439388.2716, 342630882475.45374, 342631506344.7273, 342659369940.0642, 342659918109.7334, 342665284985.70154, 342665496899.14355, 342676729090.98944, 342677212483.6427, 342682651415.98584, 342683329727.9585, 342690408932.603, 342691008310.3276, 342702720062.5166, 342703315739.9193, 342713523071.542, 342713852770.0428, 342730617239.7808, 342732648021.17523, 342737684412.8706, 342738210153.0845, 342739969404.239, 342741413052.7426, 342742254944.85034, 342742672742.5226, 342762620595.3662, 342762717401.52625, 342776578550.48627, 342777314735.0394, 342777583072.0752, 342778511568.317, 342784494680.2717, 342784760064.85913, 342787210375.7283, 342788263423.33984, 342790008238.2655, 342790275271.5083, 342807464848.9243, 342807863335.5605, 342809071530.1645, 342809788269.967, 342813178754.14056, 342813730569.90216, 342814978228.8535, 342816663590.5792, 342827016988.51056, 342827419476.5763, 342845596870.8223, 342845639431.29193, 342848646800.2865, 342849749071.14996, 342852623561.2466, 342853028349.18646, 342865710413.79443, 342866066067.5509, 342885786756.0597, 342886065287.77075, 342886822408.4381, 342887112174.18835, 342893735866.16864, 342893959133.95483, 342894878411.6393, 342895155041.6216, 342898846358.8429, 342899570320.3876, 342914442556.92847, 342915026210.7998, 342916400909.1373, 342917624372.82227, 342929110339.5366, 342929520392.6725, 342936027115.0674, 342936911257.01636, 342939051630.01447, 342939498587.0735, 342943685441.9409, 342944752574.77637, 342953009777.83215, 342953489783.4938, 342954715011.49866, 342954742771.0952, 342973411220.1004, 342973813906.25543, 342974204891.92993, 342974733840.3827, 342978829325.32007, 342979261201.5982, 342987229060.10657, 342988746065.79114, 343020808157.85754, 343022447249.9162, 343029345411.4049, 343029928015.0814, 343036929253.74756, 343037272624.05176, 343038040472.33606, 343038243360.6837, 343038630326.2005, 343038987315.48834, 343040627461.54486, 343041354114.4671, 343048377382.10205, 343049544625.2523, 343050109406.54395, 343050293703.60236, 343052258156.6068, 343052978053.2354, 343062586929.6582, 343063037637.5968, 343067543508.7157, 343068023675.1853, 343081164260.11945, 343082135803.2422, 343083610168.8395, 343084229143.8706, 343088415487.25, 343088771418.3165, 343096181469.8531, 343096215527.5105, 343098209195.6505, 343098900991.6378, 343099886948.67236, 343100578307.5542, 343108668423.6856, 343109189669.88434, 343119545367.95593, 343119825292.47955, 343130930325.73883, 343131204007.7544, 343133961778.94934, 343134349658.7781, 343135602036.2355, 343135803066.8722, 343150378498.9573, 343151338350.479, 343151826330.29724, 343153685165.9235, 343158019700.9024, 343158395738.7695, 343165961470.3557, 343166390923.7284, 343173258861.63495, 343173913280.64233, 343177145699.1905, 343178033764.0655, 343179023601.4319, 343179154253.47015, 343194023319.0782, 343194659107.5088, 343195180933.36536, 343196149110.99805, 343222924060.6295, 343223714453.39355, 343231028808.595, 343231419732.90784, 343243819052.151, 343243982103.2269, 343245777675.373, 343247777352.21985, 343264834251.6843, 343265845498.8792, 343267133479.5073, 343267810209.58203, 343273975804.14655, 343274173395.34607, 343282838725.5903, 343283030833.189, 343288944776.3854, 343289194200.00525, 343289564068.84283, 343290098459.30206, 343294095886.80005, 343294266010.7174, 343295039641.61975, 343295356588.57874, 343306131322.2566, 343306500137.39154, 343308844382.6867, 343309649309.6548, 343312081651.53455, 343312179932.95667, 343315341440.2586, 343315901763.9807, 343319389601.9977, 343320429211.72296, 343336910064.97235, 343337076996.1909, 343343825952.67145, 343344714730.0206, 343346184444.9441, 343346911224.8986, 343365159612.38635, 343365307798.30054, 343368893727.4946, 343370019750.05347, 343380183930.40454, 343380439341.02655, 343381163801.7475, 343381507412.0886, 343403135244.1639, 343403856811.68164, 343407662075.5803, 343408112984.9834, 343413635570.18317, 343414066685.56635, 343416687637.95886, 343418115218.1107, 343419465153.93475, 343420077302.046, 343424872911.15076, 343425030870.3227, 343425523180.9704, 343427124787.58, 343444126683.7324, 343444728133.51794, 343444895417.5792, 343445056593.17834, 343452686395.6038, 343453089161.4369, 343464663729.4774, 343466045092.5609, 343467208512.6233, 343468836224.2105, 343488119647.68427, 343489259181.4925, 343505907282.6616, 343507655376.2601, 343532578471.1216, 343533911829.7838, 343545688336.6432, 343545903556.0005, 343552191481.09033, 343553096600.6644, 343588190617.43567, 343588958792.34076, 343589048448.83374, 343589191531.0089, 343598544098.8612, 343599058219.6541, 343617072465.766, 343618537759.77905, 343625580508.0858, 343626017706.00977, 343627431758.79675, 343628287886.2396, 343631307686.0134, 343632612528.6747, 343635796328.44147, 343636188671.55945, 343660095055.7098, 343660228171.46857, 343674233521.5969, 343674962508.6145, 343676959299.56055, 343677979884.6638, 343684553049.528, 343685122256.59644, 343686367985.9812, 343688128951.1776, 343690431505.70355, 343690786684.61725, 343691938402.4806, 343692365486.29736, 343698642144.45935, 343698897333.04584, 343700420783.57776, 343701030477.98364, 343708967084.80945, 343709769180.6727, 343719367876.6747, 343720434130.1151, 343770004168.5416, 343770241738.23505, 343772321605.0792, 343773097349.7933, 343781134366.7357, 343781427544.8644, 343810402411.2068, 343812679697.1784, 343813875582.77905, 343814727968.68604, 343823805614.4137, 343824599828.9481, 343826545198.20557, 343828767599.7247, 343840765706.46716, 343841307349.0818, 343866714062.83093, 343867267340.13776, 343902684590.3817, 343903190883.57043, 343921998922.37756, 343924534077.04626, 343929695818.9565, 343930598137.51624, 343933059787.63354, 343933585682.46545, 343941004491.40234, 343942377329.765, 343943391358.646, 343944142170.40576, 343949531224.5031, 343949762611.1394, 343963739923.47955, 343963842245.4069, 343966233339.53906, 343966812310.53796, 343968315012.67267, 343968741821.0779, 343969582433.81604, 343969954878.97894, 343984837788.1553, 343985943321.6576, 344034678308.3026, 344034782336.8427, 344038648928.24084, 344038974470.1885, 344043972720.4633, 344044665327.24554, 344049017495.58936, 344049774986.506, 344051202941.99994, 344051823638.23663, 344052405052.82324, 344052756619.2861, 344056558941.5005, 344057111932.6695, 344058122153.33765, 344058274908.8584, 344059093830.74615, 344059746824.5541, 344064229465.2966, 344064362223.1291, 344073663041.66266, 344074373923.34204, 344091274530.92993, 344092053897.4513, 344093951036.3884, 344094390569.53845, 344096260574.30334, 344097754764.36536, 344121830931.5493, 344122230184.1327, 344122442422.4909, 344123162515.2345, 344125659643.37683, 344125990315.14746, 344143023194.8363, 344143287535.2977, 344161618941.1001, 344161751678.97656, 344165500758.2339, 344165870613.95056, 344177350400.60767, 344177468674.8568, 344183028791.9252, 344183839876.3722, 344193481356.6896, 344195155641.4381, 344199212120.8043, 344199688208.22906, 344210070905.7732, 344210975158.7116, 344216945069.6273, 344217009160.4188, 344222064437.7667, 344222199446.25336, 344225799788.9877, 344225949833.62866, 344235131802.3326, 344235396359.51965, 344235888194.2587, 344236412150.82605, 344243268402.08826, 344244227895.6644, 344246533485.3854, 344247453716.0163, 344265391465.90576, 344265951517.31604, 344269022688.27545, 344269401749.01355, 344283585516.79846, 344283687750.5784, 344285639861.7007, 344287190390.4475, 344299430043.34796, 344300182589.3632, 344306409778.31793, 344307488655.2722, 344314037052.2157, 344314972651.4728, 344321998416.59424, 344322492836.7007, 344330223828.0399, 344331439930.1085, 344335359922.2787, 344337039939.31085, 344340973589.30347, 344341700979.9398, 344351743947.49756, 344352791715.4415, 344360635627.2669, 344360887574.6682, 344370257765.07074, 344370376915.57794, 344392305821.2256, 344394410632.779, 344397398887.54144, 344398432544.923, 344403393981.704, 344403702976.3249, 344405691382.7501, 344406160104.56226, 344409371190.1416, 344409647838.8944, 344416956349.0563, 344417787795.55597, 344433509932.36444, 344434847287.13135, 344436700527.9746, 344437829922.99585, 344442577704.0262, 344443191111.9095, 344447183351.99146, 344447860482.37366, 344473562044.23285, 344473999818.3303, 344475404600.27045, 344475839216.91785, 344478624174.1986, 344478870367.63855, 344480205395.2737, 344480954210.75555, 344491280615.1919, 344492395168.72473, 344494327229.7143, 344494542351.57983, 344501217536.6443, 344501544837.29816, 344517315307.57495, 344518291099.691, 344518755429.8685, 344518997687.11475, 344541196925.4334, 344542303641.04193, 344552825374.5985, 344552934277.5649, 344557957635.6586, 344558732482.98267, 344562501093.3794, 344562942791.1172, 344570681108.9357, 344570774999.35266, 344586521238.229, 344586961968.6284, 344597685188.9119, 344598020629.15656, 344615932652.308, 344617241365.32837, 344625106806.8749, 344625241466.682, 344632634701.04926, 344633398944.96313, 344661154839.8384, 344661620182.43274, 344665223562.1531, 344666150169.15656, 344669653663.4896, 344671060851.19354, 344677630061.88556, 344678605052.5159, 344685074821.21625, 344686818933.4941, 344694462322.0164, 344695197071.02313, 344708227778.5406, 344708420182.2183, 344708691735.82983, 344708891732.2015, 344711455671.56604, 344712097270.5863, 344714395181.1764, 344714550916.8872, 344725965020.6611, 344726124998.7748, 344732266176.01196, 344732872574.34937, 344735148553.73706, 344735595906.2752, 344761600441.21063, 344763257985.2435, 344768002374.5765, 344769828270.3871, 344775169971.13196, 344776546956.4352, 344792923607.7257, 344793213061.96545, 344813025401.75604, 344814364076.35895, 344821918951.3165, 344822255561.11115, 344830000497.93604, 344831112803.7564, 344843925953.12897, 344845660728.27765, 344846853639.94, 344847191999.89325, 344850806020.8213, 344851469100.04706, 344856897138.32263, 344858043529.5107, 344858863325.4143, 344859460455.9742, 344860496253.86365, 344860729101.7216, 344861614733.1174, 344862348980.43994, 344865384445.8675, 344866567655.07324, 344875096032.68085, 344875754891.09375, 344885024749.52563, 344885580949.76337, 344887234503.6001, 344887657110.595, 344892601558.2496, 344893465106.07074, 344894370040.49255, 344894701217.36707, 344901158967.6753, 344901364406.448, 344907384480.338, 344909302080.193, 344917625509.1414, 344918323941.9812, 344928652630.1327, 344928985492.38794, 344931363347.99994, 344931547701.27216, 344936512721.0399, 344937064446.3511, 344940028418.09436, 344940133343.90137, 344947489937.86786, 344948738701.58716, 344949439690.5558, 344950003141.0804, 344950821570.5698, 344951388819.8153, 344969855815.60645, 344970039908.9476, 344970244792.989, 344971253200.2849, 344977681658.688, 344979516684.3402, 344985688653.7284, 344986222217.1129, 344992408437.8888, 344993409539.1228, 345004615561.6874, 345005371728.92773, 345051179580.6915, 345052278954.75415, 345060181340.1793, 345060732895.12177, 345083932290.04504, 345084022731.6474, 345089193497.7583, 345089512469.3417, 345099506089.371, 345100561503.0283, 345116578236.2236, 345116874655.80347, 345132556351.29846, 345133179550.82263, 345140298373.44415, 345140802667.1413, 345165767982.5581, 345166779057.8224, 345169792410.1914, 345170447927.3071, 345175554164.8203, 345176509001.8778, 345177324928.8982, 345177920198.41925, 345196559061.68396, 345197247388.5025, 345206830690.8862, 345207199574.4486, 345207746477.5591, 345209374676.8671, 345211990454.72, 345212201620.9603, 345213577434.9215, 345214191206.74023, 345246969930.15814, 345247399601.5742, 345257908612.16254, 345258482780.76074, 345264875687.22296, 345265213355.94525, 345267193602.9581, 345267497148.7345, 345271584314.6318, 345272539774.03894, 345298195328.37415, 345298930589.82214, 345299896093.6228, 345300624762.7012, 345301339570.7442, 345302496568.5029, 345309164965.82275, 345309764538.91223, 345312511281.09766, 345313058250.6169, 345331625580.9345, 345332206273.1039, 345334176094.27106, 345334561639.55225, 345336097330.5017, 345336380970.24426, 345337532609.2041, 345337686544.42053, 345344163008.15155, 345344415299.20276, 345350757034.3079, 345351601216.0106, 345353088252.78625, 345353975239.2722, 345355905224.0818, 345357073201.6603, 345388275745.62744, 345388932512.01904, 345398297930.0917, 345399007921.8071, 345407869428.7389, 345408301617.3425, 345432169941.33765, 345433234942.2817, 345444180258.7348, 345445292690.72864, 345455869907.5507, 345456504365.1295, 345463265312.3689, 345463896585.56244, 345464698816.9788, 345465279051.901, 345467066866.89575, 345467274668.1181, 345473828784.7268, 345474230956.1739, 345476233179.60724, 345476495330.0605, 345479598489.2149, 345480021542.8708, 345491708444.24054, 345492657629.4227, 345498133015.2029, 345499033243.92847, 345519993415.4208, 345521559663.09955, 345523046414.7234, 345523414902.61975, 345523808576.6381, 345524213433.22876, 345547461500.8826, 345548841145.3519, 345564279001.6419, 345565350929.095, 345574551557.6238, 345576009286.04486, 345579001989.08093, 345579220064.27765, 345599543564.1472, 345600338807.34546, 345604078806.92883, 345604759599.3064, 345614928830.3702, 345615859737.7154, 345620500203.54865, 345621891138.31946, 345638694375.6832, 345639664891.0497, 345642170853.2762, 345642491398.9877, 345653240327.4059, 345653822088.5765, 345655155676.3582, 345655736536.89197, 345686701288.1443, 345687000851.102, 345688854789.8972, 345690817956.1599, 345694459180.84204, 345694810442.2468, 345696032369.2263, 345696952590.2116, 345715793448.73517, 345716019426.1761, 345720508308.50244, 345721518066.61414, 345725635995.79987, 345726780474.29565, 345729449415.14, 345729499415.22864, 345733768849.6747, 345734121356.0586, 345752283670.75, 345752610417.47046, 345756674923.6752, 345757042113.38586, 345772430446.2921, 345772672842.50854, 345781189708.9092, 345782686561.8203, 345787439620.68225, 345787549486.2509, 345790278581.36096, 345790809590.4027, 345793249713.2449, 345794769699.83484, 345795923742.1851, 345796743631.7194, 345809053373.3624, 345809766280.9697, 345820833245.2925, 345821679502.0943, 345836788038.7351, 345838368258.8491, 345850684023.05023, 345852302091.19885, 345856223437.4389, 345857121954.2523, 345889375577.0615, 345889769415.6052, 345922601769.99744, 345923001537.136, 345931449977.3955, 345931995286.068, 345932558538.7348, 345932940264.7874, 345933482935.527, 345934271038.448, 345941858787.6161, 345942479460.62024, 345950041599.5039, 345950499568.4798, 345966376505.07086, 345966571839.9863, 345973773742.13513, 345974638450.9042, 345978909380.8733, 345980129301.17914, 346004024628.97845, 346004430798.5564, 346004933525.54956, 346005139336.3369, 346007836800.41504, 346008304814.8833, 346027684387.29095, 346028985680.15735, 346043152283.3071, 346043302392.88684, 346049320315.3884, 346049758663.2612, 346051445853.2856, 346052276430.3216, 346053292473.19507, 346054285147.80414, 346059519316.7232, 346059819779.22253, 346079041953.781, 346079216376.67053, 346089696089.63635, 346092174205.24506, 346098036458.92847, 346099948006.2937, 346103419071.2008, 346104276404.0904, 346107245982.4173, 346107376973.02954, 346111922453.2223, 346111986764.585, 346133534021.99133, 346133975490.82806, 346134466688.58673, 346134810226.90247, 346141790156.46893, 346142992990.2399, 346144908961.0029, 346145425863.0597, 346160379274.8433, 346161168522.7199, 346162934009.58936, 346163527520.32294, 346164556500.93146, 346165263691.10364, 346180120284.372, 346180602412.1001, 346182627850.6992, 346183896087.97705, 346201326797.44806, 346202487662.45715, 346206545840.95435, 346206974456.6455, 346207421216.7821, 346207816619.792, 346212727663.4097, 346213308191.08875, 346231715565.2223, 346233355396.3396, 346236545483.6963, 346236763417.2387, 346265312536.0969, 346265619249.59424, 346297804439.61273, 346298635952.6002, 346309874620.11414, 346310121903.5559, 346328974604.8827, 346329078811.8124, 346342126710.42145, 346343333667.51416, 346346577667.8859, 346348437320.674, 346378940603.32275, 346379350119.66364, 346400685043.88586, 346401445157.66797, 346425757058.7865, 346426243396.51447, 346429828302.2552, 346430189070.9735, 346432632827.6008, 346433272755.245, 346434476893.2582, 346435346593.3894, 346453254864.1821, 346453692518.61304, 346457248736.4326, 346458461004.98364, 346458859173.3699, 346459270973.6321, 346464897936.55835, 346466327733.0332, 346478697312.9083, 346479067886.2661, 346486386010.6787, 346486992523.82574, 346499376595.71954, 346500007423.5248, 346506117134.05334, 346507349678.8212, 346511003212.91095, 346512277641.42694, 346547342473.4978, 346549852309.54016, 346572615238.1254, 346574611909.86743, 346580049429.5292, 346580150828.7988, 346581510767.93115, 346583239838.90656, 346603004888.51807, 346603708024.9929, 346626650869.83813, 346629873359.8873, 346644052743.1466, 346646225389.9071, 346646753192.8848, 346647004665.3986, 346680761834.24023, 346681520322.2468, 346690398452.50586, 346691274832.6432, 346709861296.8102, 346710061561.5226, 346715477206.3097, 346716384664.7639, 346746841602.09186, 346747137891.5424, 346763966579.29175, 346765866328.7396, 346767620248.95953, 346767964584.27637, 346768044159.8557, 346768287829.12317, 346774956686.89624, 346775455439.4177, 346779583561.7575, 346779867046.0673, 346790532877.64746, 346791285695.1985, 346791602085.28577, 346791833908.5008, 346801201392.3264, 346802538660.5477, 346808468907.7264, 346810310204.8381, 346837377509.95294, 346839055661.567, 346852275018.50256, 346852605552.21204, 346870345551.197, 346870553516.9751, 346889672838.2771, 346890109339.2462, 346904034113.67566, 346904272930.3885, 346922266246.6561, 346923504940.5311, 346939029588.90106, 346939306055.8145, 346960560227.4441, 346960812001.24304, 346962886398.79474, 346962971974.7429, 346968683195.5952, 346969191586.333, 346976270766.01086, 346977043239.48535, 346994423158.44116, 346995000672.0843, 347003025043.81525, 347003653431.59875, 347017542768.59436, 347018839403.9234, 347019426648.5097, 347019981084.16833, 347030969676.0718, 347031815495.0731, 347035821564.6416, 347036641338.4309, 347040644973.8805, 347042874215.1085, 347045808344.1708, 347046839386.1384, 347052011528.35205, 347052529123.5654, 347079578382.77246, 347080017366.04004, 347080465710.5521, 347081504785.8614, 347082563323.4856, 347082994607.5144, 347083230347.1714, 347084045596.6498, 347107401425.767, 347108593045.19, 347111039189.34937, 347111764453.33746, 347120985965.5532, 347121860483.92786, 347147894197.1374, 347149787616.10077, 347156403165.49646, 347158067742.68774, 347159472418.5913, 347161166088.8951, 347166044543.7383, 347166803055.2244, 347169315072.1309, 347169665698.5604, 347170695441.46136, 347171163719.9243, 347187697954.98975, 347187986600.92957, 347192349495.69916, 347193588922.7871, 347195939686.13824, 347197952544.2731, 347206143427.1924, 347206262996.43536, 347212083149.1168, 347212915722.77155, 347225811156.3573, 347227269370.6802, 347232682544.28705, 347232867225.34595, 347265289196.55493, 347266432618.9049, 347266529499.0636, 347267906963.97363, 347271880546.1752, 347272249181.3006, 347277169152.4833, 347278461887.76996, 347283800487.5503, 347284435250.8451, 347300933424.74347, 347301326924.10004, 347306334764.42456, 347307041229.7062, 347318880107.751, 347320274089.89355, 347352541716.35455, 347352845863.2998, 347358280495.1327, 347358602312.14966, 347360398065.5929, 347363643116.6074, 347367696922.1216, 347368344869.0366, 347381595442.8063, 347383256958.3401, 347385213663.5217, 347386886416.31323, 347388335249.7816, 347388795442.8968, 347401681136.3752, 347402403830.00946, 347409882756.4132, 347411077548.0215, 347416494168.1664, 347417260684.79724, 347417495103.70276, 347417943086.859, 347431636858.23047, 347433261018.64374, 347434288042.3767, 347435194385.9723, 347436933744.345, 347437972222.0099, 347445040617.5009, 347445943640.5807, 347452596035.35364, 347452804489.82434, 347464909946.0519, 347465302414.049, 347481190951.1889, 347481991942.6446, 347484798997.2848, 347486840399.6231, 347500458032.8069, 347500738347.7264, 347503752756.3802, 347504840838.1548, 347513801115.5537, 347515423522.1621, 347519783422.2385, 347521015618.02155, 347525255020.0819, 347526053202.5096, 347531171745.7534, 347531398849.2561, 347534967885.48193, 347536362399.0598, 347538859748.35144, 347539626063.9162, 347545218174.1405, 347545396040.00037, 347549056879.42957, 347549444603.5412, 347555409265.57764, 347555673329.5801, 347556525631.82825, 347557151623.80286, 347578159123.30304, 347578397765.99115, 347584138247.14777, 347585160501.037, 347591091068.9075, 347592734024.2849, 347611998789.9861, 347613034253.6133, 347633986897.4347, 347634153697.50696, 347650245778.90784, 347651692884.2956, 347653722378.19055, 347654673195.9106, 347666075889.3787, 347667927006.73895, 347668960659.93823, 347670044776.39667, 347676022773.5929, 347677110743.89954, 347683736467.47034, 347687674433.6609, 347700015608.3321, 347700117679.613, 347700292834.8212, 347700644598.8408, 347733440664.1601, 347734578985.5875, 347735934503.643, 347736649185.93616, 347769535255.64716, 347769833289.1683, 347774365142.44995, 347775906795.50977, 347799759754.5017, 347801166334.03125, 347806032598.29944, 347806498218.45667, 347823893396.1444, 347824787312.62665, 347835342292.4515, 347837285924.1006, 347860766043.7815, 347860984196.3699, 347873611475.03064, 347874020841.78125, 347879756493.98346, 347881507636.0624, 347888936367.1584, 347889048683.02783, 347891081058.49365, 347892252676.5648, 347920857452.24426, 347921285616.46295, 347922398672.39124, 347922795246.11304, 347934184143.5711, 347934668462.396, 347937935440.55914, 347938120136.6356, 347939701486.3346, 347941755424.7833, 347943803793.7677, 347944805849.28284, 347952223856.32306, 347953799642.3174, 347962235050.83203, 347962415517.12427, 347978235744.423, 347978610280.84894, 347990939739.59033, 347991421925.8988, 348000680112.5708, 348001071013.42346, 348008114207.65454, 348008611820.00885, 348011630580.0688, 348012312974.45953, 348017017202.4592, 348018095559.3078, 348025645597.6809, 348027089609.6915, 348028223974.85895, 348029615766.3738, 348034179891.6046, 348034314256.85944, 348037077830.5584, 348037585806.9489, 348039962469.1562, 348040558683.10974, 348056683118.07623, 348057347295.0556, 348063560236.08496, 348065535272.97437, 348075473425.4379, 348077220322.12573, 348079388659.36945, 348079734359.6942, 348081845749.7803, 348083615376.40295, 348092824792.5126, 348093149303.9988, 348112596939.3686, 348113245765.36053, 348115006286.15204, 348115211610.6731, 348130593040.10547, 348131046259.7248, 348143399749.3683, 348144924647.5499, 348155020303.58765, 348158770354.2742, 348173661132.999, 348174259812.9228, 348175979014.24207, 348176123518.4865, 348176454008.25885, 348176662536.1316, 348187920013.31616, 348188785625.35864, 348218304322.92834, 348218819076.9464, 348232733841.20276, 348233363731.8183, 348255651912.7794, 348256255384.2409, 348257271700.50586, 348258359133.025, 348260503986.7926, 348260930472.02203, 348263409711.1113, 348264493192.62103, 348266508720.5627, 348267526336.12537, 348268477453.75525, 348269161244.3552, 348270098400.1771, 348272079529.09106, 348276065058.39343, 348276410197.9203, 348277596437.70593, 348277758859.22015, 348282629176.6857, 348283739296.8854, 348306330649.00464, 348307715869.59155, 348330056691.42096, 348332035734.3813, 348346412074.2725, 348347700662.8901, 348350682633.7499, 348351027018.6192, 348357582483.147, 348357642841.0289, 348366557600.62915, 348367196536.3691, 348367950353.7407, 348368317091.57153, 348371170320.92395, 348371506927.91785, 348388329327.5032, 348389817556.94507, 348404480784.4412, 348404837806.9458, 348414764002.76483, 348416239156.97656, 348438108498.442, 348438642679.46814, 348450630706.8958, 348451329828.0691, 348457190054.43585, 348457294744.3198, 348462582789.2685, 348463325708.1879, 348465157338.51385, 348465766245.02655, 348479672859.2732, 348481372936.45483, 348482005492.1034, 348483236582.81256, 348488071157.505, 348488698519.44617, 348494927179.0663, 348495148854.5694, 348496064773.35516, 348496415848.1478, 348497433780.06134, 348498196205.7454, 348499963905.2348, 348500469429.14557, 348507790261.6965, 348508219556.00037, 348513329531.87396, 348515711236.6799, 348547935322.4416, 348549086329.85474, 348563351012.9365, 348564355900.66785, 348571352483.58746, 348571699412.9989, 348576077678.6155, 348576561711.5483, 348603385458.0041, 348604195136.03516, 348612204650.6971, 348612986066.9316, 348615861251.4441, 348617588456.318, 348672310158.52277, 348673166837.937, 348676252467.3566, 348678364085.8661, 348696495674.0491, 348696922387.2082, 348714431780.7445, 348716017034.484, 348721028389.66846, 348721545687.3355, 348727744904.0875, 348728293665.66815, 348751731523.484, 348752333964.375, 348752591899.97, 348753012580.2459, 348761275679.1631, 348761522689.145, 348761789271.16943, 348762449181.4514, 348773482567.3121, 348773888575.66296, 348819966011.9728, 348820153839.43726, 348838011417.63544, 348839081260.5568, 348859214542.2124, 348860080085.08624, 348860495825.81305, 348861055041.4389, 348873073529.438, 348874012533.34436, 348880399135.44946, 348880696586.88074, 348890168849.71954, 348891369781.48206, 348952837441.7722, 348953736631.21027, 348964524210.93616, 348965048640.4541, 348968005025.69336, 348968532382.7726, 348969279887.3161, 348970670838.8512, 348973396538.1149, 348974064208.87573, 349028841240.6582, 349031440617.0559, 349040231020.0991, 349042768605.3633, 349074188766.5924, 349075835518.46967, 349095770147.3107, 349096278565.0369, 349096392041.84937, 349096530217.08374, 349105477688.8987, 349106549425.5349, 349165758878.9292, 349166998067.5298, 349186594890.2793, 349188068976.09705, 349190882043.08295, 349191178391.54974, 349191525277.60785, 349192120624.5424, 349193502528.81067, 349194429987.68933, 349210805881.4823, 349210897511.5111, 349214432647.4777, 349215548598.80945, 349221792675.56134, 349223332136.01184, 349272764274.3739, 349273620670.2769, 349276174715.1986, 349277212881.8457, 349279708826.3581, 349281437547.7535, 349283025129.83813, 349284005758.01965, 349288607737.54675, 349288780931.0631, 349300942292.2975, 349302207065.5299, 349306576087.8086, 349306995865.71155, 349317056312.9414, 349318277140.2903, 349328367616.44745, 349328794119.97723, 349342887598.2704, 349344016029.51196, 349355436937.4446, 349356811785.531, 349359418692.076, 349362130418.9066, 349373685688.29047, 349374504076.80286, 349390643910.66895, 349391815076.6942, 349403558807.5919, 349404219485.6655, 349408858364.7256, 349410369639.91833, 349420734150.36975, 349421190098.9353, 349450425689.9131, 349451175920.90753, 349453377473.69073, 349455529221.78845, 349473948458.48364, 349474471208.80457, 349494081771.8958, 349494262116.5441, 349510663345.76575, 349511762186.58374, 349529727657.89233, 349532757072.9037, 349537766798.4107, 349538787824.5048, 349538947699.955, 349539505483.36475, 349543391174.79065, 349543886960.10474, 349562861750.5471, 349563621002.3129, 349569509574.89764, 349570334996.70306, 349574311160.2555, 349575623689.22925, 349585244937.2473, 349585951614.49274, 349587452758.5094, 349588708806.2909, 349600739152.43756, 349601198734.70294, 349629185520.9074, 349630200613.886, 349632927709.4435, 349637572909.1537, 349651732252.8555, 349653084661.57764, 349658612286.6806, 349659474459.2065, 349669104627.80554, 349669524355.95856, 349672524624.52106, 349677359116.0469, 349692769287.8109, 349693798178.9936, 349695274084.04333, 349696696826.76056, 349707603338.54803, 349709326125.9071, 349728078269.94495, 349728904846.95984, 349729297717.8044, 349729687135.2949, 349745824996.6031, 349746857384.02686, 349748492064.8555, 349749690302.69916, 349750386623.19214, 349751796660.021, 349756876050.9148, 349757652391.5745, 349767310458.16046, 349767575586.1058, 349767846130.32434, 349767946701.6456, 349770626944.55176, 349773268778.1975, 349805522716.8837, 349806909864.0065, 349816208941.3174, 349816653083.7993, 349822218093.7395, 349823248937.26746, 349839263655.4606, 349839815073.7748, 349840112737.30164, 349840733762.4911, 349852018465.42633, 349852691177.06384, 349895030953.5062, 349895208605.09937, 349936720815.8625, 349936845342.11365, 349941201783.54126, 349942329550.9313, 349947880227.94336, 349948759351.7279, 349964596765.006, 349966354240.0088, 349968720354.9577, 349970085986.03406, 349970444950.4953, 349970902689.646, 349974560747.9414, 349975594738.3055, 349977151233.5314, 349978637373.859, 350011361390.64545, 350011815927.439, 350012618541.7192, 350013228748.5624, 350032280519.8883, 350032848910.44385, 350056205306.55225, 350059257638.8367, 350065703075.5939, 350066268460.027, 350074017168.45593, 350077921203.59436, 350125804618.3455, 350126754122.0111, 350135315942.5251, 350135781002.61707, 350158476744.666, 350159727755.5353, 350170872187.74493, 350172044140.45953, 350180058086.93854, 350182492206.6471, 350186182587.66846, 350186820114.2411, 350189294312.1206, 350189959973.1122, 350191101167.1377, 350192541610.9541, 350231506491.9061, 350231830790.76483, 350245533543.9773, 350246043535.8231, 350267089243.6146, 350268443615.8096, 350301338625.317, 350302201491.1831, 350331266626.76074, 350332098342.7103, 350343584952.34686, 350345659113.1588, 350348329878.90344, 350348552726.5924, 350354925762.353, 350357325999.46844, 350363931868.31793, 350366636169.81024, 350376157852.2634, 350376577604.96606, 350415504736.9742, 350417009125.65625, 350427477867.78253, 350430168668.4205, 350465905316.9263, 350466448129.4487, 350496450672.9621, 350497104087.5744, 350498147402.7897, 350499800540.32855, 350512562635.72754, 350514950332.9741, 350523666447.76587, 350524841697.1848, 350527121725.1502, 350528535939.06116, 350618598315.8821, 350618708880.57996, 350655573788.0686, 350656330434.52875, 350662676341.53503, 350663033585.82996, 350667264719.3375, 350668332139.067, 350673406196.9481, 350674180539.1858, 350694494942.51904, 350695496822.2737, 350727551096.7229, 350728780096.4792, 350735627292.65393, 350735893465.1364, 350741797486.3932, 350742779934.9717, 350744637529.7064, 350746618561.2675, 350749777095.657, 350750902286.46844, 350794665579.4966, 350794948836.8229, 350821242202.4426, 350821986269.5162, 350831548290.88354, 350831941656.05054, 350864698575.3325, 350867798681.5255, 350916942456.7601, 350917601563.97186, 350921241226.8467, 350921523586.65045, 350923894140.46643, 350926966075.93176, 350929477543.6842, 350931084743.3869, 350942795955.9248, 350945622029.30536, 350958432560.5357, 350959009611.0129, 350961994128.9016, 350963659194.36597, 350995593768.0405, 350997460861.2422, 350999394552.40186, 350999722352.0526, 351002038925.9612, 351006047664.15906, 351042166336.97705, 351042716295.14526, 351071176979.6854, 351073835175.8495, 351117820670.16187, 351118830298.6726, 351119878154.8001, 351120522452.65607, 351144191719.94104, 351144765745.8222, 351147945987.50214, 351149336472.43195, 351150559395.17444, 351151255558.9011, 351166214558.5858, 351169201895.59674, 351188427544.16125, 351190016915.2119, 351214631603.3302, 351215365813.489, 351235237398.053, 351235853893.75085, 351275712760.4627, 351277710869.61847, 351329294327.58, 351330055495.8003, 351330774100.8169, 351331371680.00745, 351348479182.39294, 351349103350.2884, 351397764303.0101, 351398316538.4943, 351430595460.54407, 351434412622.7351, 351443945764.6986, 351445257070.64594, 351462718385.5192, 351464656309.8077, 351512642440.4818, 351513947994.20325, 351529598514.583, 351532794173.3655, 351540781560.3232, 351544428343.66486, 351562822017.77203, 351563496833.3437, 351595806526.0552, 351596038942.7356, 351629948497.34216, 351630188167.742, 351657028016.40063, 351658348341.40466, 351667217523.52704, 351669454680.1615, 351675339918.14417, 351676348842.8273, 351681520533.2528, 351681847290.55835, 351702284527.5332, 351705671084.3975, 351714953028.9879, 351715475378.2267, 351716160708.76154, 351721136095.185, 351749313028.4922, 351752821305.9793, 351778965507.9768, 351779843696.9391, 351803765603.2731, 351805852146.5189, 351812916968.8065, 351814385394.9005, 351822965429.6771, 351824066887.8602, 351874426384.9554, 351876513324.52344, 351882250413.40234, 351882538013.4261, 351895395510.2891, 351897664717.4562, 351918235484.2468, 351920118103.8915, 351942643178.8766, 351943988338.1079, 351996435808.83484, 351997284062.58496, 352001122696.07275, 352002836200.8445, 352009840276.3197, 352011946009.58435, 352033065963.80444, 352033786741.0731, 352045330375.50415, 352045763046.0112, 352048213340.2725, 352048691192.4204, 352056976786.8019, 352057510248.74744, 352113275154.2019, 352116086898.41425, 352121068179.97076, 352122209623.4009, 352137168237.6676, 352138061444.0416, 352150957189.81464, 352153269601.79736, 352156784723.2165, 352156818861.07556, 352167718648.2538, 352172515301.40045, 352183844149.58075, 352184853893.8098, 352199337272.39703, 352200238119.1408, 352210373525.06274, 352211494227.82275, 352211723300.43286, 352212777199.3154, 352232210989.9946, 352232764330.89764, 352247858859.2841, 352250051682.0235, 352268367303.38806, 352268827807.1908, 352274618915.6047, 352274809521.79315, 352283893341.9477, 352286541195.7584, 352298920379.83545, 352300320302.2533, 352301822226.89233, 352302245886.1456, 352307690205.2339, 352308423637.44006, 352462355600.164, 352463652622.17285, 352474139990.93384, 352474611849.7343, 352499726656.3051, 352501444589.59937, 352502906227.2355, 352503203582.39233, 352518060902.5425, 352519324573.52893, 352520549639.3255, 352522184617.6837, 352542637723.07794, 352543187741.1965, 352554928935.1541, 352557166236.5757, 352562101804.8083, 352565810413.5955, 352567027711.13855, 352567563138.6743, 352576894958.9016, 352577196074.71094, 352606601317.5811, 352609858405.1676, 352620018532.5717, 352620742310.9895, 352634997586.4781, 352635762630.3457, 352651214753.1684, 352652673780.136, 352665822793.14075, 352666830729.9527, 352670049443.67395, 352671147724.7722, 352673441764.0277, 352676398087.3898, 352683159549.9828, 352687453557.4546, 352687792962.553, 352688799643.36554, 352699668585.9929, 352700738293.4568, 352724918468.9874, 352727676474.7555, 352733582613.74646, 352735420350.83875, 352745584725.26135, 352746772586.53235, 352788801066.972, 352796853883.4563, 352800112057.5546, 352803416038.9236, 352826420492.49036, 352828782830.582, 352841569196.06995, 352846664253.0366, 352885417615.03906, 352887267529.2192, 352888994784.6909, 352890889956.34564, 352898433742.2633, 352899502753.719, 352954994654.59875, 352957930754.4796, 352960960502.7692, 352961375623.4743, 353005599422.1007, 353009486311.71924, 353015309513.3134, 353017835806.516, 353062135822.1697, 353062970945.43396, 353077834648.82416, 353080197574.73364, 353135280918.3949, 353135918008.86035, 353140371335.1677, 353144081963.64044, 353258738573.1246, 353262508594.5458, 353286544238.68933, 353289314975.80597, 353348593480.2027, 353350281362.68506, 353355410898.9396, 353355955738.6541, 353371081468.5555, 353372376571.2942, 353411864948.0481, 353412481468.35364, 353418405698.0418, 353420925197.8626, 353428386343.83777, 353430836870.3805, 353432273028.19684, 353436287014.5774, 353459033698.14886, 353459876441.7352, 353480049410.86035, 353483883660.0634, 353512077063.1174, 353514536991.3987, 353581815545.6526, 353584246690.0748, 353602565772.0172, 353606634327.1607, 353639811809.80365, 353642819043.31433, 353676705234.97754, 353678141913.0487, 353701287716.00543, 353702466127.8136, 353864314442.96893, 353867060082.88916, 353918413854.094, 353920616092.55286, 353932478874.8208, 353933062999.4917, 354006757013.23755, 354006922672.85, 354035982638.82935, 354037460929.35406, 354078854789.90137, 354080306948.41565, 354081372235.9808, 354083695077.4647, 354164738032.17145, 354167440550.00256, 354273390213.2096, 354274290753.0858, 354285258369.95325, 354289983917.4197, 354305178605.6303, 354306695041.86, 354359059979.0476, 354362735908.9243, 354515634663.468, 354517534402.04175, 354522093627.5626, 354525313474.3876, 354530654820.7167, 354531701320.9669, 354551036421.42236, 354553050142.97375, 354653876973.74756, 354654408961.40356, 354661584172.23206, 354664417988.3823, 354701906993.7312, 354703634406.47546, 354705068140.8397, 354709117345.43066, 354765804251.1218, 354767569435.51807, 354810525173.6769, 354812245276.9748, 354827208452.6791, 354831767478.85095, 354890739913.6405, 354892617812.8587, 354902270902.2483, 354906418408.72565, 354991761834.15393, 354992738052.8348, 355030300674.5521, 355031781126.42163, 355041433711.25726, 355043669695.37555, 355090293490.9943, 355091168013.21436, 355162107878.55383, 355163752273.3164, 355176314142.2985, 355178343086.82043, 355212280222.0129, 355214265903.7047, 355270234335.9791, 355274160639.91895, 355509758489.8257, 355516021445.90796, 355597053984.35596, 355599454490.442, 355675168565.0912, 355687591970.6649, 355816196125.0093, 355827791207.5453, 355838439952.88513, 355839849929.3821, 355850322964.69946, 355851459129.9379, 355854647358.6596, 355856436526.12915, 355902657026.82117, 355907255593.8832, 355956421760.1988, 355957601185.71, 355979398873.7415, 355985091420.4293, 356036957776.5877, 356041155350.31006, 356057239595.2005, 356059087297.76733, 356062981585.4378, 356065107101.59937, 356069130380.6575, 356072199345.3969, 356116531483.8068, 356118457495.43445, 356159626757.05975, 356167990174.9846, 356202806791.433, 356205794299.4087, 356227704338.9458, 356230145284.5186, 356362554826.4313, 356368525010.7364, 356382716459.8546, 356389310665.0177, 356456751035.48114, 356467007303.66565, 356530726112.318, 356532705784.9595, 356555062430.6075, 356557709941.3722, 356590306181.30225, 356591413402.5675, 356600863840.2089, 356605569751.67334, 356611260894.0362, 356615820013.6512, 356624430206.2227, 356625094323.129, 356704636499.5552, 356706896406.08545, 356737272102.65063, 356739410577.7289, 356815799822.99646, 356819492853.92395, 356975370776.2803, 356982625595.103, 356997860028.0803, 357003494470.63385, 357043045345.2306, 357049953780.52576, 357153004230.6642, 357157916165.6416, 357180737938.5254, 357180942458.03174, 357305181141.0552, 357307606692.552, 357393121281.5979, 357396470807.3567, 357483656059.3496, 357486122997.8223, 357499538553.3015, 357501023286.1279, 357583528903.91797, 357584549770.87915, 357591439303.89124, 357601166437.65826, 357625091298.8396, 357628406236.69324, 357698203309.2793, 357700689395.06555, 357787158533.3213, 357788282554.92944, 357850204779.46985, 357864766351.4723, 357893065570.67566, 357902474646.6123, 358320251661.19775, 358322198816.89545, 358381149606.6516, 358386145630.9678, 358774630928.4743, 358776377292.9782, 359060319019.1627, 359064428503.72864, 359149567029.5814, 359149831792.5601, 359155154434.6579, 359164893071.3133, 359205248868.4614, 359215300894.4758, 359293097911.5742, 359295363424.59924, 359448336142.84143, 359454469471.60315, 359565295139.415, 359571827874.3716, 359616764572.97217, 359620569218.14966, 359775077997.4157, 359787855820.6051, 359897825524.99646, 359905421226.63464, 359976860058.08746, 359986964369.2583, 360034016291.9044, 360043362279.7993, 360160521086.96326, 360166949698.0808, 360304311870.44006, 360305477666.4999, 360445158655.58105, 360457207248.2667, 360687231261.6117, 360700995885.4573, 360909365058.74854, 360912739769.93787, 361005449907.854, 361010554954.7781, 361163017546.07434, 361172360564.6688, 361258423238.17456, 361268711234.9187, 361719963320.09674, 361721910888.7435, 361884587496.1391, 361891329520.72235, 361908272387.6967, 361917096637.9835, 362229654276.307, 362237878094.29504, 362718191099.66675, 362737910629.5148, 363220431713.64404, 363226088293.30676, 363385696127.38635, 363400447967.7041, 363631918975.229, 363656088723.62836, 363893938864.20557, 363909736466.41693, 364577244767.2521, 364585258568.7303, 365672321201.18726, 365688730170.6492, 366241576865.30707, 366255423617.72894, 367098793712.4461, 367171216671.4888, 367281960357.95264, 367314017568.86926, 367806572131.7355, 367825703659.9105, 368547878761.37714, 368557015637.423, 371195972677.02185, 371216281625.6926, 371952412145.8568, 371997739207.3457, 372308690599.8333, 372602501391.15216])
def eqenergy(rows):
    return np.sum(rows, axis=1)
def classify(rows):
    energys = eqenergy(rows)
    start_label = 1
    def thresh_search(input_energys):
        numers = np.searchsorted(energy_thresholds, input_energys, side='left')-1
        indys = np.argwhere(np.logical_and(numers<len(energy_thresholds), numers>=0)).reshape(-1)
        defaultindys = np.argwhere(np.logical_not(np.logical_and(numers<len(energy_thresholds), numers>=0))).reshape(-1)
        outputs = np.zeros(input_energys.shape[0])
        outputs[indys] = (numers[indys] + start_label) % 2
        outputs[defaultindys]=0
        return outputs
    return thresh_search(energys)

numthresholds=4046



# Main method
model_cap = numthresholds


def Validate(file):
    cleanarr = np.loadtxt(file, delimiter=',', dtype='float64')


    if n_classes == 2:
        #note that classification is a single line of code
        outputs = classify(cleanarr[:, :-1])


        #metrics
        count, correct_count, num_TP, num_TN, num_FP, num_FN, num_class_1, num_class_0 = 0, 0, 0, 0, 0, 0, 0, 0
        correct_count = int(np.sum(outputs.reshape(-1) == cleanarr[:, -1].reshape(-1)))
        count = outputs.shape[0]
        num_TP = int(np.sum(np.logical_and(outputs.reshape(-1) == 1, cleanarr[:, -1].reshape(-1) == 1)))
        num_TN = int(np.sum(np.logical_and(outputs.reshape(-1) == 0, cleanarr[:, -1].reshape(-1) == 0)))
        num_FN = int(np.sum(np.logical_and(outputs.reshape(-1) == 0, cleanarr[:, -1].reshape(-1) == 1)))
        num_FP = int(np.sum(np.logical_and(outputs.reshape(-1) == 1, cleanarr[:, -1].reshape(-1) == 0)))
        num_class_0 = int(np.sum(cleanarr[:, -1].reshape(-1) == 0))
        num_class_1 = int(np.sum(cleanarr[:, -1].reshape(-1) == 1))
        return count, correct_count, num_TP, num_TN, num_FP, num_FN, num_class_1, num_class_0


    else:
        #validation
        outputs = classify(cleanarr[:, :-1])


        #metrics
        count, correct_count = 0, 0
        numeachclass = {}
        for k, o in enumerate(outputs):
            if int(o) == int(float(cleanarr[k, -1])):
                correct_count += 1
            if int(float(cleanarr[k, -1])) in numeachclass.keys():
                numeachclass[int(float(cleanarr[k, -1]))] += 1
            else:
                numeachclass[int(float(cleanarr[k, -1]))] = 0
            count += 1
        return count, correct_count, numeachclass, outputs, cleanarr[:,-1]


#Predict on unlabeled data
def Predict(file, get_key, headerless, preprocessedfile, classmapping):
    cleanarr = np.loadtxt(file, delimiter=',', dtype='float64')
    with open(preprocessedfile, 'r') as csvinput:
        dirtyreader = csv.reader(csvinput)

        #print original header
        if (not headerless):
            print(','.join(next(dirtyreader, None) + ["Prediction"]))

        outputs = classify(cleanarr)

        for k, row in enumerate(dirtyreader):
            print(str(','.join(str(j) for j in ([i for i in row]))) + ',' + str(get_key(int(outputs[k]), classmapping)))



#Main
if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Predictor trained on '+TRAINFILE)
    parser.add_argument('csvfile', type=str, help='CSV file containing test set (unlabeled).')
    parser.add_argument('-validate', action='store_true', help='Validation mode. csvfile must be labeled. Output is classification statistics rather than predictions.')
    parser.add_argument('-cleanfile', action='store_true', help='Use this flag to save prediction time if the csvfile you are passing has already been preprocessed. Implies headerless.')
    parser.add_argument('-headerless', help='Do not treat the first line of csvfile as a header.', action='store_true')
    args = parser.parse_args()
    faulthandler.enable()

    #clean if not already clean
    if not args.cleanfile:
        tempdir = tempfile.gettempdir()
        cleanfile = tempdir + os.sep + "clean.csv"
        preprocessedfile = tempdir + os.sep + "prep.csv"
        preprocess(args.csvfile,preprocessedfile,args.headerless,(not args.validate))
        get_key, classmapping = clean(preprocessedfile, cleanfile, -1, args.headerless, (not args.validate))
    else:
        cleanfile=args.csvfile
        preprocessedfile=args.csvfile
        get_key = lambda x,y: x
        classmapping = {}

    #Predict or Validate?
    if not args.validate:
        Predict(cleanfile, get_key, args.headerless, preprocessedfile, classmapping)


    else:
        
        if n_classes == 2:
            count, correct_count, num_TP, num_TN, num_FP, num_FN, num_class_1, num_class_0 = Validate(cleanfile)
        else:
            count, correct_count, numeachclass, preds, true_labels = Validate(cleanfile)


        #validation report
        if n_classes == 2:
            #Base metrics
            FN = float(num_FN) * 100.0 / float(count)
            FP = float(num_FP) * 100.0 / float(count)
            TN = float(num_TN) * 100.0 / float(count)
            TP = float(num_TP) * 100.0 / float(count)
            num_correct = correct_count

            #Calculated Metrics
            if int(num_TP + num_FN) != 0:
                TPR = num_TP / (num_TP + num_FN) # Sensitivity, Recall
            if int(num_TN + num_FP) != 0:
                TNR = num_TN / (num_TN + num_FP) # Specificity
            if int(num_TP + num_FP) != 0:
                PPV = num_TP / (num_TP + num_FP) # Recall
            if int(num_FN + num_TP) != 0:
                FNR = num_FN / (num_FN + num_TP) # Miss rate
            if int(2 * num_TP + num_FP + num_FN) != 0:
                FONE = 2 * num_TP / (2 * num_TP + num_FP + num_FN) # F1 Score
            if int(num_TP + num_FN + num_FP) != 0:
                TS = num_TP / (num_TP + num_FN + num_FP) # Critical Success Index
            #Best Guess Accuracy
            randguess = int(float(10000.0 * max(num_class_1, num_class_0)) / count) / 100.0
            #Model Accuracy
            modelacc = int(float(num_correct * 10000) / count) / 100.0
            #Report
            print("System Type:                        Binary classifier")
            print("Best-guess accuracy:                {:.2f}%".format(randguess))
            print("Model accuracy:                     {:.2f}%".format(modelacc) + " (" + str(int(num_correct)) + "/" + str(count) + " correct)")
            print("Improvement over best guess:        {:.2f}%".format(modelacc - randguess) + " (of possible " + str(round(100 - randguess, 2)) + "%)")
            print("Model capacity (MEC):               {:.0f} bits".format(model_cap))
            print("Generalization ratio:               {:.2f}".format(int(float(num_correct * 100) / model_cap) / 100.0) + " bits/bit")
            print("Model efficiency:                   {:.2f}%/parameter".format(int(100 * (modelacc - randguess) / model_cap) / 100.0))
            print("System behavior")
            print("True Negatives:                     {:.2f}%".format(TN) + " (" + str(int(num_TN)) + "/" + str(count) + ")")
            print("True Positives:                     {:.2f}%".format(TP) + " (" + str(int(num_TP)) + "/" + str(count) + ")")
            print("False Negatives:                    {:.2f}%".format(FN) + " (" + str(int(num_FN)) + "/" + str(count) + ")")
            print("False Positives:                    {:.2f}%".format(FP) + " (" + str(int(num_FP)) + "/" + str(count) + ")")
            if int(num_TP + num_FN) != 0:
                print("True Pos. Rate/Sensitivity/Recall:  {:.2f}".format(TPR))
            if int(num_TN + num_FP) != 0:
                print("True Neg. Rate/Specificity:         {:.2f}".format(TNR))
            if int(num_TP + num_FP) != 0:
                print("Precision:                          {:.2f}".format(PPV))
            if int(2 * num_TP + num_FP + num_FN) != 0:
                print("F-1 Measure:                        {:.2f}".format(FONE))
            if int(num_TP + num_FN) != 0:
                print("False Negative Rate/Miss Rate:      {:.2f}".format(FNR))
            if int(num_TP + num_FN + num_FP) != 0:
                print("Critical Success Index:             {:.2f}".format(TS))

        #Multiclass
        else:
            num_correct = correct_count
            modelacc = int(float(num_correct * 10000) / count) / 100.0
            randguess = round(max(numeachclass.values()) / sum(numeachclass.values()) * 100, 2)
            print("System Type:                        " + str(n_classes) + "-way classifier")
            print("Best-guess accuracy:                {:.2f}%".format(randguess))
            print("Model accuracy:                     {:.2f}%".format(modelacc) + " (" + str(int(num_correct)) + "/" + str(count) + " correct)")
            print("Improvement over best guess:        {:.2f}%".format(modelacc - randguess) + " (of possible " + str(round(100 - randguess, 2)) + "%)")
            print("Model capacity (MEC):               {:.0f} bits".format(model_cap))
            print("Generalization ratio:               {:.2f}".format(int(float(num_correct * 100) / model_cap) / 100.0) + " bits/bit")





            def confusion_matrix(y_true, y_pred, labels=None, sample_weight=None, normalize=None):
                #check for numpy/scipy is imported
                try:
                    from scipy.sparse import coo_matrix #required for multiclass metrics
                    try:
                        np.array
                    except:
                        import numpy as np
                except:
                    raise ValueError("Scipy and Numpy Required for Multiclass Metrics")
                # Compute confusion matrix to evaluate the accuracy of a classification.
                # By definition a confusion matrix :math:C is such that :math:C_{i, j}
                # is equal to the number of observations known to be in group :math:i and
                # predicted to be in group :math:j.
                # Thus in binary classification, the count of true negatives is
                # :math:C_{0,0}, false negatives is :math:C_{1,0}, true positives is
                # :math:C_{1,1} and false positives is :math:C_{0,1}.
                # Read more in the :ref:User Guide <confusion_matrix>.
                # Parameters
                # ----------
                # y_true : array-like of shape (n_samples,)
                # Ground truth (correct) target values.
                # y_pred : array-like of shape (n_samples,)
                # Estimated targets as returned by a classifier.
                # labels : array-like of shape (n_classes), default=None
                # List of labels to index the matrix. This may be used to reorder
                # or select a subset of labels.
                # If None is given, those that appear at least once
                # in y_true or y_pred are used in sorted order.
                # sample_weight : array-like of shape (n_samples,), default=None
                # Sample weights.
                # normalize : {'true', 'pred', 'all'}, default=None
                # Normalizes confusion matrix over the true (rows), predicted (columns)
                # conditions or all the population. If None, confusion matrix will not be
                # normalized.
                # Returns
                # -------
                # C : ndarray of shape (n_classes, n_classes)
                # Confusion matrix.
                # References
                # ----------
                if labels is None:
                    labels = np.array(list(set(list(y_true.astype('int')))))
                else:
                    labels = np.asarray(labels)
                    if np.all([l not in y_true for l in labels]):
                        raise ValueError("At least one label specified must be in y_true")


                if sample_weight is None:
                    sample_weight = np.ones(y_true.shape[0], dtype=np.int64)
                else:
                    sample_weight = np.asarray(sample_weight)
                if y_true.shape[0]!=y_pred.shape[0]:
                    raise ValueError("y_true and y_pred must be of the same length")

                if normalize not in ['true', 'pred', 'all', None]:
                    raise ValueError("normalize must be one of {'true', 'pred', 'all', None}")


                n_labels = labels.size
                label_to_ind = {y: x for x, y in enumerate(labels)}
                # convert yt, yp into index
                y_pred = np.array([label_to_ind.get(x, n_labels + 1) for x in y_pred])
                y_true = np.array([label_to_ind.get(x, n_labels + 1) for x in y_true])
                # intersect y_pred, y_true with labels, eliminate items not in labels
                ind = np.logical_and(y_pred < n_labels, y_true < n_labels)
                y_pred = y_pred[ind]
                y_true = y_true[ind]
                # also eliminate weights of eliminated items
                sample_weight = sample_weight[ind]
                # Choose the accumulator dtype to always have high precision
                if sample_weight.dtype.kind in {'i', 'u', 'b'}:
                    dtype = np.int64
                else:
                    dtype = np.float64
                cm = coo_matrix((sample_weight, (y_true, y_pred)), shape=(n_labels, n_labels), dtype=dtype,).toarray()


                with np.errstate(all='ignore'):
                    if normalize == 'true':
                        cm = cm / cm.sum(axis=1, keepdims=True)
                    elif normalize == 'pred':
                        cm = cm / cm.sum(axis=0, keepdims=True)
                    elif normalize == 'all':
                        cm = cm / cm.sum()
                    cm = np.nan_to_num(cm)
                return cm


            print("Confusion Matrix:")
            mtrx = confusion_matrix(np.array(true_labels).reshape(-1), np.array(preds).reshape(-1))
            mtrx = mtrx / np.sum(mtrx) * 100.0
            print(' ' + np.array2string(mtrx, formatter={'float': (lambda x: '{:.2f}%'.format(round(float(x), 2)))})[1:-1])



    #remove tempfile if created
    if not args.cleanfile: 
        os.remove(cleanfile)
        os.remove(preprocessedfile)


