#!/usr/bin/env python3
#
# This code is was produced by an alpha version of Brainome Daimensions(tm) and is 
# licensed under GNU GPL v2.0 or higher. For details, please see: 
# https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html
#
#
# Output of Brainome Daimensions(tm) 0.91 Table Compiler v0.922.
# Invocation: btc https://www.openml.org/data/get_csv/19335532/file7b5323e77330.arff -o Predictors/guillermo_QC.py -target class -stopat 91.25 -f QC -e 100 --yes -server brain.brainome.ai -port 8090
# Total compiler execution time: 2:54:17.62. Finished on: Apr-14-2020 20:52:51.
# This source code requires Python 3.
#
"""
System Type:                        Binary classifier
Best-guess accuracy:                59.98%
Model accuracy:                     76.61% (15323/20000 correct)
Improvement over best guess:        16.63% (of possible 40.02%)
Model capacity (MEC):               4896 bits
Generalization ratio:               3.12 bits/bit
Model efficiency:                   0.00%/parameter
System behavior
True Negatives:                     48.49% (9698/20000)
True Positives:                     28.12% (5625/20000)
False Negatives:                    11.89% (2378/20000)
False Positives:                    11.49% (2299/20000)
True Pos. Rate/Sensitivity/Recall:  0.70
True Neg. Rate/Specificity:         0.81
Precision:                          0.71
F-1 Measure:                        0.71
False Negative Rate/Miss Rate:      0.30
Critical Success Index:             0.55

"""

# Imports -- Python3 standard library
import sys
import math
import os
import argparse
import tempfile
import csv
import binascii
import faulthandler

from bisect import bisect_left
# Imports -- external
import numpy as np # For numpy see: http://numpy.org
from numpy import array

# Magic constants follow
# I/O buffer for clean. Reduce this constant for low memory devices. 
IOBUF = 100000000

# Ugly workaround for large classifiers
sys.setrecursionlimit(1000000)

# Training file given to compiler
TRAINFILE = "file7b5323e77330.csv"


#Number of attributes
num_attr = 4296
n_classes = 2


# Preprocessor for CSV files
def preprocess(inputcsvfile, outputcsvfile, headerless=False, testfile=False, target='', ignorecolumns=[], ignorelabels=[]):
    il=[]
    
    ignorelabels=[]
    ignorecolumns=[]
    target="class"


    if (testfile):
        target=''
    
    with open(outputcsvfile, "w+") as outputfile:
        with open(inputcsvfile) as csvfile:
            reader = csv.reader(csvfile)
            if (headerless==False):
                header=next(reader, None)
                try:
                    if (target!=''): 
                        hc=header.index(target)
                    else:
                        hc=len(header)-1
                        target=header[hc]
                except:
                    raise NameError("Target '"+target+"' not found! Header must be same as in file passed to btc.")
                for i in range(0,len(ignorecolumns)):
                    try:
                        col=header.index(ignorecolumns[i])
                        if (col==hc):
                            raise ValueError("Attribute '"+ignorecolumns[i]+"' is the target. Header must be same as in file passed to btc.")
                        il=il+[col]
                    except ValueError:
                        raise
                    except:
                        raise NameError("Attribute '"+ignorecolumns[i]+"' not found in header. Header must be same as in file passed to btc.")
                for i in range(0,len(header)):      
                    if (i==hc):
                        continue
                    if (i in il):
                        continue
                    print(header[i]+",", end = '', file=outputfile)
                print(header[hc],file=outputfile)

                for row in csv.DictReader(open(inputcsvfile)):
                    if (row[target] in ignorelabels):
                        continue
                    for name in header:
                        if (name in ignorecolumns):
                            continue
                        if (name==target):
                            continue
                        if (',' in row[name]):
                            print ('"'+row[name]+'"'+",",end = '', file=outputfile)
                        else:
                            print (row[name]+",",end = '', file=outputfile)
                    print (row[target], file=outputfile)

            else:
                try:
                    if (target!=""): 
                        hc=int(target)
                    else:
                        hc=-1
                except:
                    raise NameError("No header found but attribute name given as target. Header must be same as in file passed to btc.")
                for i in range(0,len(ignorecolumns)):
                    try:
                        col=int(ignorecolumns[i])
                        if (col==hc):
                            raise ValueError("Attribute "+str(col)+" is the target. Cannot ignore. Header must be same as in file passed to btc.")
                        il=il+[col]
                    except ValueError:
                        raise
                    except:
                        raise ValueError("No header found but attribute name given in ignore column list. Header must be same as in file passed to btc.")
                for row in reader:
                    if (hc==-1):
                        hc=len(row)-1
                    if (row[hc] in ignorelabels):
                        continue
                    for i in range(0,len(row)):
                        if (i in il):
                            continue
                        if (i==hc):
                            continue
                        if (',' in row[i]):
                            print ('"'+row[i]+'"'+",",end = '', file=outputfile)
                        else:
                            print(row[i]+",",end = '', file=outputfile)
                    print (row[hc], file=outputfile)

def clean(filename, outfile, rounding=-1, headerless=False, testfile=False):
    
    clean.classlist = []
    clean.testfile = testfile
    clean.mapping = {}
    clean.mapping={}

    def convert(cell):
        value = str(cell)
        try:
            result = int(value)
            return result
        except:
            try:
                result = float(value)
                if (rounding != -1):
                    result = int(result * math.pow(10, rounding)) / math.pow(10, rounding)
                return result
            except:
                result = (binascii.crc32(value.encode('utf8')) % (1 << 32))
                return result

    # function to return key for any value 
    def get_key(val, clean_classmapping):
        if clean_classmapping == {}:
            return val
        for key, value in clean_classmapping.items(): 
            if val == value:
                return key
        if val not in list(clean_classmapping.values):
            raise ValueError("Label key does not exist")

    def convertclassid(cell):
        if (clean.testfile):
            return convert(cell)
        value = str(cell)
        if (value == ''):
            raise ValueError("All cells in the target column must contain a class label.")

        if (not clean.mapping == {}):
            result = -1
            try:
                result = clean.mapping[cell]
            except:
                raise ValueError("Class label '" + value + "' encountered in input not defined in user-provided mapping.")
            if (not result == int(result)):
                raise ValueError("Class labels must be mapped to integer.")
            if (not str(result) in clean.classlist):
                clean.classlist = clean.classlist + [str(result)]
            return result
        try:
            result = float(cell)
            if (rounding != -1):
                result = int(result * math.pow(10, rounding)) / math.pow(10, rounding)
            else:
                result = int(int(result * 100) / 100)  # round classes to two digits

            if (not str(result) in clean.classlist):
                clean.classlist = clean.classlist + [str(result)]
        except:
            result = (binascii.crc32(value.encode('utf8')) % (1 << 32))
            if (result in clean.classlist):
                result = clean.classlist.index(result)
            else:
                clean.classlist = clean.classlist + [result]
                result = clean.classlist.index(result)
            if (not result == int(result)):
                raise ValueError("Class labels must be mappable to integer.")
        finally:
            if (result < 0):
                raise ValueError("Integer class labels must be positive and contiguous.")

        return result

    rowcount = 0
    with open(filename) as csv_file:
        reader = csv.reader(csv_file)
        f = open(outfile, "w+")
        if (headerless == False):
            next(reader, None)
        outbuf = []
        for row in reader:
            if (row == []):  # Skip empty rows
                continue
            rowcount = rowcount + 1
            rowlen = num_attr
            if (not testfile):
                rowlen = rowlen + 1    
            if (not len(row) == rowlen):
                raise ValueError("Column count must match trained predictor. Row " + str(rowcount) + " differs.")
            i = 0
            for elem in row:
                if(i + 1 < len(row)):
                    outbuf.append(str(convert(elem)))
                    outbuf.append(',')
                else:
                    classid = str(convertclassid(elem))
                    outbuf.append(classid)
                i = i + 1
            if (len(outbuf) < IOBUF):
                outbuf.append(os.linesep)
            else:
                print(''.join(outbuf), file=f)
                outbuf = []
        print(''.join(outbuf), end="", file=f)
        f.close()

        if (testfile == False and not len(clean.classlist) >= 2):
            raise ValueError("Number of classes must be at least 2.")

        return get_key, clean.mapping

# Calculate energy

# Imports -- external
import numpy as np # For numpy see: http://numpy.org
from numpy import array
energy_thresholds = array([1154.819059674, 1160.2317582745, 1166.7355072275, 1170.1698340095, 1175.5553205095, 1176.37290458, 1176.61010108, 1177.45897658, 1182.0516084390001, 1204.9960746299998, 1213.60363913, 1221.8520140159999, 1224.475621802, 1226.31030573, 1229.100867516, 1229.82435923, 1230.7490234010002, 1231.3772704009998, 1232.020535401, 1233.317573016, 1234.6076335, 1236.7021265, 1239.5652625, 1243.8061556899997, 1255.3933382349999, 1265.2544877799999, 1269.55574278, 1272.9350422799998, 1284.38062158, 1293.807656036, 1298.15091314, 1298.665456744, 1299.1638741400002, 1299.288334822, 1301.030720822, 1301.5837535814999, 1304.693040705, 1305.33713328, 1305.8198706950002, 1305.9368080744998, 1306.0671785744998, 1306.135010195, 1306.3103100395, 1306.7307411595, 1307.6894605745, 1308.000746919, 1308.305041653, 1308.9751542499998, 1310.9401030845, 1315.71960963, 1317.75169104, 1318.15085613, 1318.9784226269999, 1319.5710215225, 1320.1980260255, 1321.563289537, 1322.552890627, 1322.816652475, 1323.15162245, 1324.1342689500002, 1325.0450569355, 1325.2552804355, 1325.6158209500002, 1325.87561359, 1326.5853850899998, 1329.3327029749998, 1332.3241945195, 1335.052515484, 1338.6844620945, 1338.8459060395, 1339.5730170395, 1339.9583495395, 1341.585367286, 1342.0175144529999, 1342.1383915944998, 1342.2349686500002, 1342.4998440945, 1343.693756336, 1344.6870035965, 1344.8276214500002, 1344.9171396445001, 1345.588509867, 1346.289259836, 1346.508119243, 1347.2283664360002, 1348.579308922, 1350.361453922, 1351.042376422, 1351.579858381, 1352.1756498889404, 1352.5484481144404, 1353.2184273889407, 1353.6458201445, 1353.8622279219999, 1354.099424422, 1357.1768206435, 1358.064273937881, 1358.6626041144405, 1359.5066363400001, 1359.7197613889405, 1360.0778328889405, 1360.5954616144404, 1361.049522616, 1361.4390608400001, 1362.616420941, 1363.1935118904998, 1364.1883858904998, 1365.052262501, 1365.5329765010001, 1366.16925128, 1366.7293606409999, 1369.4467497800001, 1370.997386227, 1372.897549862, 1376.236258034, 1377.1637111155, 1378.7406271969999, 1379.239690697, 1382.119126197, 1382.476920626, 1382.8682729734999, 1383.1774910595, 1383.8264166220001, 1384.227699534, 1384.8047505445, 1385.1197819734998, 1390.420595555, 1391.2339008735, 1391.7782976610001, 1392.0347907145, 1392.2781492585, 1392.342367174, 1392.8042434245, 1393.856850305, 1393.957071881, 1394.468870719, 1395.5292497775, 1395.7110634639998, 1396.139572301, 1396.53582182895, 1396.64211009795, 1396.6556173919, 1396.71177147095, 1396.7862634510002, 1396.827145011, 1396.8744023299998, 1397.116359011, 1397.850209409, 1397.8941678885003, 1398.0701353885001, 1398.8043255500002, 1398.8549592850002, 1399.0408292429502, 1399.4382390639498, 1400.1221165870002, 1401.0554515744502, 1401.237303615, 1401.41037093245, 1401.52741943245, 1401.7097749980003, 1401.8856066355, 1402.51899689, 1402.99891296945, 1403.2390008059501, 1404.4124602275, 1404.8318007359999, 1404.962171236, 1405.03106660095, 1405.24626364795, 1405.77401864795, 1406.4383658429501, 1406.6819562199998, 1407.2063768429498, 1407.3416946009502, 1408.745196978, 1408.9354951599998, 1409.09897566, 1409.67755554, 1410.0979567650002, 1410.515082613, 1411.000317265, 1411.562123435, 1412.154659525, 1412.44089216, 1413.35485766, 1414.3556033300001, 1415.051209325, 1416.4268530805, 1417.799811331, 1418.2683950804999, 1418.34415433, 1418.7926028279999, 1419.2725123280002, 1419.3901490845, 1419.5911836495, 1419.9118026454998, 1420.2913863949998, 1420.4984283949998, 1420.73232032, 1420.9246065755, 1421.5322788325002, 1421.69022039, 1422.3959020920001, 1422.8312812325, 1423.05826077, 1423.2790652899998, 1423.4876729025, 1423.6372023449999, 1424.8646208425998, 1425.2396623354998, 1425.2572418260002, 1425.359372873, 1426.68983862, 1427.1259830650001, 1427.390141065, 1427.603609085, 1427.71748453, 1428.1669825126, 1428.362617326, 1428.555495223, 1429.4415400652, 1429.6376377841, 1430.7045627735, 1431.2555077840998, 1431.7309770545999, 1432.1737753319999, 1432.497428065, 1432.76174051, 1432.948240344, 1433.4572930651998, 1435.0176757735, 1435.387966277, 1435.7165682876, 1436.5148685546, 1437.069974681, 1437.637531247, 1437.763017181, 1437.898334318, 1440.63138016, 1443.8149829585, 1444.134926491, 1444.4926323700001, 1445.4056814585, 1445.9495049900002, 1446.765727368, 1449.0519954305, 1449.2864891815, 1449.551884119, 1449.973565369, 1450.24629437, 1456.7192486925, 1457.5115542175, 1458.938924709, 1459.5498034525, 1459.7347637175, 1459.818058974, 1459.991726028, 1460.188019484, 1460.504799974, 1460.8286159739998, 1460.9322314739998, 1462.0065687175, 1462.3160204, 1463.055542719, 1464.296283044, 1464.6665619865, 1465.914162209, 1466.4698489999998, 1466.6048958024999, 1467.103964035, 1468.2384665875002, 1468.5041112865001, 1468.611415719, 1468.833075154, 1469.3287273024998, 1469.41086686, 1469.54643036, 1469.756395035, 1470.4696847189998, 1470.598232719, 1472.32512245735, 1472.51369330985, 1474.0191983285, 1474.2517268964998, 1475.5483764705, 1475.5609021279997, 1475.572279128, 1475.58445211, 1475.7951475783498, 1476.06285828, 1476.3075196814998, 1476.4828091814998, 1476.493733848, 1476.50505332785, 1476.64215680985, 1477.38885894, 1477.802261628, 1477.8757106654998, 1478.143409008, 1478.5062339205, 1478.92509552, 1479.406229099, 1479.93322566135, 1480.7246820379999, 1480.7538855779999, 1480.7763340779998, 1480.8921001459998, 1481.1036316744999, 1481.233019203, 1481.3936111465, 1482.7851935879999, 1483.0441637884999, 1483.716729225, 1483.8571674539999, 1483.865360939, 1483.91426537, 1484.3215809529997, 1484.515416453, 1484.765244928, 1485.20226406, 1485.4695298850002, 1485.86532662485, 1486.257176895, 1486.2827026165, 1486.826653739, 1487.008630225, 1487.2194156164999, 1487.2561500665, 1487.5646255665001, 1488.7187690005, 1489.426947725, 1489.832359225, 1490.2342485640002, 1490.414155388, 1490.6636735174, 1490.7901806579, 1490.8089453795, 1490.9763051643001, 1491.1949395043, 1491.4174065749999, 1491.72769774, 1491.736704025, 1491.780604025, 1491.8660721543, 1492.4519987145, 1492.6541152343, 1492.79807033, 1493.1504132733999, 1493.7318458655, 1493.77333251665, 1493.7867590933001, 1493.80988058095, 1494.1731824545, 1494.329567239, 1494.50942367, 1495.1269205545, 1495.6080847416501, 1495.71224163115, 1495.8222742144999, 1496.082036631, 1496.1187656605, 1496.677374701, 1497.1556280855, 1497.3388422845, 1497.6248020809498, 1497.7711632343, 1498.079393029, 1498.127572365, 1498.4883801649999, 1498.6542482795, 1498.8648270249998, 1499.0232684549999, 1499.0645637144999, 1499.267230975, 1499.4478011295, 1499.695311695, 1500.286536365, 1500.345140865, 1500.411318975, 1500.5362323545, 1500.63093670615, 1500.6766220476502, 1500.947325785, 1501.049497105, 1501.209835145, 1501.4089655695, 1501.6096246205, 1501.7354966000003, 1501.98684202, 1502.12892982, 1502.429861415, 1502.5862769750001, 1502.767711918, 1502.8944953155, 1503.1486541049999, 1503.589908138, 1503.7421531040002, 1503.8389291205, 1505.6604264505, 1506.119849025, 1507.0961076150002, 1507.1386766150001, 1507.1641769950002, 1507.2491399435, 1507.4466421342, 1507.4638137299999, 1507.4821222985, 1507.5808267290001, 1507.700222589, 1508.278446238, 1508.5307767329998, 1508.8591983895, 1509.1184938165002, 1509.2849928725, 1510.3179719324999, 1510.5740765085002, 1510.80716935, 1511.1568871267, 1511.3765575900002, 1511.507311495, 1511.5463484435, 1511.6932436985, 1512.018418378, 1512.3465102290002, 1513.94261959, 1515.1843153209998, 1515.308422037, 1515.553508741, 1516.014534525, 1516.1430451200001, 1516.333734946, 1516.382792188, 1516.5085899435, 1516.6919639625, 1516.9171354874998, 1516.9582388185, 1517.3360581880002, 1517.5695552830002, 1517.9633556910003, 1518.42899751, 1518.9862623459999, 1519.2477050655, 1519.6984514975002, 1519.9974484475001, 1520.397361668, 1520.6419845575, 1521.112086971, 1521.2653258345, 1521.3639342914998, 1521.4812692024998, 1521.54387488, 1521.554875236, 1521.578188496, 1521.6207030955002, 1521.8649594605, 1522.0734949389998, 1522.8604293345002, 1523.201893188, 1523.321145642, 1523.3527071150002, 1523.391871417, 1523.6545284874999, 1523.8091188424999, 1523.8685484385, 1523.973528822, 1524.076537442, 1524.5212823565, 1524.658944158, 1524.7253860125, 1524.786686956, 1524.870137115, 1525.2517378320001, 1525.336375196, 1525.3434037954999, 1526.1119168515, 1526.188955306, 1526.5912729105, 1526.7948068565001, 1527.063911023, 1527.2463657399999, 1527.5697500955, 1527.63937656, 1527.69747785, 1528.964413205, 1529.641610403, 1529.7407722495, 1530.12609117, 1530.168306762, 1530.2728367619998, 1530.3958420875001, 1531.23938442, 1531.3317818, 1531.3516778375, 1531.8752397925, 1531.950170205, 1532.0113964575, 1532.2779229275, 1532.3841313985, 1533.857956205, 1533.907778425, 1533.931091685, 1533.9779658154998, 1534.0042500105, 1534.082447375, 1534.1740248700003, 1534.3315480555, 1534.8208158215, 1534.9641756310002, 1535.132496588, 1535.3429911419998, 1535.671620775, 1535.828702058, 1535.9226139995, 1536.0173863165, 1536.116331164, 1536.479220002, 1536.801500553, 1537.1299726102502, 1537.63348547725, 1537.68823327825, 1537.690160993, 1537.917323047, 1538.56604497725, 1538.67441082275, 1538.8415866665, 1539.040086294, 1539.525881284, 1539.6840527905001, 1539.844918664, 1539.896071055, 1540.370840875, 1540.8172387925, 1541.0987042904999, 1541.3399294772498, 1541.6097941062499, 1541.8335525940001, 1541.889044539, 1542.134238098, 1542.240872267, 1542.7237943599998, 1542.82692742, 1542.9209924045, 1543.5164539870002, 1543.6636389730002, 1543.986698829, 1544.234900695, 1544.3514545050002, 1544.5917649905, 1544.7633132310002, 1544.790084889, 1545.108237731, 1545.209952268, 1545.3192455805001, 1545.4041752495, 1546.4814104719999, 1546.6331001180001, 1546.7050237939998, 1546.9889859959999, 1547.339516004, 1547.3697861570001, 1547.4213624220001, 1547.4654038580002, 1547.8172619840002, 1547.828145425, 1548.009216426, 1548.3121656882136, 1548.983205515, 1549.0459706865, 1549.250697175, 1549.4242437154999, 1549.505053104, 1549.60699312, 1549.6708987635, 1549.69338134, 1549.8785767059999, 1550.5229920117135, 1550.6018704697135, 1550.6555904115, 1550.730816798, 1550.795500023, 1551.0577279837134, 1551.3355577592135, 1551.8272506882136, 1552.1823168664268, 1552.7293198455, 1552.8084274760001, 1553.0037224760001, 1553.4084300640002, 1553.5497590640002, 1553.8721702935, 1553.9575001685, 1554.0598591555, 1554.160590425, 1554.2595452735002, 1554.3708576150002, 1554.4423825684999, 1555.0395311205, 1555.3878829845, 1555.482213762, 1555.8153111632134, 1556.1603972282135, 1556.8195211785, 1557.11023453, 1557.2787454650002, 1557.374502525, 1557.576839287, 1557.7818792322, 1558.0562798055, 1558.1638771882135, 1558.379491601, 1558.7575061480002, 1558.9900683404999, 1559.0302839155001, 1559.0710776525, 1559.4230312805, 1559.5977537805002, 1560.0406999704135, 1560.1670499206998, 1560.2728825785, 1561.030004534, 1561.0856221785, 1561.17461639, 1561.315425155, 1562.100304655, 1562.6258199207, 1562.7361921185002, 1562.9295425750001, 1563.0939901447, 1563.3092014302001, 1563.3549214302002, 1563.8068992722, 1563.8383345749999, 1563.894277205, 1563.9379406485, 1563.9893105825, 1564.05138889, 1564.25848213, 1564.3116727450001, 1564.917087258, 1565.2467609455, 1565.8207536300001, 1565.920704935, 1566.14298461, 1566.1831411, 1566.3397854475, 1566.4245804475, 1566.4911138974999, 1566.5960335734999, 1567.7217833910001, 1567.8931764125, 1568.309799205, 1568.6236441800002, 1568.9589762462, 1568.9977279405, 1569.0424764455, 1569.302715635, 1569.5132688492, 1569.75923968, 1569.875472715, 1570.01790275, 1570.09543957, 1570.329473375, 1570.6355667824998, 1571.0305745573, 1571.1643425835, 1571.6699028047, 1572.2689866979501, 1572.4048696912, 1572.64427069795, 1572.9268152700001, 1573.203579575, 1573.2565500645, 1573.505362027, 1573.55480516045, 1573.9236769519998, 1574.0919710550002, 1574.419423404, 1574.5398526099998, 1574.6772759595, 1574.7201165835002, 1575.0718079469, 1575.12694972415, 1575.20473575, 1575.23002811, 1575.3307053335, 1575.4382644470002, 1576.2126467225, 1576.306738155, 1576.4401926973, 1576.5654466708002, 1576.5960021885, 1576.672164455, 1576.9207140185, 1577.27211156615, 1577.39442865215, 1577.7345967750002, 1578.0210793649999, 1578.0387028, 1578.2116324605, 1578.3573510400001, 1578.4715081665001, 1578.482101363, 1578.5366083425, 1578.6097994255, 1579.0578405545, 1579.29508564915, 1579.7573637255, 1579.770739452, 1579.7765320435, 1580.25575072, 1580.448074929, 1580.6809987984, 1580.73464349, 1580.7869569734999, 1581.08194292265, 1581.203628065, 1581.629500025, 1581.6640494385001, 1581.8168803539502, 1581.950374295, 1582.07942449, 1582.5317620997998, 1582.9158889169998, 1583.0000083159998, 1583.3382754625, 1583.4746577775, 1583.525751945, 1583.5638969835, 1583.6037463333, 1583.6793169475, 1584.0727527205, 1584.1411250337, 1584.1795669332, 1584.312278291, 1584.4555332885, 1584.545815658, 1584.7186887955002, 1584.8687189260002, 1584.9650021424, 1585.0996635625, 1585.254454715, 1585.294583385, 1585.4995858925001, 1585.5475322885, 1585.8015431275, 1585.8522704627, 1585.9332910499998, 1585.9735132805, 1586.4164359659999, 1586.476561466, 1586.902737195, 1587.936485303, 1588.0267964989998, 1588.0759811189998, 1588.0806423, 1588.144203911, 1588.4201438290002, 1588.4418691985002, 1588.4576058355, 1588.5473341647, 1588.8735392072, 1589.0850656730001, 1589.3912220345, 1589.5325318325, 1589.64221114, 1589.8322081400001, 1590.4394279035, 1590.662620329, 1590.887392673, 1591.1410092200001, 1591.4158545340001, 1591.4386134860001, 1591.698630335, 1591.8896812845, 1591.95177543, 1592.015535978, 1592.5422588699998, 1592.756099444, 1593.4066346195, 1593.449921765, 1593.560894133, 1593.6767233759997, 1593.795106689, 1593.9084772685, 1594.2782907844999, 1594.5090120344998, 1594.7680004865001, 1595.0047152, 1595.140296944, 1595.1947458765, 1595.4155778335, 1595.5845800084999, 1595.8110357915, 1595.845838621, 1596.0067068995, 1596.588898813, 1596.894916835, 1597.392964445, 1597.73720087735, 1597.97754762235, 1598.0399435294999, 1598.1906387, 1598.6853670579999, 1599.063117961, 1599.2044127155, 1599.6129833695, 1599.9604864485, 1600.1346896675, 1600.7839699745, 1600.9200181234999, 1601.6166909684998, 1601.9317520285, 1602.07487995, 1602.1672674914998, 1602.1880973315, 1602.2233862169999, 1602.3235573774998, 1602.3729458775, 1602.423797727, 1602.4931720115, 1602.6460298654997, 1602.7219629064998, 1602.8546294065, 1603.52081791285, 1603.7962256763499, 1603.922867662, 1604.355382155, 1604.55115918, 1605.5306368155, 1605.645922739, 1606.338068727, 1606.4843102129998, 1606.5471084135, 1606.8157516301999, 1606.8568295201999, 1606.9065487078499, 1606.96987308435, 1607.2178082855, 1607.8197139015, 1608.1907815415, 1608.69474939, 1608.773738955, 1609.4487038299999, 1610.1071395465, 1610.1679346915, 1610.168989925, 1610.2417818935, 1610.3512151935, 1610.45858258, 1610.5417236528501, 1610.6483527402, 1610.7613348052, 1610.894998958, 1611.1135562240001, 1611.4537355315001, 1611.6168824215001, 1611.7914889214999, 1611.9392323565, 1611.9694368350001, 1612.0761321, 1612.2579234559998, 1612.4384955589999, 1612.9797091199998, 1613.0137065499998, 1613.0702617185002, 1613.16430868847, 1613.452608109, 1613.528189709, 1613.56487785, 1613.6303518625, 1613.7223907402, 1613.93635288497, 1614.4092113565, 1614.8083180600001, 1614.8938799575, 1615.3614303702002, 1615.44906893, 1615.540129025, 1615.8174176275, 1615.9017124985, 1615.916775587, 1615.9618449735, 1616.043878015, 1616.28436313497, 1616.70169356, 1616.7628414485, 1616.9664676574998, 1617.027539756, 1617.188412, 1617.43462882715, 1618.0914251909999, 1618.210554262, 1618.82775877215, 1618.91618102215, 1619.02602338, 1619.206476549, 1619.3648308725, 1619.3926470444999, 1619.426324677, 1619.428760095, 1619.5918337809999, 1619.8051646175, 1619.8810718565, 1620.0209397950002, 1620.267506865, 1620.2892557221498, 1621.5698416075002, 1621.6375650749999, 1621.721710761, 1621.812786762, 1622.0944335899999, 1622.23694561, 1622.38133973, 1622.5901249620001, 1622.611991409, 1622.7947834735, 1623.170663432, 1623.2685136135, 1623.57362543, 1623.7832401619999, 1623.8573882635, 1624.1939127599999, 1624.3258587235, 1624.738112095, 1624.9060870899998, 1625.058580515, 1625.1869730121498, 1625.3239406569999, 1625.348902662, 1625.363725579, 1625.4344345375, 1625.4828830375, 1625.73500784, 1625.8758793559998, 1625.900303925, 1625.940152999, 1626.07482376, 1626.176921455, 1626.31176001, 1626.350382995, 1626.4196801674998, 1626.4479050175, 1626.4991007015, 1626.588152387, 1626.8585089070002, 1626.9033685285003, 1626.9337517635001, 1627.0016831295002, 1627.1538164755, 1627.203421738, 1627.2122640615, 1627.358242244, 1627.411592275, 1627.6689800835002, 1627.717979299, 1627.886894065, 1628.1136396769998, 1628.1870434275, 1628.3765778385, 1628.4044429015, 1628.430594807, 1628.481279744, 1628.8387878039998, 1629.054287602, 1629.282772109, 1629.418436849, 1629.53449131, 1629.65966416, 1629.900007445, 1630.139750327, 1630.162524613, 1630.16860293, 1630.216065167, 1630.2963234165, 1630.4380676495, 1630.4572726755, 1630.4816511885, 1630.5097131819998, 1630.6757438294999, 1630.75657, 1630.77845361, 1630.8051303275, 1630.9866747825001, 1631.0354321670002, 1631.0784465195, 1631.0959809345, 1631.187100767, 1631.2650521839998, 1631.5792839075, 1631.6324543619999, 1631.672953665, 1631.7158678649998, 1631.9873738545, 1632.0632837145, 1632.4306697825, 1632.457971555, 1632.676204414, 1632.7733827799998, 1633.02930036, 1633.2133038524998, 1633.346001245, 1633.479093881, 1633.5234187639999, 1634.06413635, 1634.548296944, 1634.568278727, 1634.725223286625, 1634.875022836625, 1635.17963208, 1635.28473312, 1635.3526671179998, 1635.3920754229998, 1635.5614392910002, 1635.613756224, 1635.6528206950002, 1635.6757548695, 1636.102918507, 1636.193615111125, 1636.258440184125, 1636.420838339, 1636.521586113, 1636.58405685, 1636.645864875, 1636.6551576494999, 1636.694573321625, 1636.708840003625, 1636.760279884, 1636.85156212, 1636.853553343, 1636.983730628, 1637.2219848835002, 1637.363452576, 1638.1642376920001, 1638.2078942570001, 1638.396261836625, 1638.517045459125, 1638.5342761984998, 1638.552213018, 1639.0555209000001, 1639.274974918, 1639.3872505405, 1639.4480730175, 1639.525076155, 1639.5692505095, 1639.6126187275, 1639.6336024974999, 1639.6709597195, 1639.7740074716248, 1639.859738508, 1639.9609043454998, 1640.173959589, 1640.2493225095, 1640.3147980095, 1640.3798216105001, 1640.410858182, 1640.427039502, 1640.4481116870002, 1640.4631535059998, 1640.663805441, 1640.7531545555, 1640.8322458855, 1640.960941305, 1641.113259021, 1641.1365996585, 1641.3963382585, 1641.4306372535, 1641.508361006, 1641.535686527, 1641.5607488725, 1641.9951770270002, 1642.114658417, 1642.4648644170002, 1642.47686305, 1642.4861729345, 1642.8218327355, 1642.9534541565, 1643.049796173, 1643.2122589345, 1643.2674443330002, 1643.30015567, 1643.426524748, 1643.443788748, 1643.4729447655, 1643.6263904799998, 1643.81418884, 1643.8504650950001, 1643.867470655, 1643.9288510875, 1644.05882917, 1644.3594688935, 1644.3911384385, 1644.473201465, 1644.7324760279998, 1644.860583968, 1644.9429546075003, 1644.9658169725, 1645.1265529060001, 1645.1362634850002, 1645.53517124, 1645.692089624, 1645.7994281434999, 1645.8756727969999, 1645.987214695, 1646.1010526999999, 1646.251992465, 1646.483561345, 1646.9607491719999, 1647.1287590299999, 1647.1522086595, 1647.2177776820001, 1647.254286561, 1647.375150398, 1647.4180464905, 1647.425351517, 1647.4916725005, 1647.5558577385, 1647.5627864080002, 1647.6985326425001, 1647.7663569375, 1647.8585354030001, 1647.9351271404998, 1648.067553677, 1648.1706465440002, 1648.254715867, 1648.4655820525, 1648.6232237850002, 1648.786366145, 1648.8635465000002, 1648.8964366599998, 1648.9198671395, 1649.0186853635, 1649.0610101935, 1649.42616662, 1649.551121202, 1650.0297744495, 1650.1038912645, 1650.5592818794998, 1650.7173366690001, 1650.9282315645, 1651.056250695, 1651.2244466405, 1651.3106625525002, 1651.436001908, 1651.5257334154999, 1651.730641804, 1651.931496626, 1652.193337357, 1652.348312988, 1652.5671364080001, 1652.5847912775, 1652.7985526523498, 1652.82102503735, 1652.971406245, 1653.459286105, 1653.6219418145001, 1653.6386859895001, 1653.8144398569998, 1654.058546218, 1654.292240287, 1654.3980204640002, 1654.487592672, 1654.560739432, 1654.772842677, 1655.011326607, 1655.0838848785002, 1655.1254803785, 1655.5903753940001, 1655.6467765790003, 1655.8276021295, 1655.9481287869999, 1656.0139237835, 1656.0682946435, 1656.3825089499999, 1656.6392561323, 1656.92420798, 1657.000868275, 1657.085425156, 1657.244483575, 1657.713846915, 1657.7745175669997, 1657.83070212, 1657.885177955, 1658.0102557565, 1658.0342272835, 1658.06623927, 1658.226970457, 1658.27561507935, 1658.319722872, 1658.7498611515, 1658.773723567, 1658.8591035235, 1658.9658052119999, 1659.1336940635001, 1659.372773817, 1659.46009639, 1659.5134454499998, 1659.5450973299999, 1659.63184335, 1659.668376575, 1659.735570372, 1659.8897877119998, 1660.1310957245, 1660.15628322, 1660.235852749, 1660.3788208590001, 1660.641193985, 1660.7039367799998, 1660.784408605, 1660.866323595, 1661.1116599870002, 1661.2769932400001, 1661.355573558, 1661.4799028845, 1661.5289107195, 1661.653769307, 1661.781779659, 1661.973201095, 1662.0469359200001, 1662.133990975, 1662.159658685, 1662.207739459, 1662.293133615, 1662.466558145, 1662.5715505184999, 1662.6442328295, 1662.6605924895, 1662.89213483, 1663.135805375, 1663.18875953, 1663.2295696850001, 1663.42791265, 1663.4459925649999, 1664.0128520600001, 1664.101183675, 1664.4140974305, 1664.54088202, 1664.60116467, 1664.6360274895, 1664.8878125185001, 1664.927851835, 1665.13762063, 1665.2399880925, 1665.337173823, 1665.46517643, 1665.629800025, 1665.9738329040001, 1665.987332145, 1666.0337365599999, 1666.1741435075, 1666.313687455, 1666.362607691, 1666.3691793705002, 1666.5459978345, 1666.6070187873, 1667.09130405, 1667.15696275, 1667.271865061, 1667.3193355140002, 1667.488420955, 1667.5602252665003, 1667.6926485540002, 1667.8942026884997, 1668.2546673484999, 1668.360774393, 1668.579743675, 1668.6235658199998, 1668.6602263734999, 1668.6976904785, 1668.7123578085, 1669.1035844799999, 1669.14120887, 1669.199208817, 1669.3863418884998, 1669.4474272334999, 1669.4787532784999, 1669.548460686, 1669.6270686100002, 1669.658111658, 1669.693646518, 1669.809051455, 1669.906183095, 1669.9416698699997, 1670.017945135, 1670.0338811745, 1670.0584058625002, 1670.075656678, 1670.4746027424999, 1670.5198141745, 1670.594337484, 1670.8290640035, 1670.9979914105002, 1671.027011048, 1671.18073652, 1671.6732714149998, 1672.2126337025002, 1672.31898857, 1672.344274487, 1672.4192195535, 1672.52752362, 1672.6195117872999, 1672.9072044535, 1673.0582665027998, 1673.1768415028, 1673.2171244778, 1673.2768644778, 1673.4529242390001, 1673.6549202284998, 1673.7667307125, 1673.8112925515, 1673.988558505, 1674.0821834080002, 1674.107899878, 1674.33871593, 1674.3695498499999, 1674.4267173735, 1674.4694897535, 1675.1964389125, 1675.4279607624999, 1675.5414476945, 1675.5955623145, 1675.7249635849998, 1675.7702650372999, 1675.7852327173, 1675.8532551943, 1675.8644224553, 1676.2780348705, 1676.292694854, 1676.35471149, 1676.6001191668001, 1676.7363160655, 1676.7712432570002, 1676.809824274, 1676.83880443, 1676.9999921645, 1677.0484594105, 1677.1102427659998, 1677.134570367, 1677.2382652525, 1677.4761783065, 1677.55915805, 1677.5766724, 1677.6648745500001, 1677.7396046625, 1677.8396732997999, 1678.098044976, 1678.3666376595002, 1678.45349345, 1678.5457261000001, 1678.8138941365, 1678.8414776415, 1679.0179762175, 1679.07102286, 1679.204791578, 1679.342760733, 1679.5053981625001, 1679.52161658, 1679.7621876115002, 1679.94602062, 1680.1694581900001, 1680.23619845, 1680.288639365, 1680.3242037395, 1680.3286665859998, 1680.6214585625, 1680.657154747, 1680.9097240335, 1680.9259450475, 1680.9380109335, 1681.3677085155, 1681.532398417, 1681.800370248, 1681.965521764, 1682.0445803930002, 1682.135533264, 1682.2305859409998, 1682.27785638, 1682.4561877275, 1682.4923286839999, 1682.5436079615001, 1682.5876641300001, 1683.5190454160002, 1683.7164466395, 1683.985313365, 1684.0304790975001, 1684.3320815005, 1684.520752375, 1684.7690914569998, 1684.8239340145, 1684.8523806150001, 1684.929334463, 1684.963849014, 1685.3479778705, 1685.6658735975, 1685.6934949514998, 1685.7539064910002, 1685.8834715345001, 1685.979458215, 1686.0221046850002, 1686.071082145, 1686.103974891, 1686.1265268910001, 1686.2196360799999, 1686.594807294, 1686.6675688139999, 1686.7358777555, 1686.8326187355, 1687.2940473301, 1687.4139731502, 1687.4920971502002, 1687.5967205051002, 1687.755791223, 1687.8876402404999, 1688.168560731, 1688.4066694285, 1688.429906953, 1688.520011391, 1688.7406519935, 1688.882608054, 1688.9582816460002, 1689.2961856375, 1689.393429485, 1689.4641530676, 1689.8917123405, 1690.1285235035, 1690.2141154820001, 1690.288402688, 1690.617979398, 1690.822469623, 1691.2856398575, 1691.359082342955, 1691.5759220569998, 1692.0379079535, 1692.394353273, 1692.7215154169999, 1692.8125608024998, 1693.0608048899999, 1693.1996503999999, 1693.2391258825, 1693.3223066925, 1693.46915921, 1693.687089263, 1693.7345073135, 1694.113709915, 1694.161577891, 1694.933285198955, 1695.0276280764551, 1695.1172572350001, 1695.2470025085, 1695.771134843, 1695.8434190130001, 1695.9867738274, 1696.2287613825001, 1696.3035565970001, 1696.3496903999999, 1696.513407667, 1696.6737666495, 1696.9322282199998, 1697.16553064, 1697.22185181, 1697.2716213424999, 1697.32032245, 1697.34837164, 1697.4453403825, 1697.5284491124999, 1697.93113230365, 1698.1154481909998, 1698.3228251444998, 1698.3812648950002, 1698.40519195, 1698.521619473, 1698.929959775, 1699.0044933275, 1699.057499135, 1699.1350354894998, 1699.2078133549999, 1699.2926507050001, 1699.508953449455, 1699.5859650778998, 1699.8801435235, 1699.9297518859998, 1700.0279974545, 1700.16458925, 1700.289804215, 1700.438870215, 1700.880160748, 1700.89676913, 1700.9336002549999, 1700.9863820639998, 1701.0622506344998, 1701.14829124, 1701.2155834355, 1701.3100916695003, 1701.6018042739001, 1701.615067065, 1701.7972157689, 1701.8170420739, 1701.8514039450001, 1701.93664664, 1702.04650162, 1702.1271934390002, 1702.465289578, 1702.5427240945, 1702.7285123638999, 1702.7749574654001, 1703.0136133869, 1703.0784605765, 1703.140084184, 1703.16297297, 1703.4225874388999, 1703.6557750935, 1703.6960115065, 1703.8159239840002, 1703.9882961305, 1704.076941755, 1704.40167464865, 1704.4718697179999, 1704.556283248, 1704.744078071, 1704.966398587, 1705.0451549690001, 1705.145329054, 1705.5088982705001, 1705.6301105030002, 1705.689385238, 1706.0627353025, 1706.12205742, 1706.1595019689998, 1706.1775152169998, 1706.3652110199, 1706.500874464, 1706.9761788892001, 1707.6004294754998, 1707.746330223, 1707.906128873, 1708.004242228, 1708.0482199350001, 1708.1169943150003, 1708.1616776775, 1708.2916423865, 1708.3118102265, 1708.373861223, 1708.4257870669999, 1708.5394189315, 1708.565998343, 1708.6159983750001, 1708.7751395890002, 1709.01065944, 1709.090150085, 1709.236599809, 1709.2470334022, 1709.2711740132, 1709.2987032739998, 1709.3290052159998, 1709.3886823789999, 1709.581760897, 1709.641885464, 1710.1901051245, 1710.537167382, 1710.6134929705001, 1710.6867489235, 1710.96368334, 1711.2211983675002, 1711.363669625, 1711.615867085, 1711.673814692, 1711.7654900712, 1712.211557044, 1712.2929029285, 1713.254280194, 1713.2853695975, 1713.3052520217, 1713.57607981315, 1713.7848682702, 1713.792468703, 1713.7996463220002, 1713.865378486, 1714.009738531, 1714.0354633795, 1714.2305094245, 1714.31021848315, 1714.3559438060001, 1714.394003483, 1714.3983737445, 1714.50104139, 1714.532158978, 1714.59993247, 1714.64584903925, 1715.0777767895001, 1715.1783323622499, 1715.26384121125, 1715.295312832, 1715.3386557825, 1715.476785867, 1715.64517888925, 1715.907590583, 1715.963347684, 1716.032714987, 1716.1295478900001, 1716.407458699, 1716.7191775000001, 1716.92080302925, 1716.9642552784499, 1717.0193928091999, 1717.1258096830502, 1717.245566333, 1717.301156473, 1717.37562647, 1717.42295497, 1717.452440995, 1717.494931561, 1717.78081348, 1717.93649225, 1718.00170129305, 1718.03424155255, 1718.204516026, 1718.3929907349998, 1718.4929658639999, 1718.53704501, 1718.5651156325, 1718.70066529305, 1719.5100158223001, 1719.70234533815, 1720.04168123, 1720.2387020899998, 1720.645475665, 1720.9148043520902, 1721.078747833, 1721.2016544829999, 1721.21379992, 1721.2915758089998, 1721.369699809, 1721.48835977, 1721.8391582694999, 1721.8535036405, 1721.8626096055, 1721.9058194195, 1722.0420206988501, 1722.15895077385, 1722.5008118588498, 1722.52511327385, 1723.007800035, 1723.12309684418, 1723.16658199209, 1723.2294486275, 1723.3110683975, 1723.4055422030501, 1723.67904203805, 1723.7666113320502, 1723.8647020439998, 1723.97602068709, 1724.01011697959, 1724.1613903585, 1724.31340416405, 1724.33774840205, 1724.37977782385, 1724.40760159385, 1724.5731775335, 1724.6537373790002, 1724.8609211849998, 1724.91415115, 1725.02092284, 1725.1148403065001, 1725.357839196, 1725.42602532509, 1725.59899173485, 1725.90024435885, 1726.142233629, 1726.15674708209, 1726.25554611959, 1726.3040552725, 1726.36720045, 1726.45443145, 1726.6196052760001, 1726.7581940805, 1726.8677280805, 1727.194590691, 1727.215962102, 1727.3016865, 1727.31544765, 1727.3410797295, 1727.3598102295, 1727.460944915, 1727.528963115, 1727.5675178974998, 1727.6223836966, 1727.6543228256, 1727.948803576, 1728.051802936, 1728.1832542739999, 1728.29277335885, 1728.892852176, 1729.3475047645, 1729.525963826, 1729.6624492145, 1729.7646446545, 1729.9603565095, 1730.095981876, 1730.189217, 1730.239738194, 1730.2887365699999, 1730.429195703, 1730.4391519600001, 1730.5624103615, 1730.6372325974999, 1730.9962008000002, 1731.0365721214998, 1731.12567648, 1731.15847885, 1731.278601, 1731.3904089545, 1731.4228286144998, 1731.46193291, 1731.5104299715001, 1731.5975924715, 1731.799765936, 1731.936788074, 1732.1230887015, 1732.5331197760001, 1732.770004057, 1732.8015249310001, 1732.826530825, 1732.848031051, 1733.501496911, 1733.589276033, 1733.722384678, 1733.771357678, 1734.1402363000002, 1734.242043703, 1734.30394063, 1734.67166167, 1734.834206094, 1734.90864389725, 1734.9997221616, 1735.1844473, 1735.423868696, 1735.520497074, 1735.6275667630002, 1735.72644009, 1735.74757148575, 1735.75055507575, 1736.1321367365001, 1736.160723938, 1736.1684717525, 1736.239091431, 1736.664124952, 1736.696273, 1736.7409069599998, 1736.8120452695, 1736.8840450995, 1737.057882557, 1737.16374188, 1737.25338614, 1737.3485884025, 1737.377159677, 1737.470297677, 1737.56059754, 1737.5893892357499, 1737.8338886307502, 1738.397117042, 1738.732848912, 1738.79300869, 1738.8264501580002, 1738.875763482, 1739.06645253675, 1739.16549348575, 1739.308499542, 1739.34559503, 1739.3912339629999, 1739.683924975, 1739.8307798729998, 1740.28777159, 1740.47875409, 1740.760997003, 1740.899301915, 1741.2055163324999, 1741.2872837445, 1741.3388896850001, 1741.35896529, 1741.48890870765, 1741.597147729, 1741.743461392, 1741.8944230719999, 1741.980443076, 1742.055981554, 1742.68364016365, 1742.7646076425, 1743.0702146545, 1743.266511771, 1743.3851734635, 1743.4823401590002, 1744.056802178, 1744.2238671544999, 1744.31620194, 1744.37593053, 1744.4087962835, 1744.46395385, 1744.5755931705, 1744.6745272585, 1745.0040927754999, 1745.0220967349999, 1745.118018459, 1745.4124051180002, 1745.4297938265001, 1745.476278821, 1745.862392222, 1745.8887722785, 1745.9199640155, 1745.934969045, 1745.94072783, 1745.986868462, 1746.0116368165, 1746.0340919373002, 1746.133847743, 1746.1516000775, 1746.3570409915, 1746.5105574665, 1746.5548504695, 1746.6023032849998, 1747.065124766, 1747.288900601, 1747.3614634280002, 1747.51748767825, 1747.5671933142999, 1747.6057122943, 1747.9385927895, 1748.0672132805, 1748.10946868985, 1748.12073542785, 1748.184400946, 1748.268355662, 1748.3166629595, 1748.535827786, 1748.700790776, 1748.9019689900001, 1748.9655409369998, 1748.9772072095, 1749.3177249100002, 1749.331047233, 1749.3607987675, 1749.4612060945, 1749.6640029343, 1749.8325698828, 1749.93425405525, 1750.011261663, 1750.0930429695, 1750.1840938465002, 1750.386310775, 1750.448805775, 1750.50872998, 1750.6348780085, 1750.72342015625, 1750.7534770755, 1750.764465015, 1750.7869110355, 1750.8679232155, 1750.94076594635, 1751.0017402469998, 1751.0864192605, 1751.1939347605, 1751.283658665, 1751.5682520625, 1751.6276926555001, 1751.7307835084998, 1751.78133221, 1751.8826852395, 1751.960105037, 1752.072962643, 1752.0984859935, 1752.2264139298, 1752.2461329485, 1752.2980888475, 1752.4027455545001, 1752.52946794, 1752.5973564864998, 1752.837920973, 1752.939856343, 1752.999672978, 1753.047445737, 1753.1992898045, 1753.3864857645, 1753.5776497699999, 1753.6432024730002, 1753.73107558, 1753.74503482, 1753.765825837, 1753.785174503, 1753.834796316, 1753.912915155, 1754.013629739, 1754.1595342115, 1754.290060719, 1754.330157111, 1754.654825355, 1754.716379355, 1754.73168912, 1754.918574895, 1755.0769666699998, 1755.2227580085, 1755.3637241259999, 1755.3701073839998, 1755.7101226250002, 1755.8155804035, 1755.8613171293, 1755.87595751, 1755.917812784, 1755.957236611, 1756.54020174, 1756.690454575, 1756.759207964, 1756.7885746985, 1756.8042300035, 1756.84803878, 1756.8555547800001, 1756.929758625, 1756.9563574200001, 1756.98419294, 1757.0336085019999, 1757.087675497, 1757.165508105, 1757.2041383913502, 1757.37723423555, 1757.4489440010002, 1757.57416920045, 1757.643013002, 1757.79952818, 1757.8215083549999, 1757.8326902000001, 1757.9934222994998, 1758.339070605, 1758.4251861093, 1758.46755739, 1758.5645615644999, 1758.610482515, 1758.663080585, 1758.69245474, 1758.769794324, 1758.846340775, 1758.86012632, 1759.012455732, 1759.030832597, 1759.0638233339998, 1759.073747077, 1759.1278404920001, 1759.31533235, 1759.357873207, 1759.513100745, 1759.60532510305, 1759.64687834755, 1759.65969831755, 1759.76992465, 1760.21618718, 1760.2944437400001, 1760.3327060000001, 1760.34975856, 1760.7440641475, 1760.837871661, 1760.9709024049998, 1761.03615367, 1761.08907766, 1761.32116915105, 1761.390105765, 1761.4187290549999, 1761.43729482805, 1761.45590404855, 1761.5023417005, 1761.5891008350002, 1761.7959480200002, 1761.87723673045, 1761.91307408795, 1762.0773871654999, 1762.23461529, 1762.4465201550001, 1762.5623844899999, 1762.6633585304999, 1762.721095777, 1762.8701213274999, 1763.01073253, 1763.18325244, 1763.2769057354499, 1763.32427658795, 1763.388819065, 1763.455900349, 1763.537374864, 1763.77601350755, 1763.939281805, 1763.986441855, 1764.0621596655, 1764.06803754855, 1764.214091715, 1764.3724475325, 1764.4207924349998, 1764.4975799150002, 1764.608678687, 1764.6871233815, 1764.71554491995, 1764.8006356300002, 1765.2858709399998, 1765.3152372519999, 1765.331263452, 1765.3719566549998, 1765.4593198805, 1765.5962896605, 1765.78317526, 1765.9933325539, 1766.3710621300002, 1766.5959077255, 1766.6168225000001, 1766.6238788145, 1766.6379849354998, 1766.7416445694998, 1766.8946304479998, 1767.1866392959998, 1767.46112571, 1767.650461895, 1767.8688789770001, 1767.9478118495, 1768.0229046025001, 1768.0674984439001, 1768.676132568, 1768.7714259615, 1768.925760763, 1769.073005975, 1769.1826942875, 1769.273086015, 1769.3863020464, 1769.4695832089, 1770.3694421175, 1770.5990904393998, 1770.6798179955, 1770.7944337570002, 1770.9011527400003, 1771.0740725225, 1771.23087536, 1771.2832687750001, 1771.3552133800001, 1771.6877301205, 1771.771692275, 1771.8321024225, 1772.1717389570001, 1772.3521626349998, 1772.4623461205, 1772.681626813, 1772.898487887, 1772.951141165, 1773.0143029125, 1773.0920017539001, 1773.205869133, 1773.245220493, 1773.848840505, 1773.90118032, 1773.9644830089, 1773.9905466750001, 1774.0033513664998, 1774.0160488450001, 1774.0300976965, 1774.053642818, 1774.1251843885, 1774.3535739934998, 1774.7223412150001, 1774.8441015435, 1774.9285878535, 1774.9432481985, 1774.9486578785, 1775.0958892135, 1775.2748007495002, 1775.426964285, 1775.6920047595, 1775.7961653716497, 1775.9135583216498, 1776.01590633, 1776.07738307, 1776.1442885535, 1776.261248926, 1776.3112537050001, 1776.3344492539, 1776.3616808774, 1776.6509801371499, 1776.7745281025, 1777.0209380825, 1777.06789736165, 1777.135374251, 1777.2067011895, 1777.262065822, 1777.2696173220002, 1777.3596432299998, 1777.420059845, 1777.5550627829998, 1777.61421707, 1777.6662477685, 1777.7893978015, 1778.1011789535, 1778.171287654, 1778.3017200079998, 1778.43302641, 1778.485231355, 1778.5210365825, 1778.54284519465, 1778.6900547325001, 1779.8071690455, 1779.915388756, 1780.233616319, 1780.2621951874999, 1780.4158606735, 1780.4605491314999, 1780.485070603, 1780.51261208, 1780.613384775, 1780.621797418, 1781.0342651335, 1781.1308339185, 1781.176533635, 1781.2459941785, 1781.425501432, 1781.4511099535, 1781.6925460965, 1781.7408620735002, 1782.0807783355, 1782.1779541045, 1782.2492710114998, 1782.3011765705, 1782.4307531315, 1782.4850253265, 1782.5526012490002, 1782.662150143, 1782.726741754, 1782.7649585455, 1783.0584340189998, 1783.113932044, 1783.13630859995, 1783.1440184339501, 1783.6988437495, 1783.9830664015, 1784.027687211, 1784.1346939195, 1784.27641661, 1784.322508845, 1784.3584569149998, 1784.4269053584999, 1784.4862535534999, 1784.5550170440001, 1784.6841377285, 1784.7033662635, 1784.7305584185, 1784.7736642265, 1784.8740864815, 1784.95875726, 1785.2997275235002, 1785.3217922049998, 1785.324325075, 1785.343903695, 1785.518889661, 1785.5952366045, 1785.750382785, 1785.8551463015, 1785.9436144730003, 1785.996839973, 1786.2623476415, 1786.331237009, 1786.3668883589999, 1786.5785954315002, 1786.90383196, 1786.9633100035, 1787.1260129195, 1787.157869695, 1787.3808844195, 1787.561199771, 1787.6235900285, 1787.641662252, 1787.6548477884999, 1787.65779204, 1787.7369459185002, 1787.7666666555, 1787.8451774685, 1787.85930775745, 1787.86805644245, 1787.8846151335001, 1787.8955585415001, 1787.9213787845001, 1787.9475963815003, 1787.9643416385002, 1787.9928696715, 1788.008372141, 1788.2972006424998, 1788.431885726, 1788.4463134799998, 1788.4629134299998, 1788.4864732115, 1788.5292350505001, 1788.615094339, 1788.673348975, 1788.71226013, 1788.7605526849998, 1788.789178, 1788.8801546529999, 1789.3359193945003, 1789.3808189295, 1789.4515210004997, 1789.4994109754998, 1789.6645742165001, 1789.671154868, 1789.7402782499998, 1789.809078245, 1789.835613745, 1789.8503958785, 1789.9497291305001, 1790.1305850235, 1790.520613125, 1790.5393940835252, 1790.6091726529999, 1790.666649705, 1790.778988365, 1790.8073882021001, 1790.9002760100002, 1790.94887086, 1791.0644079145, 1791.1225729194998, 1791.2442959549999, 1791.3272671165, 1791.3532440715, 1791.4055972, 1791.4514251649998, 1791.512235665, 1791.7109071015252, 1791.7467351035252, 1791.94095453, 1792.072893325, 1792.1177070219999, 1792.334742647, 1792.3761676735, 1792.4308696715002, 1792.631465573525, 1792.722556448, 1792.8265624350001, 1792.9514438685, 1793.177083095, 1793.2192183944999, 1793.234073609, 1793.247281984, 1793.2560570189999, 1793.2828918490002, 1793.4228485965002, 1793.5721635385, 1793.8615237965, 1793.8998618165, 1794.24295924, 1794.2822425215, 1794.3345734255, 1794.542533573525, 1794.5549510914998, 1794.5843194955, 1794.849898355, 1794.9453547399999, 1795.069315344, 1795.3527283735, 1795.5062819885, 1795.5800029104998, 1795.6194662419998, 1795.6396727239999, 1795.6534958134998, 1795.6890164345, 1795.7322391035, 1795.8094507634999, 1796.002107578525, 1796.159301224, 1796.1645567130001, 1796.2010954605, 1796.3241178490002, 1796.3356665995002, 1796.3752679635, 1796.47793519, 1796.63463912, 1796.7880538914999, 1797.0674207785, 1797.13378175, 1797.195372371, 1797.2985548665001, 1797.368542525, 1797.4245595385, 1797.480806197, 1797.6220276355, 1797.673581537, 1797.74566446, 1797.75384183, 1798.017914945, 1798.036380337, 1798.1446860635251, 1798.22945724, 1798.33963736, 1798.680458762, 1798.8682460125, 1798.910073291, 1798.941362256, 1799.182976374, 1799.3534726215, 1799.45851412, 1799.69472026, 1799.7528055859998, 1799.7850134629998, 1799.874587696, 1799.889534767, 1800.076722778525, 1800.14427567, 1800.3911284095002, 1800.4423955650002, 1800.5177642985002, 1800.877202585, 1800.8914695150002, 1800.9130202200001, 1800.9457845865002, 1800.9535922865002, 1801.0394459464999, 1801.1061259045, 1801.125473883525, 1801.136844495525, 1801.1659659850002, 1801.1857667200002, 1801.2894420470002, 1801.32621443485, 1801.4667035470002, 1801.6810673329999, 1801.91781338, 1801.9964730685, 1802.373687495525, 1802.5148892195, 1802.6015140650002, 1802.65178028, 1802.68389265, 1802.865048895, 1803.283179692, 1803.3245985109002, 1803.5227985348502, 1803.5727624277501, 1804.639422067, 1805.04718769885, 1805.2061323355001, 1805.384457567, 1805.649065686, 1805.6922534872, 1805.8019619348502, 1805.9340808315, 1806.0678149655, 1806.20699945, 1806.360940816, 1806.4231425550001, 1806.6450887055, 1806.7191110955, 1806.954582725, 1807.12506181, 1807.4907909038502, 1807.6317155855, 1807.978983387, 1808.393192253, 1808.6372947529999, 1808.7319110755, 1808.856637005, 1808.95013825, 1809.0058717885, 1809.1513603422, 1809.36493467, 1809.4981670897, 1809.5620618255, 1809.601029012, 1809.6132817070002, 1809.6371004920002, 1809.7715843805, 1809.7925186964999, 1810.0873619104998, 1810.4749410435002, 1810.5546058485, 1810.59357129, 1810.6202791972, 1810.963124935, 1811.2568431125, 1811.3434971820002, 1811.3567445120002, 1811.60128984, 1811.6614323089002, 1812.1144927884998, 1812.2161341375, 1812.5368946965, 1812.716407197, 1812.7769447485, 1812.97803677, 1813.004434765, 1813.939420069, 1814.194546983, 1814.2130141575, 1814.260670815, 1814.3923837500001, 1814.629656624, 1814.918787835, 1814.956523792, 1815.132819766, 1815.206508035, 1815.42448641, 1815.52711791, 1815.704406275, 1815.823038265, 1815.84833117, 1815.887758365, 1815.9134460335001, 1815.9411103885002, 1815.9605187650002, 1816.010944318, 1816.1879840715, 1816.417061265, 1816.5391463195, 1816.59646041, 1816.610904588, 1816.663970728, 1816.73890936, 1816.7695866625, 1816.8009881625, 1816.84006372, 1816.9799436472, 1817.1196930815, 1817.1975933234999, 1817.224822192, 1817.3812571795002, 1817.5192590440001, 1817.5990905495, 1817.68404306, 1817.7301513900002, 1817.8335332415, 1817.8661399994999, 1817.8775608044998, 1817.9416211285002, 1818.0090616059001, 1818.0755756808999, 1818.2496100664998, 1818.2769621399998, 1818.4013511919998, 1818.526641022, 1818.6247480335, 1818.7181547745, 1818.743960022, 1818.7757006375, 1818.8001174350002, 1818.8563309820001, 1818.918434437, 1818.942615787, 1818.9812112129998, 1819.2469486354998, 1819.3983922940001, 1819.486542478, 1819.5467748454998, 1819.6250975874, 1819.7003866809, 1819.80386523, 1819.9536382205001, 1820.0267826975, 1820.1047608879, 1820.1874619558998, 1820.225398265, 1820.2728707205, 1820.4030271273, 1820.4157931272998, 1820.439458292, 1820.5790894385, 1820.6232046794998, 1820.8133150895, 1820.9113242655, 1820.996783042, 1821.0614616185, 1821.105232164, 1821.2481002425002, 1821.271565574, 1821.298770074, 1821.4558909144998, 1821.4637735595, 1821.5138549309, 1821.6236887605, 1821.6805578912, 1821.92171896, 1822.0757177065002, 1822.0892365165, 1822.242253095, 1822.3479443369, 1822.3690304850002, 1822.4136516395, 1822.4784151865001, 1822.5034576865, 1822.5157354624998, 1822.5435649115, 1822.6238757395, 1822.6605925715, 1822.709278557, 1822.7511144405, 1822.8519724445, 1823.0811671494998, 1823.50539816, 1823.5613142749999, 1823.9967364309, 1824.0240237849998, 1824.23330064, 1824.2549232415, 1824.2977291015, 1824.326182143, 1824.4804602049999, 1824.51876197, 1824.56569388035, 1824.60473675035, 1824.6351629305, 1824.8245954315, 1824.8290807915, 1824.847940705, 1825.0982439430002, 1825.106100663, 1825.1267922050001, 1825.1876907300002, 1825.4893580570001, 1825.6356095565002, 1825.70525287, 1825.7334027465, 1825.8689638063502, 1826.010664337, 1826.0260010365, 1826.0961944065, 1826.31873015035, 1826.3440328215, 1826.63151548, 1826.73867333, 1826.81092475035, 1826.8397323568502, 1826.98979108185, 1827.03535803535, 1827.0487827165002, 1827.0901889765, 1827.2547784765, 1827.2791615879999, 1827.314640121, 1827.368677571, 1827.5746672745001, 1827.79835338035, 1827.8126912533498, 1827.896745693, 1828.1887182465, 1828.2391961059002, 1828.315070055, 1828.5001603178503, 1828.6631774995, 1828.7356104215, 1828.842084696, 1828.9145984064999, 1828.9618910815002, 1828.968688703, 1829.0197966599999, 1829.04159405, 1829.1493491, 1829.1810663400001, 1829.2380721149998, 1829.3180216964997, 1829.3877672132999, 1829.4334803880001, 1829.5455074750002, 1829.61841534035, 1829.94525118, 1829.98478301, 1830.003188965, 1830.01351225035, 1830.0970241798498, 1830.2053696294997, 1830.3700042350001, 1830.595245943, 1830.636340338, 1830.6720258851, 1830.9778296445002, 1831.0641098295, 1831.4087195801, 1831.5716058179999, 1831.7189880209999, 1831.9348585900002, 1832.0170178465, 1832.1268570415, 1832.2413133119999, 1832.3535931335, 1832.5117040275, 1832.5214656445, 1832.5521566445, 1832.7772418629997, 1832.8429896335, 1832.901372969, 1832.9322206445, 1833.2052798355, 1833.353354051, 1833.3863425159998, 1834.0285474890002, 1834.0610961954499, 1834.1031520299998, 1834.117549943, 1834.12734671395, 1834.4112453845, 1834.4998852675, 1834.5876464425, 1834.8703906295, 1835.1276180105, 1835.442616922, 1835.4449297350002, 1836.504916065, 1836.507219825, 1837.0015604280002, 1837.229583888, 1837.5677961229999, 1837.8882060700998, 1837.9168215680002, 1838.016331433, 1838.109581905, 1838.1651949344998, 1838.238367214, 1838.3136636395, 1838.3987433099999, 1838.6620545755002, 1838.9860327501, 1839.0239853901, 1839.220945895, 1839.23588376895, 1839.24523804195, 1839.2714891680002, 1839.36275222895, 1839.3744942784501, 1839.5914794330001, 1839.815838395, 1839.8934444350002, 1840.011853935, 1840.8432338349999, 1840.999726163, 1841.454133715, 1841.62208671, 1841.84295932, 1841.9692909219998, 1842.060251425, 1842.263643965, 1842.340622698, 1842.358430198, 1842.3982051465, 1842.527897945, 1842.74810286, 1842.79008732, 1842.8188463995002, 1843.0540123435, 1843.094002695, 1843.136646104, 1843.2450337690002, 1843.433833295, 1843.7016132155, 1843.8584670035, 1843.9731493995, 1844.02901071, 1844.0854991986248, 1844.1342319136252, 1844.20944142, 1844.286060975, 1844.4366703805, 1844.5307763179999, 1844.575796805, 1844.6729553945001, 1844.6811917155, 1844.6880155454999, 1844.7077499364998, 1844.729788747, 1844.9772266255, 1845.1096199770002, 1845.3278044045, 1845.4054406589999, 1845.421886479, 1845.43899075, 1845.643246261, 1845.6746302865, 1845.7366928285, 1845.7481433285002, 1845.9113402775, 1846.0920527215, 1846.242177604, 1846.3281068955, 1846.3716641315, 1846.39510531, 1846.5947408895, 1846.629803445, 1847.0809220840001, 1847.118674509, 1847.24209180135, 1847.33909548885, 1847.5388092174999, 1847.8471579895, 1847.9288310299999, 1848.1177948165, 1848.1455347415, 1848.1864830415, 1848.417779295, 1848.686424278, 1848.738592579, 1848.7690488849998, 1848.8841142049998, 1848.966489915, 1849.2897418144998, 1849.3037275249999, 1849.41760582635, 1849.4547508069, 1849.5788689400001, 1849.645543915, 1849.7084569286249, 1849.7914171626248, 1849.8801431790002, 1849.9206030700002, 1850.019630238, 1850.0767952639999, 1850.1192296949998, 1850.1291874605, 1850.1978731665, 1850.23830454, 1850.3652896600001, 1850.4012827055, 1850.4826221849999, 1850.4974423049998, 1850.601633681, 1850.7112834354998, 1850.845014556, 1850.9892749429, 1851.0692667619, 1851.1679435654999, 1851.2788820755, 1851.3604286690002, 1851.4590290435, 1851.6275623869, 1851.9348517419999, 1852.105822415, 1852.2368481805, 1852.35286623, 1852.3727536695, 1852.508753999, 1852.798671332, 1853.1514982205, 1853.5408681039999, 1853.7071980655, 1853.76029379, 1853.7861881719, 1853.999617327, 1854.0886714, 1854.49763763, 1854.765582783625, 1855.017094475, 1855.0470319750002, 1855.3096605475, 1855.404112465, 1855.602035686, 1855.63414021, 1855.667019874, 1855.7913937940002, 1856.0175388579999, 1856.325871556, 1856.3825583925, 1856.427815995, 1856.489635465, 1856.6342934325498, 1857.05580986935, 1857.07413259435, 1857.2001058225, 1857.2899543925, 1857.390129591, 1857.478697645, 1857.857204695, 1858.0720285, 1858.212633645, 1858.310985145, 1858.4336998754, 1858.4603147676999, 1858.4717879019001, 1858.5258534045, 1858.6264837850001, 1858.7123668175, 1858.82609032, 1858.8992773994999, 1859.2898790794998, 1859.5304293549998, 1859.6606105565002, 1859.7303661225, 1859.799842804, 1859.872347004, 1859.9560218925499, 1860.0266336190002, 1860.1692640012, 1860.2207412110502, 1860.250776829, 1860.380428489, 1860.8173439739999, 1860.9989983915002, 1861.0211411300002, 1861.045099509, 1861.0628747064998, 1861.0731611040499, 1861.11576191255, 1861.198289744, 1861.4459994295, 1861.5306353649999, 1861.9509723765, 1862.031857645, 1862.08676281, 1862.269667966, 1862.355103186, 1862.4479969585, 1863.0953674295001, 1863.23938296, 1863.3299160245, 1863.376796503, 1863.4103602344499, 1863.48821974045, 1863.6736326995, 1863.6782042710001, 1863.8691369995, 1863.92251163, 1863.936569989, 1863.964447683, 1864.0477719259502, 1864.1299338685, 1864.2327646895, 1864.375394183, 1864.6394387745, 1864.873086916, 1865.05727254255, 1865.341964183, 1865.5281681616998, 1865.6479025500003, 1866.3036231905, 1866.33524249855, 1866.6014231045, 1866.7613146077001, 1866.7991673515, 1866.822185836, 1866.98658783365, 1867.5255840434997, 1867.6901191829998, 1867.8815328685, 1867.94189092595, 1867.97629692595, 1868.6530132735, 1868.8089637227, 1868.8317288327, 1868.8951562460002, 1869.3091695415, 1869.5233237665, 1869.967367886, 1870.0130312215, 1870.1430717409999, 1870.3995674080002, 1870.6101091075, 1870.75955170395, 1870.9950319055, 1871.0456134844999, 1871.12351632, 1871.297045369, 1871.55461375445, 1871.639711535, 1871.909036987, 1872.51033766295, 1873.178734538, 1873.253752917, 1873.349561741, 1873.4175730954998, 1873.63538855, 1873.91402432, 1874.0630801099999, 1874.1495593549998, 1874.240690219, 1874.780114016, 1875.01245382, 1875.0518566095002, 1875.11210905595, 1875.25067766495, 1875.376751538, 1875.414972594, 1875.5240790149999, 1875.6209789979998, 1876.0066910159999, 1876.097707776, 1876.1881242905001, 1876.22546035, 1876.2406378449, 1876.307482878, 1876.53897217085, 1876.5621017444, 1876.7802479462998, 1876.8001107005, 1876.8469290155, 1876.9140531540002, 1877.0223860380001, 1877.108956839, 1877.2671732359, 1877.6689903205, 1877.718528998, 1877.8321831367498, 1878.2434217865, 1878.4115079305, 1878.4888444145, 1878.7075107779501, 1878.8089225519998, 1878.98729372965, 1879.3916472264998, 1879.5788192905002, 1879.8121846034999, 1879.9257787445, 1880.0071796, 1880.25861237, 1880.8188662595, 1881.2062646132, 1881.3086999747, 1881.5496535375, 1881.7139486649498, 1881.78288460545, 1882.02462144, 1882.1623010081998, 1882.1959322422, 1882.3636574967, 1882.483996277, 1882.5538980225, 1882.7931258935, 1882.814441709, 1883.3034772839999, 1883.3262922224499, 1883.4788062885, 1883.483507937, 1883.51824232, 1883.58607198095, 1883.90737442545, 1884.10627010445, 1884.2772569195, 1884.2969570374999, 1884.304627082, 1884.3467970865001, 1884.39739572695, 1884.4382631649498, 1884.5426829369999, 1884.572744908, 1884.6517971355, 1884.7236828549999, 1884.778464001, 1884.8329553980002, 1884.9153092526, 1885.0516693200002, 1885.21009116, 1885.3933877815, 1885.9327759713, 1885.9618869263002, 1886.1611086512999, 1886.1893037682999, 1886.36812860445, 1886.7854104130001, 1886.851141442, 1886.9858926915, 1887.1981797595001, 1887.3786947815001, 1887.6966916, 1888.0230932136, 1888.3636192595, 1888.872749925, 1889.0316633538, 1889.0933760485, 1889.386452779, 1889.59626980045, 1889.629203555, 1889.667750948, 1889.8260444349498, 1889.8904239675, 1889.9793246015001, 1890.0321394285002, 1890.0867841375002, 1890.2314619285, 1890.6284775945, 1890.7325897895, 1890.734762435, 1890.9526832738002, 1891.01640372795, 1891.05462022795, 1891.1333352885, 1891.2557079964997, 1891.3007363749998, 1891.3691908593, 1891.5871173735, 1891.670498865, 1891.77036375, 1891.8315968235, 1892.0064107835, 1892.129423352, 1892.3394714259998, 1892.4095022185002, 1892.4410340875002, 1892.483335295, 1892.92662839, 1893.0772263234999, 1893.144255136, 1893.1802770975, 1893.2044401829999, 1893.2174944529997, 1893.257138852, 1893.259894959, 1893.2720812539999, 1893.3340701595, 1893.5036849384999, 1893.6778725319998, 1893.7931778084999, 1894.047839024, 1894.17407638, 1894.30435166, 1894.438747035, 1894.445236365, 1894.556039669, 1894.612078554, 1894.9401896935, 1894.958038925, 1894.9870142025002, 1895.5825863999999, 1895.64901169, 1895.6739738325, 1895.7877832374998, 1896.019300328, 1896.0956138860001, 1896.163558459, 1896.1917915185, 1896.22316968, 1896.285326715, 1896.53562469, 1896.6332109985, 1896.7115337525001, 1896.8172479135, 1896.870133886, 1897.069679745, 1897.1350127100002, 1897.1409139838001, 1897.1934798315, 1897.2913532105, 1897.319078307, 1897.5280367804999, 1897.62985065, 1897.73686297, 1897.7783000555, 1898.3922454704998, 1898.4268704454998, 1898.65616053835, 1898.724194415, 1898.740760607, 1898.844570349, 1899.058500847, 1899.45215503835, 1899.6216257639999, 1899.723611114, 1899.91622924, 1899.9871139875, 1899.9937715800002, 1900.0199569695, 1900.1293316595, 1900.278817705, 1900.4849471242999, 1900.5070904469999, 1900.5640294555, 1900.5772156899998, 1900.642487257, 1901.080532857, 1901.122610497, 1901.1440400225001, 1901.1467621195002, 1901.1507889775003, 1901.2720278754998, 1901.3323634605, 1901.588379535, 1901.6464599820001, 1901.6815400045, 1901.8028464274998, 1901.8667000350001, 1901.9238920349999, 1901.995593435, 1902.0280104, 1902.0496154835, 1902.133970617, 1902.3801245875, 1902.611037045, 1902.69221257, 1902.7859334075001, 1902.8228975519999, 1902.9153698438, 1902.922794293, 1903.0629179225002, 1903.4160904805, 1903.507051273, 1903.5202273875002, 1903.5296813650002, 1903.572579115, 1903.623701048, 1903.699695298, 1903.9414336665, 1904.1064187724999, 1904.2742038005, 1904.3627116195, 1904.548065114, 1904.65436904, 1904.7494913300002, 1904.804762798, 1904.8513455365, 1904.9725954024998, 1905.0507934299999, 1905.0739494305, 1905.1171455620001, 1905.1524204025, 1905.223904401, 1905.3883806668, 1905.4565012768, 1905.62707911, 1905.6999769425, 1905.8959035365, 1905.9879526700001, 1906.0533181945, 1906.1864905665, 1906.3250426625, 1906.400726426, 1906.4740930005, 1906.5162825155, 1906.624313079, 1906.6974477150002, 1906.7780082549998, 1906.8119233085, 1906.8300975715001, 1906.8387725715002, 1906.8555020079998, 1906.891980755, 1907.03737804, 1907.0960367550001, 1907.4485768065001, 1907.46775565, 1907.7176515954502, 1907.7576686060002, 1907.85847292, 1907.867661705, 1907.8713707699999, 1908.0005377495, 1908.264447815, 1908.42248424, 1908.5010522988, 1908.5499262737999, 1909.1179639425, 1909.1390924344998, 1909.254868602, 1909.3830468965002, 1909.3984556265, 1909.4495315654501, 1909.725789954, 1909.7975049835002, 1910.0542776030002, 1910.1387219825, 1910.2017743850001, 1910.257188149, 1910.344060868, 1910.42918833, 1910.516129862, 1910.633939735, 1910.6786456230002, 1910.6915774968002, 1910.7024096643, 1910.7245628155001, 1910.74154695, 1910.7531145399998, 1910.8664701175, 1910.9062793063001, 1911.005947365, 1911.0439859495, 1911.1638813765, 1911.3596587695001, 1911.6947111938, 1911.9461559213, 1912.091816455, 1912.1289648063, 1912.17310428, 1912.208252809, 1912.658115138, 1912.720853601, 1912.7945968365, 1912.8798221030002, 1912.9829531272999, 1913.2038094249501, 1913.2918862183, 1913.3509509275, 1913.4349092779999, 1913.5076158665001, 1913.5732458950001, 1913.6829900065002, 1914.2449871400001, 1914.4595508920002, 1914.728113072, 1914.7536515255001, 1915.1933409153003, 1915.5048419153002, 1915.7645147399999, 1916.0456084188, 1916.5478862055002, 1916.863892839, 1917.1954727185, 1917.4131269178001, 1917.4866374308, 1917.8401784645002, 1917.9753043330002, 1918.0112710065, 1918.0456555810001, 1918.1241925605, 1918.1943494295, 1918.25856969, 1918.6490904, 1918.756848953, 1918.8226266440001, 1918.8548245279999, 1919.171158531, 1919.2216989685, 1919.2384208449998, 1919.24416853, 1919.29535791, 1919.68897980875, 1919.754314821, 1919.8125851395, 1919.9022932090002, 1919.996281228, 1920.0089276115, 1920.0721674074998, 1920.1407993595, 1920.2499903203, 1920.30925953, 1920.4537165005, 1920.5697378905002, 1920.7901398365, 1920.97081606, 1921.0558185559998, 1921.153702585, 1921.227069643, 1921.496423883, 1921.584452383, 1921.9088122572498, 1921.98785165755, 1922.0142922730502, 1922.06561643, 1922.13481104525, 1922.188184208, 1922.41358418225, 1922.6037871915, 1922.8493327185001, 1922.954565395, 1923.056147663, 1923.1547020879998, 1923.224293116, 1923.252307019, 1923.3102010465, 1923.404467798, 1923.48536741, 1923.53922542, 1924.1201156000002, 1924.17874366275, 1924.2298735455001, 1924.3822405605001, 1924.5902963445, 1924.6531029727498, 1924.7094523905002, 1924.82956859275, 1925.2992188010003, 1925.3474971535002, 1925.7690639575, 1925.8160570229998, 1925.9970054359999, 1926.085659339, 1926.1536308519999, 1926.192779852, 1926.3787671940001, 1926.431272839, 1926.4959708375, 1926.5212633765, 1926.685073694, 1926.735414194, 1926.812047372, 1926.90667605375, 1927.0935375087502, 1927.2281403390002, 1927.327054194, 1927.359326982, 1927.4079630279998, 1927.4673954545, 1927.5260059455002, 1927.5857756940002, 1927.730646236, 1927.8847382029999, 1927.9398480539999, 1927.9939455555, 1928.0324032015, 1928.0818658903, 1928.181695555, 1928.256667053, 1928.3213071025, 1928.3919273175002, 1929.191805164, 1929.23582559275, 1929.4537597030003, 1929.4928390815, 1929.7977550110002, 1929.8937635070001, 1930.0438675110001, 1930.1096815585001, 1930.1375642075, 1930.2318533840003, 1930.438506348, 1930.6270382045, 1930.6985781820001, 1930.78798234, 1931.0103863440002, 1931.0904007267502, 1931.20308462165, 1931.2810549399, 1931.37039084, 1931.5565961815, 1931.610043703, 1931.6677258375, 1931.735534336, 1931.916138735, 1932.076887116, 1932.117281601, 1932.159691155, 1932.175394892, 1932.6093822395, 1932.6311368525, 1932.742474359, 1933.2002064910002, 1933.2813269600001, 1933.393619762, 1933.7140059, 1933.78857064, 1934.0194492700002, 1934.264190801, 1934.5747025839999, 1934.5868090774998, 1934.685784338, 1934.736504614, 1935.198070031, 1935.3517206495, 1935.5126453885, 1935.5900120400001, 1935.625548577, 1935.682829089, 1935.741510867, 1935.865006515, 1935.99684539, 1936.043950767, 1936.063174077, 1936.089339577, 1936.4593732145, 1936.49003493, 1936.8420999910002, 1937.596535637, 1938.0160093285, 1938.152089935, 1938.2390207160001, 1938.454889265, 1938.6657509455001, 1938.683839663, 1938.7960297005, 1938.8516346699998, 1939.0374566005003, 1939.1498837515, 1939.35143129, 1939.56957051, 1940.1487339045002, 1940.457507092, 1940.675540891, 1940.8153223365, 1940.8467397975, 1941.333739115, 1941.7747867495, 1941.8239920685, 1941.98018501, 1942.0589377025, 1942.1298171325, 1942.1672659785, 1942.4873533475002, 1942.51868457, 1942.6122849588999, 1942.8852624064998, 1942.9781268668999, 1943.3941181705, 1944.008157285, 1944.0227269615, 1944.1941056145001, 1944.30240737, 1944.4098798700002, 1944.64466485, 1944.754381385, 1944.76371147, 1944.7712274700002, 1944.9895885405, 1945.006974628, 1945.0469967580002, 1945.0906985775, 1945.1843332025, 1945.3140402075, 1945.6700392005, 1945.8416684299998, 1945.919496795, 1945.9381689135, 1945.959591285, 1946.0591469780002, 1946.0839863659999, 1946.181800795, 1946.1898553800002, 1946.262476335, 1946.438808475, 1946.4482149665, 1946.4573077465, 1946.532957938, 1946.5478554580002, 1946.5591029435, 1946.6239096650002, 1947.0067471250002, 1947.0260345915, 1947.261663875, 1947.3065349265003, 1947.361249285, 1947.4475769135, 1947.60959805, 1947.655401305, 1948.176259102, 1948.3165112335, 1948.468718231, 1948.494415259, 1948.5744623935002, 1948.7526133850001, 1948.99412562, 1949.1492104055, 1949.3714816305, 1949.5346820650002, 1949.5865663905001, 1949.6339926635, 1949.6521393110002, 1949.7923344675, 1949.8581837524998, 1950.026645671, 1950.3108989975, 1950.637946973, 1950.82603157, 1950.9326557514999, 1951.0157207514999, 1951.0913266415, 1951.232343053, 1951.3065079415, 1951.3111498829999, 1951.3848616297237, 1951.4266907130002, 1951.526086589, 1951.5983497675002, 1951.6412647525, 1951.693235765, 1951.7186202300002, 1951.79594707, 1951.8783923024998, 1952.0569223070001, 1952.1625451675, 1952.205997561, 1952.2494591955, 1952.338673302, 1952.6394145465, 1953.0521653382234, 1953.080476055, 1953.1063379885, 1953.3617031685, 1953.4094437445, 1953.43603214, 1953.7667567930002, 1953.8162600515, 1953.8619387190001, 1953.9402378492236, 1954.1088833622234, 1954.2060364215, 1954.3048608894999, 1954.5587382130002, 1954.619868255, 1954.6741737305001, 1954.8542742630002, 1954.8970127945004, 1954.9275830245, 1955.0313379929999, 1955.2712152765002, 1955.4667669044998, 1955.5614183745001, 1955.64789491, 1955.737681471, 1955.8390432410001, 1955.870693628, 1955.9085739647235, 1956.6457408155002, 1956.9601908570003, 1957.10097146, 1957.1204725525, 1957.1557715364997, 1957.2013078465002, 1957.2560856475002, 1957.3756351675001, 1957.5596291905001, 1957.6776853810002, 1957.7112026905002, 1957.7443093810002, 1957.8031072235, 1958.048734057, 1958.142845071, 1958.18047258, 1958.5966829345, 1958.6336701745, 1958.69480518, 1958.7996861735, 1959.396049132, 1959.536612575, 1959.581190881, 1959.6105180670002, 1959.7518270349997, 1959.864080218, 1959.8891967095, 1960.12894536, 1960.2184298514999, 1960.300221333, 1960.4627501345, 1960.5947565575002, 1960.7893553709998, 1960.989982043, 1961.1068952055002, 1961.1863361595001, 1961.3331982715, 1961.5729198135, 1961.7489458065, 1961.8898726999998, 1962.0913567775, 1962.22694314, 1962.419030411, 1962.6845999870002, 1962.9477069135, 1962.9932135914999, 1963.2759904485, 1963.391052232, 1964.3479743975001, 1964.5623648230003, 1966.8603586195, 1966.921827564, 1966.9732589465, 1967.1326777935, 1967.4416991875, 1967.6444262635, 1967.8496049135, 1967.9358800199998, 1968.032192525, 1968.2226609595, 1968.9305898245, 1969.0862624635001, 1969.4575434654998, 1969.4957795185, 1969.539137917, 1969.9848193665, 1970.0953328394999, 1970.1576719185, 1970.3085949484998, 1970.3697695899998, 1970.4395285599999, 1970.6562077284998, 1971.277944528, 1971.7428585400003, 1971.96171557, 1972.1184939165, 1972.4412034655, 1972.489836267, 1972.548098583, 1972.569368126, 1972.604911168, 1972.930019617, 1973.05837971, 1973.439879656, 1973.506016073, 1973.5308872985, 1973.6732036165, 1974.063813528, 1974.330706028, 1974.415416134, 1974.553036285, 1974.5820019594998, 1974.79652255775, 1974.95998645975, 1975.0555236, 1975.1125258079999, 1975.223641307, 1975.235916307, 1975.26260144675, 1975.87454955775, 1976.1892558779996, 1976.2792194067501, 1976.3199477838002, 1976.3490680690502, 1976.4565189504997, 1976.549250851, 1976.690144496, 1976.844223692, 1977.45491405, 1977.549454692, 1977.5815584749998, 1977.6184869595, 1977.6525161569998, 1977.720894657, 1978.6435793425499, 1978.74300828955, 1979.0881973330002, 1979.2132040835, 1979.412259019, 1979.4634632647499, 1979.84473422975, 1979.89502155105, 1980.0091452705, 1980.0408415050001, 1980.28148895, 1980.46382314, 1980.46925013, 1980.5034526585, 1981.1284000043001, 1981.3389655454998, 1981.5817102199999, 1981.6480059761002, 1981.78551586, 1981.8559225765, 1982.0067024149998, 1982.1879158289998, 1982.3179975885, 1982.5467701335, 1982.7223026005001, 1983.0939841503, 1983.1382640418, 1983.15899869205, 1983.20314779355, 1983.289340568, 1984.0290121268501, 1984.09628662685, 1984.38470290005, 1984.48680915455, 1984.51402015455, 1984.552068231, 1984.607444929, 1984.7082280538, 1985.126006952, 1985.4106516479999, 1985.5236432455, 1985.593977005, 1985.71334269, 1985.7671766295, 1985.8801061305, 1985.9046180994999, 1986.0511543698, 1986.100188091, 1986.1075450910002, 1986.1496075605, 1986.3684347315002, 1986.5378618698, 1986.6255948737999, 1986.7105502985, 1986.996189369, 1987.032391365, 1987.1695405965002, 1987.3288761019498, 1987.63941123, 1987.67785923, 1987.69571765355, 1987.77174268405, 1987.860469369, 1987.9081607295, 1988.0512402294999, 1988.2501605025, 1988.3156542865, 1988.3860006260002, 1988.4520379034998, 1988.6420632023, 1988.9385952498, 1989.2051269195001, 1989.289814356, 1989.538123537, 1989.6765649215, 1989.80668771195, 1989.92590480645, 1990.1008754765, 1990.14950866745, 1990.2012447005, 1990.31804110195, 1990.35667894075, 1990.604424037, 1990.6620849649998, 1990.7034534605, 1990.8342612505, 1991.1151422945, 1991.1863665024998, 1992.0811221999998, 1992.1337125270002, 1992.584672521, 1992.75903775, 1992.7908799509999, 1992.8264124465, 1992.936288768, 1993.0263722150003, 1993.428072607, 1993.55246571195, 1993.64186492695, 1994.137786711, 1994.3931110165, 1994.89763169995, 1995.3217360405001, 1995.5369407895, 1995.5600960755, 1995.6534827965002, 1995.694716808, 1995.951230742, 1997.697958157, 1997.8112831225, 1997.9142802975002, 1997.9248739525, 1998.14081197845, 1998.18992820345, 1998.2799965665, 1998.2990263505, 1998.3334220955003, 1998.6043292049999, 1998.7624550255, 1998.9502640834999, 1999.3125930815, 1999.5592296225, 1999.6736723655, 1999.8069480005001, 1999.9542244105, 2000.1329240629998, 2000.2413799234998, 2000.2673736740498, 2000.362133725, 2000.6670541590001, 2001.0129148615001, 2001.172984087, 2001.396908895, 2001.4814424866, 2001.5915788441, 2001.8870505585, 2002.0700279175003, 2002.1946387066, 2002.342784875, 2002.36447783, 2002.5026700805001, 2002.5971775910002, 2002.639931011, 2002.66525452, 2002.6774959, 2002.6931355985, 2002.6995498595002, 2002.7035050075, 2002.7931625400001, 2002.9774260725, 2003.0521231565, 2003.136457215, 2003.8072436334999, 2004.1683320365, 2004.7652070670001, 2004.8844317035, 2005.1516267031002, 2005.1583694785002, 2005.177225567, 2005.2529677916, 2005.553447021, 2005.6505620485, 2005.7921672515, 2005.8954227205, 2005.9766541005001, 2006.1353728885001, 2006.65173272, 2006.88159472, 2006.919875155, 2006.96589873, 2007.088612339, 2007.1050742031002, 2007.1481623716, 2007.5922637866001, 2007.7012470091001, 2007.7114816825, 2007.888295067, 2007.9798635521, 2008.1252357815, 2008.2936175579998, 2008.5566582803501, 2008.61046829735, 2008.7091737873502, 2008.75458572735, 2008.8911082804998, 2009.1037635870002, 2009.1420606535, 2009.3504618215002, 2009.3720596655, 2009.5154381, 2009.68531001, 2009.83884093, 2010.0662541955, 2010.1901541605002, 2010.32172535, 2010.404473265, 2010.642024586, 2010.8164643625, 2010.998955863, 2011.0685090870002, 2011.20381538, 2011.3358051204998, 2011.5452353435999, 2011.6301803255, 2011.6560433255, 2011.70169244, 2011.7752492565, 2011.81600342, 2011.9829165729998, 2012.06955642, 2012.7645099400002, 2012.8343860150003, 2012.8981551905, 2012.9778287816, 2013.02561115, 2013.1107192700001, 2013.5039970870002, 2013.5212441535, 2014.132919485, 2014.15196663, 2014.206135045, 2014.2568271055002, 2014.3916568110003, 2014.5211575755002, 2014.5459837305002, 2014.655470242, 2015.2363157805003, 2015.39184325, 2015.5314606299999, 2015.606686015, 2015.7097183350002, 2015.8086682489998, 2015.9805289665, 2016.1754281055003, 2016.6257608995, 2016.9301758390002, 2016.9891904355002, 2017.1008959985002, 2017.233817033, 2017.2764008499998, 2017.32139758, 2017.363949264, 2017.4501894995, 2017.5249398279602, 2017.854970749, 2018.0669812239998, 2018.9502969455, 2019.097377342, 2019.558924501, 2019.7696427884998, 2019.9402544985, 2020.1612434625, 2020.3836686079999, 2020.5653660224602, 2020.67322076496, 2021.07218506, 2021.3974798980998, 2021.5964876781, 2021.7697369615, 2021.8090251664999, 2022.1531509615002, 2022.611559885, 2022.7289473315, 2022.938606865, 2023.9722401665, 2024.1627671235, 2024.282668295, 2024.77698409, 2025.3440524760003, 2025.6691123599999, 2025.7974321884599, 2026.13767704246, 2026.660621396, 2026.8197674184999, 2027.687601351, 2028.044603771, 2028.2624461174603, 2028.5465424324602, 2028.627645525, 2029.1282538574999, 2030.1630606009999, 2030.706615735, 2031.3879211400001, 2032.468094325, 2032.59302095, 2032.681411601, 2032.843954342, 2033.725570691, 2033.790191271, 2034.8936774135, 2037.4118390035, 2037.6046689535, 2037.69707285, 2037.7768108999999, 2037.9779922750004, 2038.06491681, 2038.21842281, 2038.3794127350002, 2039.1849010295, 2039.92595135, 2042.1940710365, 2042.9501998014998, 2044.73317292, 2044.939384375, 2045.18869002, 2045.3085218014999, 2045.4230788015, 2045.496230185, 2045.9194991995, 2046.034765934, 2046.281826508, 2046.6452106315, 2046.8350115295, 2046.9476885639997, 2047.2266956500002, 2047.4164926400001, 2047.7705393200001, 2047.812487672, 2047.9942629020002, 2048.163709415, 2048.309318986, 2048.3968578490003, 2048.4805655555, 2048.5957590555, 2048.89258906235, 2048.998513815, 2049.35990499235, 2049.5505463180502, 2049.69240009955, 2050.1884920740004, 2050.3571014635, 2050.464657762, 2050.76402033685, 2050.9252928547003, 2051.0623496395, 2051.1104853731504, 2051.80992791, 2051.874185865, 2051.9858937165, 2052.2011095836497, 2052.2957812015, 2052.5243187725, 2052.711291532, 2052.8450978315, 2053.041880295, 2053.141829272, 2053.265773512, 2053.64522112305, 2053.663814381, 2053.7038353773496, 2053.758364204, 2053.8533172176503, 2054.0281686395, 2054.031361621, 2054.1641531840005, 2054.315474977, 2054.739880495, 2055.0160202015004, 2055.0296880120004, 2055.1604535505003, 2055.19646839415, 2055.25133391365, 2055.4115671395, 2055.5245696465, 2055.59572549235, 2055.98994255295, 2056.2378330315, 2056.2958383805, 2056.6151118941502, 2056.828102837, 2056.9985839565, 2057.204127025, 2057.4380316184997, 2057.5338857705, 2058.022989311, 2058.07082358995, 2058.37834341365, 2058.55414430875, 2058.8901922955, 2059.0059428189998, 2059.36854070965, 2059.4622032339503, 2059.83240007365, 2060.013705496, 2060.23284716735, 2060.28374963035, 2060.380930311, 2060.4606780899503, 2060.47859497295, 2060.535566591, 2060.5506343794996, 2060.59716579635, 2060.64835179135, 2060.6857182794997, 2060.9576224167, 2061.03611009795, 2061.8080963595003, 2062.0623209415003, 2062.6549347795, 2062.7780580384997, 2062.9101522885003, 2062.953406564, 2062.982876546, 2063.087092348, 2063.251500601, 2063.4018933400002, 2063.4962926, 2063.574691217, 2063.661033472, 2063.7226548744998, 2063.87107707445, 2063.94633149245, 2064.2970941000003, 2064.79870373, 2065.1587030910005, 2065.309167673, 2065.4892145898502, 2066.914039855, 2067.091589314, 2067.264596799, 2067.4507306124997, 2067.6397305150003, 2067.756150515, 2067.94888218485, 2068.27215767, 2068.2795137015, 2068.362874881, 2068.5278363495, 2068.7073717191997, 2068.8865710517002, 2069.1597302192, 2069.2380415642, 2069.2970985150005, 2069.4034670642004, 2069.4880019517, 2069.902826292, 2070.4361775575, 2070.650565082, 2070.8806328495, 2070.9353828740004, 2071.5772349794997, 2071.820915689, 2072.8484998115, 2072.941098442, 2073.6397516650004, 2073.9217779105, 2074.4600175900005, 2074.8383655420002, 2075.296709325, 2075.3461548495, 2075.4215617435, 2075.906263648, 2076.565511113, 2076.6604385640003, 2076.9088864115, 2077.5433511879996, 2077.816861898, 2077.870272935, 2078.7331103865, 2079.1743449, 2079.44171399, 2080.1465893115, 2080.6919592215, 2080.973358733, 2081.253214338, 2081.5351711229996, 2082.96656799, 2083.0379303115005, 2083.5258073530003, 2084.0973381915, 2084.26636503, 2084.32901547, 2084.84929219, 2085.575456442, 2086.4623951535004, 2087.1025876599997, 2087.177708845, 2087.314326842, 2087.3698514420003, 2087.471927643, 2088.721737933, 2088.8379047855, 2088.9200569205, 2089.2683296679998, 2089.679653985, 2090.289557856, 2090.6259850979995, 2090.7243149623, 2090.8963759335, 2091.181867853, 2091.697490175, 2091.7792035435, 2092.368199001, 2092.4093192535, 2092.5923082375, 2092.8302515472997, 2092.9605334373, 2093.2861673305, 2093.8938090955, 2094.0792765605, 2094.3382414850003, 2094.444545942, 2094.5116609469997, 2094.628203447, 2094.8283479943, 2095.0531405373, 2095.8170325373003, 2095.97473318, 2096.0564390373, 2096.1030550373, 2096.19222029, 2096.5266602600004, 2097.0293634, 2097.564584924, 2097.708772244, 2097.834682173, 2097.864938758, 2097.940171075, 2098.127987735, 2099.420485438, 2099.7103031545003, 2099.8847393605, 2100.3399534299997, 2100.49399842, 2100.772097585, 2100.823759583, 2100.861742658, 2100.9223120750003, 2101.1563723955, 2101.2991922665, 2101.355466575, 2101.361082505, 2101.4429833904996, 2101.6118474309997, 2102.117173813, 2102.4802058955, 2102.5110647785, 2102.86544563, 2103.0871835469998, 2103.3516914829997, 2103.765502488, 2104.0517610140005, 2105.1807070470004, 2105.2751281074998, 2105.6004243905, 2106.3149400715, 2106.45836677, 2106.81054695, 2106.86035131, 2106.902890887, 2107.2387293624997, 2107.36011927, 2107.564111269, 2107.798193842, 2107.9049903825003, 2108.021278573, 2108.3545880055, 2109.3581157300005, 2109.5541116555005, 2109.7510264400003, 2110.047979073, 2110.5962114500003, 2110.7454756955003, 2110.8030746044997, 2110.92331545, 2111.1984920325, 2111.3042222369995, 2111.3752952369996, 2111.515519087, 2111.7759624660002, 2111.801069599, 2112.07284006, 2112.6153750350004, 2112.7908330600003, 2112.8398998395005, 2112.9506027320003, 2113.05181286, 2113.229474031, 2114.2046309199995, 2114.2734663849997, 2114.3925864825, 2114.4791714505, 2114.6342370795, 2114.717212859, 2115.11245657, 2115.2154130050003, 2115.296161005, 2115.3501204425, 2115.411778277, 2115.4383174855, 2115.7471750795003, 2115.8636313145003, 2116.0165347475004, 2116.49049230375, 2116.6826085955, 2116.8239310955, 2116.951083925, 2117.153250925, 2117.9281284854997, 2118.3712731445, 2118.7607156095, 2118.9441531095003, 2119.2174404855, 2119.2612881338, 2119.36334904, 2119.384525095, 2119.6198895199996, 2119.73124139, 2119.854549289, 2120.0808669855, 2120.1437356855, 2120.1471806655, 2120.439091207, 2120.579464412, 2120.6269156855, 2120.65218604, 2120.75251132, 2120.86200782, 2120.977817595, 2121.246552635, 2121.7585047045004, 2122.0839254045, 2122.2045179199995, 2122.2073983745, 2123.391821315, 2123.6553291043, 2124.132034835, 2124.1647423349996, 2124.535096755, 2124.69372794, 2124.7346682999996, 2124.8526513310003, 2125.1469601145, 2125.3624523945, 2125.418958615, 2125.4805993905, 2125.5246906254997, 2126.60870523, 2127.17288655, 2127.2079298950002, 2127.4412337450003, 2127.4717750400005, 2128.33154276, 2128.72943376, 2128.956319105, 2129.0693890350003, 2129.335723395, 2129.4866480500004, 2129.62281217, 2129.69663067, 2129.75885759, 2129.9031400245, 2130.5919436004997, 2130.788562115, 2130.8752368295, 2131.0191740845003, 2132.1133497349997, 2132.65186812, 2132.9769776595, 2133.1594319745, 2133.2840168999996, 2133.42007755, 2133.6188987885, 2133.6625817454997, 2133.7735705005, 2133.8216239305, 2134.1090538965, 2134.13872637, 2134.2821106144997, 2134.4484294794997, 2134.4870654794995, 2134.9352314745, 2135.02055505, 2135.0277351395, 2135.125227987, 2135.2575141925, 2135.581245937, 2135.7129666925, 2135.7860910805, 2135.8550260755, 2135.91219884, 2135.99214397, 2136.1025311595, 2136.3054912815, 2136.3556339355, 2136.40183169975, 2136.6487782, 2137.0993503825002, 2137.4550016552503, 2137.5619406982496, 2137.7131758275, 2137.79901078, 2137.8742073880003, 2138.0144731925, 2138.1949802, 2138.2481029345, 2138.2661317800003, 2138.3437941925, 2138.57711995525, 2138.87801861925, 2139.0556185879996, 2139.22313267, 2139.336337555, 2139.529163662, 2139.883202588, 2139.8862312695, 2140.00698030275, 2140.0809294279998, 2140.1593630754996, 2140.615571225, 2140.6683881735, 2140.7054200175, 2140.8312120174996, 2140.8880003534996, 2140.9749340455, 2141.0720927410002, 2141.137602893, 2141.268703622, 2141.5748940845, 2141.837253927, 2141.9030797145, 2142.1007761150004, 2142.506970122, 2142.645637487, 2143.7623530175, 2143.89387727525, 2144.1000465175002, 2144.4803585125, 2144.7878311735, 2144.7940731484996, 2145.0928208615, 2145.1080628564996, 2145.1319938565, 2145.4392847161, 2146.367722797, 2146.6084791635003, 2146.6632781975995, 2146.6826931975997, 2146.8737792330003, 2147.377263762, 2147.531419733, 2147.6630909904998, 2147.902806262, 2148.2276801645003, 2148.5857600995, 2148.7163032874996, 2148.7357548310997, 2148.790654653, 2148.9072409401, 2148.9938860382, 2149.2996881976, 2149.3862828311003, 2149.557848124, 2149.6945143311, 2149.8072325382, 2150.1095733540997, 2150.1404963310997, 2150.184920942, 2150.507213455, 2150.596757653, 2150.9201815331, 2150.9667200382, 2151.862506935, 2151.9636044119998, 2152.311127797, 2152.336391297, 2152.8767759479, 2152.94828195975, 2152.9813794597503, 2153.287756965, 2153.734091311, 2153.9090793935, 2154.289596615, 2154.3056555350004, 2154.510738535, 2154.7011110845, 2154.9760758410002, 2155.156553375, 2155.2823021000004, 2155.8783029165, 2156.4380900815, 2157.166921436, 2157.2459153874997, 2157.3305275848998, 2157.5170806298997, 2157.7264654615, 2157.8431560999998, 2158.0304250525, 2158.2655531524997, 2158.5082867, 2159.9415041330003, 2160.262726171, 2160.540666995, 2160.580536936, 2160.6171191015, 2160.8052259015003, 2160.9057958450003, 2161.1450510015, 2161.1821644065003, 2161.2575055509997, 2161.3519906965003, 2161.4151547230003, 2161.5562758300002, 2161.661385495, 2162.057488635, 2162.217624739, 2162.6915600909997, 2162.7206766775, 2162.8964800105, 2162.966548528, 2163.1270424189997, 2163.2979059015, 2163.4622459615, 2163.7696041965, 2164.024085471, 2164.1638156774998, 2164.2664947864996, 2164.2905572, 2164.475270655, 2164.72137766, 2165.229378393, 2165.531969255, 2166.753380985, 2167.165477804, 2167.356458861, 2167.536747036, 2168.065876555, 2168.231119655, 2168.3145055799996, 2168.419717485, 2169.304674606, 2169.488334506, 2169.97601601, 2170.2617682, 2171.572259031, 2172.9112669859996, 2174.5958732715, 2175.5243750160002, 2175.7093046560003, 2177.086399732, 2177.46514055, 2178.038566156, 2179.2053279845004, 2179.237812198, 2179.9279408025004, 2179.9727894925, 2181.2354218245, 2181.3595063600005, 2181.720323542, 2182.098106245, 2182.1306065275, 2182.3370350065, 2182.550205042, 2182.604550563, 2182.6511300055, 2182.7674428325, 2183.5637066994996, 2183.8213278245003, 2184.770924745, 2185.4740985629996, 2186.1254030065, 2186.1734799845, 2186.970296425, 2187.16799708, 2187.713204308, 2187.979558283, 2188.14486561, 2188.7728905485, 2189.3223911100004, 2189.74773042, 2190.209606945, 2190.4224876645, 2190.8796570445, 2191.3340632384998, 2191.5030260225003, 2191.7378785475003, 2193.303974589, 2194.5251667385, 2194.97103711, 2195.11474661, 2195.26880769315, 2195.8988611864997, 2196.352336035, 2196.877123535, 2197.81775813165, 2197.93962593815, 2198.157659334, 2198.28329898215, 2198.32524648215, 2198.61513430815, 2198.8813984835, 2199.0276866599997, 2200.65362552, 2200.71635802, 2200.7799948435, 2200.824373177, 2201.1547869315, 2201.423347573, 2201.7204977915, 2201.93117502, 2202.27169152, 2202.40257540075, 2203.34907716, 2203.81985441075, 2204.3933791954996, 2204.6387799015, 2205.6829652002502, 2207.1654094545, 2207.6855126655, 2207.9847241654998, 2208.06376073, 2208.2364436655, 2208.8921845107498, 2211.2402176015003, 2212.3921113, 2212.700647025, 2213.298778765, 2213.6310801600002, 2213.778633842, 2214.9523750955, 2215.1291145900004, 2215.441278028, 2215.785689588, 2215.927116902, 2216.485005537, 2217.1690847229997, 2217.7814193579998, 2219.335292485, 2219.6744639985, 2220.306282588, 2220.82538829, 2221.05750949, 2221.6219399765, 2221.836319747, 2222.9279652554997, 2223.333591531, 2223.573211728, 2223.611425885, 2223.6827858605, 2223.7825447605, 2224.1003797554995, 2224.4111147229996, 2224.4848502144996, 2224.7431455329997, 2226.0360745185, 2226.2592954765, 2226.3490720765003, 2226.4373775765, 2227.4652406185, 2227.6124500035003, 2227.8171104615003, 2228.023022463, 2228.1506190464997, 2228.177795955, 2228.2206289135, 2228.4001208435, 2228.56882062, 2228.7015872800002, 2229.0914533315, 2229.483695203, 2229.8328587899996, 2230.100821289, 2230.8017988584998, 2232.02465921, 2232.827496785, 2233.0931282049996, 2233.184504885, 2233.3953281550002, 2233.71189671, 2234.08663336, 2234.9195313150003, 2235.0826704, 2235.1937427800003, 2235.2198369025, 2235.275794035, 2235.50933514, 2235.5986815250003, 2235.746822385, 2235.984640205, 2236.038480057, 2236.5299373435, 2236.828381675, 2236.90725296, 2237.3327612155, 2238.1692033054997, 2238.243519535, 2238.3720530074997, 2238.665933557, 2238.9467676145, 2239.08365445, 2239.8781619325, 2240.154435253, 2240.1935202530003, 2240.45018193, 2241.414636795, 2241.795223175, 2242.193962755, 2242.266012675, 2242.4865132155, 2242.833251681, 2244.2413626405, 2244.5827267535, 2246.3900693725, 2246.513740093, 2248.56799484955, 2249.06909380255, 2249.7016045195, 2249.8925915195, 2250.6434308724997, 2251.144010593, 2251.631671568, 2251.675571068, 2251.9406404085003, 2252.20412688555, 2253.20762207005, 2253.44981062, 2253.754093123, 2254.254569844, 2254.902443192, 2254.967000787, 2255.0459146505, 2255.1290782555, 2255.175516844, 2255.270412694, 2255.4900082639997, 2256.56347482, 2257.119663194, 2257.73226264775, 2258.1728797055002, 2258.4635291275, 2258.9438470555, 2259.40492793325, 2259.4984548755, 2260.8040884700004, 2260.85843869775, 2260.8734503755004, 2260.94702914775, 2261.4576275795, 2261.8976288895, 2262.2034151572498, 2263.99070569775, 2264.704768802, 2267.238263754, 2268.41207434, 2271.4559162510004, 2272.5920622865, 2275.6498735630003, 2275.754084563, 2276.339204063, 2279.396450063, 2280.36017254, 2280.5589081099997, 2281.0969843565, 2281.69748157, 2282.152028685, 2282.5213801850005, 2283.2075729305, 2283.8743221100003, 2284.4042043555, 2284.6483778955, 2285.60592223, 2286.0239744305, 2286.3062186855, 2287.1025976500005, 2287.7158022145, 2288.4692391854996, 2289.5998931960003, 2290.4576825135, 2291.4893437295, 2292.5907299845003, 2292.8832840135, 2292.930394504, 2294.853930788, 2295.4681212295, 2295.85380372, 2296.389021004, 2296.8832774395, 2297.2189997335, 2297.465319876, 2297.5513522335004, 2297.8498176555004, 2298.352197876, 2298.578776798, 2298.7557019395, 2298.7994350135004, 2299.2132347445, 2303.350179782, 2305.8168587985, 2305.9993263295, 2306.497899719, 2307.318327719, 2308.0571974824998, 2308.5138159515, 2311.5655022583, 2312.6774868286, 2317.6582467543003, 2320.6470198286, 2322.3514542543, 2322.6434699475003, 2323.005139675, 2323.3441444425, 2324.9335152149997, 2326.674234215, 2327.184978215, 2327.7720819075003, 2328.3890101899997, 2330.29451869, 2331.21040369, 2332.5245732675, 2333.0038569075, 2334.083039445, 2334.5516030999997, 2334.9511958049998, 2335.2546663800003, 2335.648800895, 2335.80220888, 2336.231652895, 2336.4342525499997, 2338.05527855, 2339.3515661250003, 2344.646872745, 2345.0014813199996, 2346.7877479675003, 2347.2555850425, 2347.64553132, 2348.565285726, 2349.8556486999996, 2350.28261782, 2350.6482430425, 2350.9253872649997, 2351.5576353835, 2353.4696376995, 2353.7435293834997, 2353.9342308835, 2354.481845687, 2355.0145245035, 2356.6565671994995, 2359.205619929, 2359.6086925785, 2360.099277429, 2362.5795103795, 2364.5661025970003, 2366.981654597, 2367.407194364, 2372.4731782885, 2372.8705397885, 2374.6442987885002, 2377.292466397, 2378.747141397, 2379.699544721, 2380.0367496139997, 2380.0905801139997, 2382.7894190069997, 2383.030646114, 2383.983866155, 2384.7676508970003, 2385.180843059, 2388.3210454085, 2399.07974105, 2400.017817851, 2400.494823995, 2400.7776609949997, 2401.7907379010003, 2402.083864401, 2403.476434882, 2404.863024466, 2405.10373505, 2405.9186290499997, 2406.834956195, 2407.40356934, 2410.319614695, 2411.1759899649996, 2412.0573299649996, 2415.53211882, 2415.99350159, 2416.8167565900003, 2417.2794171530004, 2419.2684298105, 2420.463007405, 2420.975883405, 2421.708391216, 2422.6070876530002, 2423.1399509025, 2423.7812793105, 2426.1553437475, 2427.0683629024998, 2427.2539067449998, 2428.200155905, 2428.572866427, 2428.831493449, 2428.980997449, 2429.1530367275, 2430.4796724945, 2432.181317396, 2433.197537629, 2433.99470854, 2434.760046773, 2435.628804396, 2436.329564629, 2436.717176129, 2437.04935804, 2437.469901396, 2437.950615396, 2439.8272583959997, 2445.76810707, 2448.38798164, 2450.4303960899997, 2450.9040868849997, 2451.365609385, 2453.060571885, 2454.4801693850004, 2454.7429008850004, 2456.9981828850005, 2462.114871291, 2474.826671254, 2477.4179879020003, 2485.725742778, 2490.890506154, 2495.6963240140003, 2496.418622395, 2496.612216395, 2496.855455895, 2497.3593585139997, 2498.149455895, 2501.2357322375, 2503.0192939915005, 2504.260875757, 2505.3465584858423, 2506.2714054915004, 2506.7913113565, 2507.5746724974997, 2508.2869151745, 2510.5393660265, 2510.8048650265, 2516.1838814925, 2516.46977307, 2522.214517915, 2523.1354904925, 2530.4869497299997, 2532.64076473, 2543.0367166860497, 2543.54587318605, 2543.7331686545003, 2546.4563826005497, 2548.826550069, 2549.262789569, 2549.386871069, 2549.620319569, 2549.7887704095, 2551.3645429094995, 2562.2013796150004, 2562.6790568465003, 2563.6499378500002, 2564.4607158500003, 2573.1860020999998, 2581.78456785, 2586.6622539745, 2587.4375749745, 2588.7918320989997, 2589.3208655989997, 2593.026922099, 2606.6017306745, 2617.87575565005, 2618.4169240501, 2619.0352261500498, 2619.76837115005, 2620.13595215005, 2622.11694465005, 2624.06925515005, 2626.569880225, 2634.183426435, 2635.76186737, 2635.84917937, 2636.23962837, 2636.518107775, 2636.5959907750002, 2661.3815182309, 2665.3231982759, 2669.8056817999995, 2673.773258634, 2679.8066609680004, 2681.5930099680004, 2720.91972008, 2725.07871858, 2885.9955520545, 2886.7582805545, 2887.5536305545, 2889.127665422, 2889.2712235545005, 2890.5237331870003, 2997.423556214, 3000.286821214, 3003.2646172140003, 3036.1685234320003, 3071.05904615, 3073.9007521500002])
def eqenergy(rows):
    return np.sum(rows, axis=1)
def classify(rows):
    energys = eqenergy(rows)
    start_label = 1
    def thresh_search(input_energys):
        numers = np.searchsorted(energy_thresholds, input_energys, side='left')-1
        indys = np.argwhere(np.logical_and(numers<len(energy_thresholds), numers>=0)).reshape(-1)
        defaultindys = np.argwhere(np.logical_not(np.logical_and(numers<len(energy_thresholds), numers>=0))).reshape(-1)
        outputs = np.zeros(input_energys.shape[0])
        outputs[indys] = (numers[indys] + start_label) % 2
        outputs[defaultindys]=0
        return outputs
    return thresh_search(energys)

numthresholds=4896



# Main method
model_cap = numthresholds


def Validate(file):
    cleanarr = np.loadtxt(file, delimiter=',', dtype='float64')


    if n_classes == 2:
        #note that classification is a single line of code
        outputs = classify(cleanarr[:, :-1])


        #metrics
        count, correct_count, num_TP, num_TN, num_FP, num_FN, num_class_1, num_class_0 = 0, 0, 0, 0, 0, 0, 0, 0
        correct_count = int(np.sum(outputs.reshape(-1) == cleanarr[:, -1].reshape(-1)))
        count = outputs.shape[0]
        num_TP = int(np.sum(np.logical_and(outputs.reshape(-1) == 1, cleanarr[:, -1].reshape(-1) == 1)))
        num_TN = int(np.sum(np.logical_and(outputs.reshape(-1) == 0, cleanarr[:, -1].reshape(-1) == 0)))
        num_FN = int(np.sum(np.logical_and(outputs.reshape(-1) == 0, cleanarr[:, -1].reshape(-1) == 1)))
        num_FP = int(np.sum(np.logical_and(outputs.reshape(-1) == 1, cleanarr[:, -1].reshape(-1) == 0)))
        num_class_0 = int(np.sum(cleanarr[:, -1].reshape(-1) == 0))
        num_class_1 = int(np.sum(cleanarr[:, -1].reshape(-1) == 1))
        return count, correct_count, num_TP, num_TN, num_FP, num_FN, num_class_1, num_class_0


    else:
        #validation
        outputs = classify(cleanarr[:, :-1])


        #metrics
        count, correct_count = 0, 0
        numeachclass = {}
        for k, o in enumerate(outputs):
            if int(o) == int(float(cleanarr[k, -1])):
                correct_count += 1
            if int(float(cleanarr[k, -1])) in numeachclass.keys():
                numeachclass[int(float(cleanarr[k, -1]))] += 1
            else:
                numeachclass[int(float(cleanarr[k, -1]))] = 0
            count += 1
        return count, correct_count, numeachclass, outputs, cleanarr[:,-1]


#Predict on unlabeled data
def Predict(file, get_key, headerless, preprocessedfile, classmapping):
    cleanarr = np.loadtxt(file, delimiter=',', dtype='float64')
    with open(preprocessedfile, 'r') as csvinput:
        dirtyreader = csv.reader(csvinput)

        #print original header
        if (not headerless):
            print(','.join(next(dirtyreader, None) + ["Prediction"]))

        outputs = classify(cleanarr)

        for k, row in enumerate(dirtyreader):
            print(str(','.join(str(j) for j in ([i for i in row]))) + ',' + str(get_key(int(outputs[k]), classmapping)))



#Main
if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Predictor trained on '+TRAINFILE)
    parser.add_argument('csvfile', type=str, help='CSV file containing test set (unlabeled).')
    parser.add_argument('-validate', action='store_true', help='Validation mode. csvfile must be labeled. Output is classification statistics rather than predictions.')
    parser.add_argument('-cleanfile', action='store_true', help='Use this flag to save prediction time if the csvfile you are passing has already been preprocessed. Implies headerless.')
    parser.add_argument('-headerless', help='Do not treat the first line of csvfile as a header.', action='store_true')
    args = parser.parse_args()
    faulthandler.enable()

    #clean if not already clean
    if not args.cleanfile:
        tempdir = tempfile.gettempdir()
        cleanfile = tempdir + os.sep + "clean.csv"
        preprocessedfile = tempdir + os.sep + "prep.csv"
        preprocess(args.csvfile,preprocessedfile,args.headerless,(not args.validate))
        get_key, classmapping = clean(preprocessedfile, cleanfile, -1, args.headerless, (not args.validate))
    else:
        cleanfile=args.csvfile
        preprocessedfile=args.csvfile
        get_key = lambda x,y: x
        classmapping = {}

    #Predict or Validate?
    if not args.validate:
        Predict(cleanfile, get_key, args.headerless, preprocessedfile, classmapping)


    else:
        
        if n_classes == 2:
            count, correct_count, num_TP, num_TN, num_FP, num_FN, num_class_1, num_class_0 = Validate(cleanfile)
        else:
            count, correct_count, numeachclass, preds, true_labels = Validate(cleanfile)


        #validation report
        if n_classes == 2:
            #Base metrics
            FN = float(num_FN) * 100.0 / float(count)
            FP = float(num_FP) * 100.0 / float(count)
            TN = float(num_TN) * 100.0 / float(count)
            TP = float(num_TP) * 100.0 / float(count)
            num_correct = correct_count

            #Calculated Metrics
            if int(num_TP + num_FN) != 0:
                TPR = num_TP / (num_TP + num_FN) # Sensitivity, Recall
            if int(num_TN + num_FP) != 0:
                TNR = num_TN / (num_TN + num_FP) # Specificity
            if int(num_TP + num_FP) != 0:
                PPV = num_TP / (num_TP + num_FP) # Recall
            if int(num_FN + num_TP) != 0:
                FNR = num_FN / (num_FN + num_TP) # Miss rate
            if int(2 * num_TP + num_FP + num_FN) != 0:
                FONE = 2 * num_TP / (2 * num_TP + num_FP + num_FN) # F1 Score
            if int(num_TP + num_FN + num_FP) != 0:
                TS = num_TP / (num_TP + num_FN + num_FP) # Critical Success Index
            #Best Guess Accuracy
            randguess = int(float(10000.0 * max(num_class_1, num_class_0)) / count) / 100.0
            #Model Accuracy
            modelacc = int(float(num_correct * 10000) / count) / 100.0
            #Report
            print("System Type:                        Binary classifier")
            print("Best-guess accuracy:                {:.2f}%".format(randguess))
            print("Model accuracy:                     {:.2f}%".format(modelacc) + " (" + str(int(num_correct)) + "/" + str(count) + " correct)")
            print("Improvement over best guess:        {:.2f}%".format(modelacc - randguess) + " (of possible " + str(round(100 - randguess, 2)) + "%)")
            print("Model capacity (MEC):               {:.0f} bits".format(model_cap))
            print("Generalization ratio:               {:.2f}".format(int(float(num_correct * 100) / model_cap) / 100.0) + " bits/bit")
            print("Model efficiency:                   {:.2f}%/parameter".format(int(100 * (modelacc - randguess) / model_cap) / 100.0))
            print("System behavior")
            print("True Negatives:                     {:.2f}%".format(TN) + " (" + str(int(num_TN)) + "/" + str(count) + ")")
            print("True Positives:                     {:.2f}%".format(TP) + " (" + str(int(num_TP)) + "/" + str(count) + ")")
            print("False Negatives:                    {:.2f}%".format(FN) + " (" + str(int(num_FN)) + "/" + str(count) + ")")
            print("False Positives:                    {:.2f}%".format(FP) + " (" + str(int(num_FP)) + "/" + str(count) + ")")
            if int(num_TP + num_FN) != 0:
                print("True Pos. Rate/Sensitivity/Recall:  {:.2f}".format(TPR))
            if int(num_TN + num_FP) != 0:
                print("True Neg. Rate/Specificity:         {:.2f}".format(TNR))
            if int(num_TP + num_FP) != 0:
                print("Precision:                          {:.2f}".format(PPV))
            if int(2 * num_TP + num_FP + num_FN) != 0:
                print("F-1 Measure:                        {:.2f}".format(FONE))
            if int(num_TP + num_FN) != 0:
                print("False Negative Rate/Miss Rate:      {:.2f}".format(FNR))
            if int(num_TP + num_FN + num_FP) != 0:
                print("Critical Success Index:             {:.2f}".format(TS))

        #Multiclass
        else:
            num_correct = correct_count
            modelacc = int(float(num_correct * 10000) / count) / 100.0
            randguess = round(max(numeachclass.values()) / sum(numeachclass.values()) * 100, 2)
            print("System Type:                        " + str(n_classes) + "-way classifier")
            print("Best-guess accuracy:                {:.2f}%".format(randguess))
            print("Model accuracy:                     {:.2f}%".format(modelacc) + " (" + str(int(num_correct)) + "/" + str(count) + " correct)")
            print("Improvement over best guess:        {:.2f}%".format(modelacc - randguess) + " (of possible " + str(round(100 - randguess, 2)) + "%)")
            print("Model capacity (MEC):               {:.0f} bits".format(model_cap))
            print("Generalization ratio:               {:.2f}".format(int(float(num_correct * 100) / model_cap) / 100.0) + " bits/bit")





            def confusion_matrix(y_true, y_pred, labels=None, sample_weight=None, normalize=None):
                #check for numpy/scipy is imported
                try:
                    from scipy.sparse import coo_matrix #required for multiclass metrics
                    try:
                        np.array
                    except:
                        import numpy as np
                except:
                    raise ValueError("Scipy and Numpy Required for Multiclass Metrics")
                # Compute confusion matrix to evaluate the accuracy of a classification.
                # By definition a confusion matrix :math:C is such that :math:C_{i, j}
                # is equal to the number of observations known to be in group :math:i and
                # predicted to be in group :math:j.
                # Thus in binary classification, the count of true negatives is
                # :math:C_{0,0}, false negatives is :math:C_{1,0}, true positives is
                # :math:C_{1,1} and false positives is :math:C_{0,1}.
                # Read more in the :ref:User Guide <confusion_matrix>.
                # Parameters
                # ----------
                # y_true : array-like of shape (n_samples,)
                # Ground truth (correct) target values.
                # y_pred : array-like of shape (n_samples,)
                # Estimated targets as returned by a classifier.
                # labels : array-like of shape (n_classes), default=None
                # List of labels to index the matrix. This may be used to reorder
                # or select a subset of labels.
                # If None is given, those that appear at least once
                # in y_true or y_pred are used in sorted order.
                # sample_weight : array-like of shape (n_samples,), default=None
                # Sample weights.
                # normalize : {'true', 'pred', 'all'}, default=None
                # Normalizes confusion matrix over the true (rows), predicted (columns)
                # conditions or all the population. If None, confusion matrix will not be
                # normalized.
                # Returns
                # -------
                # C : ndarray of shape (n_classes, n_classes)
                # Confusion matrix.
                # References
                # ----------
                if labels is None:
                    labels = np.array(list(set(list(y_true.astype('int')))))
                else:
                    labels = np.asarray(labels)
                    if np.all([l not in y_true for l in labels]):
                        raise ValueError("At least one label specified must be in y_true")


                if sample_weight is None:
                    sample_weight = np.ones(y_true.shape[0], dtype=np.int64)
                else:
                    sample_weight = np.asarray(sample_weight)
                if y_true.shape[0]!=y_pred.shape[0]:
                    raise ValueError("y_true and y_pred must be of the same length")

                if normalize not in ['true', 'pred', 'all', None]:
                    raise ValueError("normalize must be one of {'true', 'pred', 'all', None}")


                n_labels = labels.size
                label_to_ind = {y: x for x, y in enumerate(labels)}
                # convert yt, yp into index
                y_pred = np.array([label_to_ind.get(x, n_labels + 1) for x in y_pred])
                y_true = np.array([label_to_ind.get(x, n_labels + 1) for x in y_true])
                # intersect y_pred, y_true with labels, eliminate items not in labels
                ind = np.logical_and(y_pred < n_labels, y_true < n_labels)
                y_pred = y_pred[ind]
                y_true = y_true[ind]
                # also eliminate weights of eliminated items
                sample_weight = sample_weight[ind]
                # Choose the accumulator dtype to always have high precision
                if sample_weight.dtype.kind in {'i', 'u', 'b'}:
                    dtype = np.int64
                else:
                    dtype = np.float64
                cm = coo_matrix((sample_weight, (y_true, y_pred)), shape=(n_labels, n_labels), dtype=dtype,).toarray()


                with np.errstate(all='ignore'):
                    if normalize == 'true':
                        cm = cm / cm.sum(axis=1, keepdims=True)
                    elif normalize == 'pred':
                        cm = cm / cm.sum(axis=0, keepdims=True)
                    elif normalize == 'all':
                        cm = cm / cm.sum()
                    cm = np.nan_to_num(cm)
                return cm


            print("Confusion Matrix:")
            mtrx = confusion_matrix(np.array(true_labels).reshape(-1), np.array(preds).reshape(-1))
            mtrx = mtrx / np.sum(mtrx) * 100.0
            print(' ' + np.array2string(mtrx, formatter={'float': (lambda x: '{:.2f}%'.format(round(float(x), 2)))})[1:-1])



    #remove tempfile if created
    if not args.cleanfile: 
        os.remove(cleanfile)
        os.remove(preprocessedfile)


