#!/usr/bin/env python3
#
# This code is was produced by an alpha version of Brainome Daimensions(tm) and is 
# licensed under GNU GPL v2.0 or higher. For details, please see: 
# https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html
#
#
# Output of Brainome Daimensions(tm) 0.93 Table Compiler v0.94.
# Invocation: btc https://www.openml.org/data/get_csv/53999/musk.arff -o Predictors/musk_NN.py -target class -stopat 100 -f NN -e 20 --yes
# Total compiler execution time: 0:34:58.18. Finished on: Apr-22-2020 01:49:21.
# This source code requires Python 3.
#
"""
System Type:                        Binary classifier
Best-guess accuracy:                84.58%
Model accuracy:                     99.98% (6597/6598 correct)
Improvement over best guess:        15.40% (of possible 15.42%)
Model capacity (MEC):               343 bits
Generalization ratio:               19.23 bits/bit
Model efficiency:                   0.04%/parameter
System behavior
True Negatives:                     84.59% (5581/6598)
True Positives:                     15.40% (1016/6598)
False Negatives:                    0.02% (1/6598)
False Positives:                    0.00% (0/6598)
True Pos. Rate/Sensitivity/Recall:  1.00
True Neg. Rate/Specificity:         1.00
Precision:                          1.00
F-1 Measure:                        1.00
False Negative Rate/Miss Rate:      0.00
Critical Success Index:             1.00

"""

# Imports -- Python3 standard library
import sys
import math
import os
import argparse
import tempfile
import csv
import binascii
import faulthandler

# Imports -- external
import numpy as np # For numpy see: http://numpy.org
from numpy import array

# Magic constants follow
# I/O buffer for clean. Reduce this constant for low memory devices. 
IOBUF = 100000000

# Ugly workaround for large classifiers
sys.setrecursionlimit(1000000)

# Training file given to compiler
TRAINFILE = "musk.csv"


#Number of output logits
num_output_logits = 1

#Number of attributes
num_attr = 169
n_classes = 2

mappings = [{132772677.0: 0, 135476657.0: 1, 137968100.0: 2, 250006356.0: 3, 257228285.0: 4, 315526152.0: 5, 450951903.0: 6, 458411126.0: 7, 602905270.0: 8, 604631712.0: 9, 633062409.0: 10, 634099863.0: 11, 725004860.0: 12, 794616937.0: 13, 830122944.0: 14, 949771546.0: 15, 975525683.0: 16, 976780395.0: 17, 981403640.0: 18, 1002270159.0: 19, 1017181512.0: 20, 1089655575.0: 21, 1191769021.0: 22, 1287282009.0: 23, 1295994109.0: 24, 1307810657.0: 25, 1335586188.0: 26, 1388115103.0: 27, 1393476150.0: 28, 1401253433.0: 29, 1422320276.0: 30, 1494112891.0: 31, 1508500054.0: 32, 1597378790.0: 33, 1607327863.0: 34, 1627048579.0: 35, 1743213060.0: 36, 1843907145.0: 37, 2018757995.0: 38, 2132018471.0: 39, 2176260449.0: 40, 2256571827.0: 41, 2346383082.0: 42, 2391078705.0: 43, 2402730392.0: 44, 2431779433.0: 45, 2435868766.0: 46, 2644467261.0: 47, 2673752730.0: 48, 2677783794.0: 49, 2760916564.0: 50, 2779358450.0: 51, 2826173050.0: 52, 2835780241.0: 53, 2860999162.0: 54, 2863679223.0: 55, 2881160292.0: 56, 2973266378.0: 57, 2984233447.0: 58, 3011432339.0: 59, 3011607523.0: 60, 3014358966.0: 61, 3122477981.0: 62, 3187912074.0: 63, 3224382668.0: 64, 3272882972.0: 65, 3283214247.0: 66, 3297135477.0: 67, 3326034268.0: 68, 3336108401.0: 69, 3417679141.0: 70, 3420674850.0: 71, 3433577890.0: 72, 3446298517.0: 73, 3454139290.0: 74, 3534656612.0: 75, 3541869261.0: 76, 3549892290.0: 77, 3657138861.0: 78, 3668635366.0: 79, 3687969003.0: 80, 3724648967.0: 81, 3743707165.0: 82, 3780811985.0: 83, 3811451520.0: 84, 3862386888.0: 85, 3884281441.0: 86, 3885573853.0: 87, 3902573668.0: 88, 3944578831.0: 89, 3945420802.0: 90, 3984979500.0: 91, 4018214115.0: 92, 4031108882.0: 93, 4051473801.0: 94, 4052204837.0: 95, 4109278195.0: 96, 4138740215.0: 97, 4153501489.0: 98, 4240502052.0: 99, 4271791904.0: 100, 2364557664.0: 101}, {97736.0: 0, 449561.0: 1, 1212185.0: 2, 1483120.0: 3, 2067128.0: 4, 2333001.0: 5, 2798625.0: 6, 3454794.0: 7, 4147336.0: 8, 4895486.0: 9, 7120740.0: 10, 8158548.0: 11, 10877275.0: 12, 11865801.0: 13, 12782305.0: 14, 12886061.0: 15, 12969588.0: 16, 13644114.0: 17, 15326215.0: 18, 17045379.0: 19, 17767933.0: 20, 18664081.0: 21, 18682562.0: 22, 19251780.0: 23, 20416123.0: 24, 23343095.0: 25, 25398727.0: 26, 26913840.0: 27, 27502920.0: 28, 27559021.0: 29, 28233043.0: 30, 29235043.0: 31, 29668910.0: 32, 30116527.0: 33, 30463927.0: 34, 32064294.0: 35, 32290380.0: 36, 32952472.0: 37, 33683718.0: 38, 33936464.0: 39, 34131358.0: 40, 35252734.0: 41, 36722784.0: 42, 38805289.0: 43, 39108928.0: 44, 39151611.0: 45, 39191496.0: 46, 39976921.0: 47, 40442449.0: 48, 40635000.0: 49, 41547473.0: 50, 42081908.0: 51, 42173113.0: 52, 42316984.0: 53, 42354676.0: 54, 42688483.0: 55, 45849829.0: 56, 46765317.0: 57, 48450236.0: 58, 50766803.0: 59, 50969137.0: 60, 56082401.0: 61, 56859720.0: 62, 57757834.0: 63, 58577040.0: 64, 59585782.0: 65, 59675062.0: 66, 61865343.0: 67, 62584236.0: 68, 63499474.0: 69, 63719129.0: 70, 65430706.0: 71, 65565450.0: 72, 65929756.0: 73, 66207666.0: 74, 69541971.0: 75, 72979615.0: 76, 73311024.0: 77, 73395180.0: 78, 75201971.0: 79, 75744773.0: 80, 77593515.0: 81, 77693632.0: 82, 79055413.0: 83, 79837542.0: 84, 81211829.0: 85, 83602935.0: 86, 84205128.0: 87, 84469161.0: 88, 84687808.0: 89, 85209800.0: 90, 85285762.0: 91, 86877785.0: 92, 87598050.0: 93, 87623001.0: 94, 87939888.0: 95, 90020985.0: 96, 90705993.0: 97, 90760054.0: 98, 90979615.0: 99, 91500007.0: 100, 93228709.0: 101, 93281115.0: 102, 95837731.0: 103, 98205312.0: 104, 98788965.0: 105, 98999290.0: 106, 99119265.0: 107, 99320813.0: 108, 101181447.0: 109, 101313518.0: 110, 105016297.0: 111, 105315083.0: 112, 106578530.0: 113, 107191818.0: 114, 109146709.0: 115, 109348671.0: 116, 110202860.0: 117, 111768119.0: 118, 111850983.0: 119, 112683072.0: 120, 113113679.0: 121, 113346355.0: 122, 117697796.0: 123, 120026855.0: 124, 120226630.0: 125, 122575856.0: 126, 122576208.0: 127, 122960034.0: 128, 124931745.0: 129, 125527401.0: 130, 125663624.0: 131, 126097438.0: 132, 126594493.0: 133, 128054333.0: 134, 128459373.0: 135, 129889611.0: 136, 131648208.0: 137, 131940593.0: 138, 133226618.0: 139, 134027819.0: 140, 135448646.0: 141, 136105643.0: 142, 136371194.0: 143, 136578451.0: 144, 138452147.0: 145, 140438011.0: 146, 140931709.0: 147, 141110573.0: 148, 141943740.0: 149, 142084429.0: 150, 142749867.0: 151, 145393338.0: 152, 145448681.0: 153, 146282040.0: 154, 146362838.0: 155, 146933012.0: 156, 147045822.0: 157, 147205261.0: 158, 147291722.0: 159, 147544118.0: 160, 149124762.0: 161, 150060566.0: 162, 150890159.0: 163, 151852099.0: 164, 152262811.0: 165, 153839688.0: 166, 155380518.0: 167, 155427834.0: 168, 157631308.0: 169, 158575199.0: 170, 158754560.0: 171, 159022095.0: 172, 159578977.0: 173, 160814018.0: 174, 163349002.0: 175, 165342031.0: 176, 167043254.0: 177, 171410316.0: 178, 172108003.0: 179, 172258201.0: 180, 172445100.0: 181, 172861214.0: 182, 173699314.0: 183, 173948705.0: 184, 175066731.0: 185, 176070905.0: 186, 178320769.0: 187, 179555890.0: 188, 179886326.0: 189, 180734490.0: 190, 182308352.0: 191, 182459105.0: 192, 188926277.0: 193, 190361235.0: 194, 191747601.0: 195, 192573528.0: 196, 192928046.0: 197, 193336395.0: 198, 193761062.0: 199, 194802335.0: 200, 196755596.0: 201, 198103984.0: 202, 199186042.0: 203, 199437264.0: 204, 199643906.0: 205, 200493332.0: 206, 200817107.0: 207, 202880065.0: 208, 202970953.0: 209, 204827274.0: 210, 206432108.0: 211, 207474630.0: 212, 211156426.0: 213, 211286090.0: 214, 211717389.0: 215, 212126416.0: 216, 215642420.0: 217, 217167494.0: 218, 219374816.0: 219, 220226311.0: 220, 220891573.0: 221, 221244666.0: 222, 221754603.0: 223, 222207779.0: 224, 224303612.0: 225, 225961758.0: 226, 226501801.0: 227, 227401464.0: 228, 227765368.0: 229, 229005474.0: 230, 229117443.0: 231, 229640729.0: 232, 231551384.0: 233, 234151117.0: 234, 235439957.0: 235, 235649376.0: 236, 236435478.0: 237, 236692249.0: 238, 237922275.0: 239, 237973311.0: 240, 238936470.0: 241, 241225818.0: 242, 242124539.0: 243, 244917423.0: 244, 245157741.0: 245, 246886230.0: 246, 250560376.0: 247, 250806998.0: 248, 251138427.0: 249, 253087060.0: 250, 253241253.0: 251, 253557196.0: 252, 254630058.0: 253, 255012322.0: 254, 255927298.0: 255, 256403249.0: 256, 258157531.0: 257, 258318161.0: 258, 259066546.0: 259, 259531130.0: 260, 259850003.0: 261, 259984479.0: 262, 261665906.0: 263, 262577199.0: 264, 262847059.0: 265, 262924436.0: 266, 263092647.0: 267, 265590223.0: 268, 266313649.0: 269, 269886722.0: 270, 271194689.0: 271, 271603977.0: 272, 272365602.0: 273, 272560141.0: 274, 275290910.0: 275, 276722189.0: 276, 279425867.0: 277, 280001470.0: 278, 284152311.0: 279, 285736938.0: 280, 285866247.0: 281, 286184482.0: 282, 286591008.0: 283, 288538995.0: 284, 289354962.0: 285, 292162708.0: 286, 292430274.0: 287, 292691052.0: 288, 295854231.0: 289, 296775592.0: 290, 298871159.0: 291, 298907853.0: 292, 299404543.0: 293, 299650827.0: 294, 300027919.0: 295, 304658494.0: 296, 307225128.0: 297, 311934567.0: 298, 312570317.0: 299, 313448492.0: 300, 314089657.0: 301, 314861371.0: 302, 315120858.0: 303, 316007153.0: 304, 316346088.0: 305, 318595651.0: 306, 320309446.0: 307, 320948076.0: 308, 321274093.0: 309, 321416356.0: 310, 321696461.0: 311, 321979817.0: 312, 322314793.0: 313, 323043763.0: 314, 323512955.0: 315, 324253305.0: 316, 324606370.0: 317, 324828397.0: 318, 325010136.0: 319, 325423544.0: 320, 325748826.0: 321, 327297429.0: 322, 327546849.0: 323, 329509303.0: 324, 329868671.0: 325, 330797862.0: 326, 331072704.0: 327, 331808577.0: 328, 333380443.0: 329, 333841454.0: 330, 333921476.0: 331, 334942705.0: 332, 336022595.0: 333, 336090529.0: 334, 338013794.0: 335, 338462122.0: 336, 338802932.0: 337, 339834580.0: 338, 341567024.0: 339, 341623216.0: 340, 344155055.0: 341, 344299625.0: 342, 345708008.0: 343, 346766168.0: 344, 347291458.0: 345, 348470122.0: 346, 349056430.0: 347, 351268236.0: 348, 352027277.0: 349, 355579888.0: 350, 356974215.0: 351, 361548043.0: 352, 364301041.0: 353, 364986485.0: 354, 365108277.0: 355, 365458669.0: 356, 367125167.0: 357, 369301220.0: 358, 369354203.0: 359, 369608845.0: 360, 372664811.0: 361, 374534347.0: 362, 374746786.0: 363, 374747967.0: 364, 375590971.0: 365, 375667998.0: 366, 375901778.0: 367, 376060915.0: 368, 377015353.0: 369, 380979430.0: 370, 381500628.0: 371, 381529454.0: 372, 382706830.0: 373, 385913432.0: 374, 387167764.0: 375, 390585944.0: 376, 391527483.0: 377, 392539587.0: 378, 393994523.0: 379, 394401262.0: 380, 397730137.0: 381, 398246951.0: 382, 398574779.0: 383, 399144786.0: 384, 400408487.0: 385, 400894553.0: 386, 401093527.0: 387, 404694722.0: 388, 405583674.0: 389, 408270095.0: 390, 410984118.0: 391, 411936400.0: 392, 412207553.0: 393, 413476386.0: 394, 414750729.0: 395, 415216940.0: 396, 415630327.0: 397, 416993846.0: 398, 417823412.0: 399, 419740665.0: 400, 420040280.0: 401, 421050369.0: 402, 421153929.0: 403, 422544907.0: 404, 422675808.0: 405, 422820773.0: 406, 423812046.0: 407, 424077050.0: 408, 424516395.0: 409, 424772543.0: 410, 425100350.0: 411, 425489950.0: 412, 428217634.0: 413, 428601203.0: 414, 432734227.0: 415, 433601440.0: 416, 434034485.0: 417, 435350854.0: 418, 435753366.0: 419, 437422960.0: 420, 438249812.0: 421, 438851176.0: 422, 439598026.0: 423, 440442330.0: 424, 441544943.0: 425, 442950097.0: 426, 444116233.0: 427, 445648070.0: 428, 446106439.0: 429, 446458991.0: 430, 446809325.0: 431, 447340947.0: 432, 448479276.0: 433, 448839533.0: 434, 450328472.0: 435, 451481331.0: 436, 453171391.0: 437, 454294751.0: 438, 454508006.0: 439, 454740039.0: 440, 454956590.0: 441, 455209548.0: 442, 455829793.0: 443, 457065220.0: 444, 457911912.0: 445, 458223617.0: 446, 459517658.0: 447, 460145347.0: 448, 461033112.0: 449, 461246705.0: 450, 463304373.0: 451, 466789444.0: 452, 471272065.0: 453, 471531296.0: 454, 471854857.0: 455, 472003608.0: 456, 472312433.0: 457, 475508356.0: 458, 476684686.0: 459, 477043878.0: 460, 477352503.0: 461, 477563998.0: 462, 477821439.0: 463, 480425947.0: 464, 481234145.0: 465, 481585699.0: 466, 482430913.0: 467, 483223997.0: 468, 485536428.0: 469, 487269832.0: 470, 487942416.0: 471, 489935938.0: 472, 492850418.0: 473, 494882665.0: 474, 497908596.0: 475, 498139240.0: 476, 499393930.0: 477, 500597813.0: 478, 502628847.0: 479, 503171295.0: 480, 504707396.0: 481, 505438002.0: 482, 506143459.0: 483, 506747333.0: 484, 507779432.0: 485, 508914353.0: 486, 509905473.0: 487, 511150224.0: 488, 513070479.0: 489, 514245642.0: 490, 515052332.0: 491, 516795696.0: 492, 518400874.0: 493, 523819599.0: 494, 524636920.0: 495, 525291442.0: 496, 527622875.0: 497, 530203412.0: 498, 531727526.0: 499, 534205299.0: 500, 535813064.0: 501, 536612312.0: 502, 537751734.0: 503, 541099474.0: 504, 541484232.0: 505, 541491265.0: 506, 542280429.0: 507, 542736531.0: 508, 544184966.0: 509, 545586293.0: 510, 546131975.0: 511, 546771791.0: 512, 547478757.0: 513, 550174913.0: 514, 550402067.0: 515, 550989712.0: 516, 551780467.0: 517, 552430698.0: 518, 552905587.0: 519, 553533016.0: 520, 553664683.0: 521, 554705519.0: 522, 555405391.0: 523, 555870788.0: 524, 557035181.0: 525, 557981096.0: 526, 558840368.0: 527, 560002269.0: 528, 560537690.0: 529, 560954144.0: 530, 561907961.0: 531, 562610957.0: 532, 562931266.0: 533, 563125020.0: 534, 563448629.0: 535, 564043249.0: 536, 565330534.0: 537, 568891865.0: 538, 572540800.0: 539, 576402627.0: 540, 576925053.0: 541, 577747173.0: 542, 579859064.0: 543, 579981769.0: 544, 581937314.0: 545, 582194444.0: 546, 582516737.0: 547, 582782190.0: 548, 585923063.0: 549, 586106818.0: 550, 586647850.0: 551, 587814480.0: 552, 588089401.0: 553, 589629579.0: 554, 590454120.0: 555, 591161545.0: 556, 593260054.0: 557, 593605895.0: 558, 593974301.0: 559, 594399088.0: 560, 594405548.0: 561, 594874612.0: 562, 595987754.0: 563, 596104569.0: 564, 596902421.0: 565, 601044332.0: 566, 601367464.0: 567, 602278901.0: 568, 602549641.0: 569, 602884294.0: 570, 603257919.0: 571, 603982697.0: 572, 603991221.0: 573, 604795166.0: 574, 606261807.0: 575, 606714615.0: 576, 607234575.0: 577, 607482982.0: 578, 607690391.0: 579, 608180490.0: 580, 608750738.0: 581, 609122328.0: 582, 609332432.0: 583, 610290720.0: 584, 610570825.0: 585, 610612466.0: 586, 612525374.0: 587, 612535519.0: 588, 612886928.0: 589, 612889613.0: 590, 613221770.0: 591, 614021158.0: 592, 614177628.0: 593, 617814453.0: 594, 619432243.0: 595, 619891826.0: 596, 620348940.0: 597, 624357594.0: 598, 625202488.0: 599, 626249537.0: 600, 627332723.0: 601, 627908232.0: 602, 629787592.0: 603, 629843621.0: 604, 630869299.0: 605, 633498811.0: 606, 636986937.0: 607, 637277648.0: 608, 638398660.0: 609, 639297320.0: 610, 644015597.0: 611, 644711602.0: 612, 645338198.0: 613, 645587447.0: 614, 646646625.0: 615, 647763584.0: 616, 648056123.0: 617, 652239451.0: 618, 653444068.0: 619, 653482472.0: 620, 653807404.0: 621, 654139141.0: 622, 654466719.0: 623, 654824818.0: 624, 657170641.0: 625, 657736842.0: 626, 659848446.0: 627, 662537234.0: 628, 662624071.0: 629, 662743155.0: 630, 664366954.0: 631, 666976684.0: 632, 670844383.0: 633, 673152054.0: 634, 673634103.0: 635, 675403369.0: 636, 676365139.0: 637, 678968124.0: 638, 679144482.0: 639, 681542417.0: 640, 681883996.0: 641, 684213458.0: 642, 685730929.0: 643, 687267311.0: 644, 689410254.0: 645, 690052964.0: 646, 690403504.0: 647, 690517164.0: 648, 691187806.0: 649, 692250456.0: 650, 692613747.0: 651, 692890650.0: 652, 693488728.0: 653, 695743544.0: 654, 695833219.0: 655, 696744700.0: 656, 698018138.0: 657, 698747936.0: 658, 702919129.0: 659, 706401720.0: 660, 707805441.0: 661, 708842350.0: 662, 709328861.0: 663, 709458996.0: 664, 710536460.0: 665, 710961518.0: 666, 711186317.0: 667, 714013323.0: 668, 714294432.0: 669, 715631427.0: 670, 716103172.0: 671, 716948498.0: 672, 717143232.0: 673, 717350287.0: 674, 717656854.0: 675, 718346294.0: 676, 722390058.0: 677, 722481166.0: 678, 723117193.0: 679, 723501043.0: 680, 725560538.0: 681, 726740631.0: 682, 727332316.0: 683, 727770812.0: 684, 731405578.0: 685, 733842929.0: 686, 737040674.0: 687, 738862372.0: 688, 739030957.0: 689, 741081368.0: 690, 744430946.0: 691, 744687667.0: 692, 745700330.0: 693, 746451991.0: 694, 749097535.0: 695, 750090251.0: 696, 750630246.0: 697, 751257530.0: 698, 754700210.0: 699, 755897236.0: 700, 755904471.0: 701, 757381165.0: 702, 757978999.0: 703, 759464025.0: 704, 764334780.0: 705, 764714500.0: 706, 766203663.0: 707, 767351855.0: 708, 767760925.0: 709, 768241498.0: 710, 773084826.0: 711, 774223466.0: 712, 775424065.0: 713, 776291210.0: 714, 776319157.0: 715, 776493636.0: 716, 776604148.0: 717, 776699049.0: 718, 776772477.0: 719, 780731103.0: 720, 781913568.0: 721, 782685937.0: 722, 784469575.0: 723, 784671586.0: 724, 785107001.0: 725, 785266086.0: 726, 785889942.0: 727, 787136229.0: 728, 787950915.0: 729, 788204351.0: 730, 791417456.0: 731, 791876075.0: 732, 792545098.0: 733, 794177136.0: 734, 796047407.0: 735, 796127475.0: 736, 797401834.0: 737, 797757699.0: 738, 798247134.0: 739, 798693878.0: 740, 799970758.0: 741, 800237672.0: 742, 801200253.0: 743, 801876573.0: 744, 802091420.0: 745, 804407048.0: 746, 804938358.0: 747, 805714658.0: 748, 806866606.0: 749, 808695506.0: 750, 809414428.0: 751, 809505024.0: 752, 809641668.0: 753, 810141063.0: 754, 810482969.0: 755, 810763058.0: 756, 811193881.0: 757, 811759270.0: 758, 814612071.0: 759, 817092154.0: 760, 817167135.0: 761, 819311258.0: 762, 819534920.0: 763, 820125697.0: 764, 821249480.0: 765, 822412715.0: 766, 825278801.0: 767, 825391767.0: 768, 826140278.0: 769, 827671354.0: 770, 828041000.0: 771, 828574333.0: 772, 829279769.0: 773, 829922801.0: 774, 830779984.0: 775, 831297326.0: 776, 831919087.0: 777, 836264094.0: 778, 836943238.0: 779, 839046600.0: 780, 839159474.0: 781, 841227675.0: 782, 841607226.0: 783, 842473290.0: 784, 846592948.0: 785, 847473739.0: 786, 849405898.0: 787, 849788080.0: 788, 850085601.0: 789, 850893008.0: 790, 852181054.0: 791, 852381719.0: 792, 853161320.0: 793, 853955536.0: 794, 854738246.0: 795, 854943843.0: 796, 858381296.0: 797, 861610543.0: 798, 863474086.0: 799, 863561420.0: 800, 866186579.0: 801, 866487681.0: 802, 866882171.0: 803, 868266522.0: 804, 869979342.0: 805, 872212189.0: 806, 873800405.0: 807, 874141119.0: 808, 876013110.0: 809, 877095946.0: 810, 877701370.0: 811, 882693989.0: 812, 883420526.0: 813, 890311781.0: 814, 890781613.0: 815, 890983877.0: 816, 894032258.0: 817, 895146835.0: 818, 895777033.0: 819, 895927638.0: 820, 896602810.0: 821, 897071474.0: 822, 897332637.0: 823, 897604694.0: 824, 899198074.0: 825, 899563759.0: 826, 899912718.0: 827, 900105255.0: 828, 900889244.0: 829, 901247345.0: 830, 902310908.0: 831, 902527145.0: 832, 903364488.0: 833, 903503049.0: 834, 903937779.0: 835, 904010011.0: 836, 905178455.0: 837, 906940004.0: 838, 907696616.0: 839, 908599466.0: 840, 911023921.0: 841, 912065864.0: 842, 912706933.0: 843, 912834994.0: 844, 912886126.0: 845, 915372447.0: 846, 915923010.0: 847, 916214699.0: 848, 917873799.0: 849, 921269833.0: 850, 923713888.0: 851, 925106590.0: 852, 925885149.0: 853, 926395619.0: 854, 926704678.0: 855, 928213765.0: 856, 928669597.0: 857, 931151009.0: 858, 933537602.0: 859, 935780879.0: 860, 936707303.0: 861, 936984326.0: 862, 937300515.0: 863, 937441918.0: 864, 939647246.0: 865, 940249902.0: 866, 940315823.0: 867, 940839093.0: 868, 941322730.0: 869, 943381253.0: 870, 944233369.0: 871, 944607209.0: 872, 945222736.0: 873, 946606704.0: 874, 946744501.0: 875, 947145313.0: 876, 948284592.0: 877, 948677213.0: 878, 948958173.0: 879, 949886604.0: 880, 951024214.0: 881, 953909810.0: 882, 956028696.0: 883, 956834335.0: 884, 960672210.0: 885, 960825827.0: 886, 960833970.0: 887, 962311315.0: 888, 962418057.0: 889, 963596387.0: 890, 966128506.0: 891, 967866057.0: 892, 969945472.0: 893, 970279250.0: 894, 973812144.0: 895, 974284561.0: 896, 974567800.0: 897, 975407073.0: 898, 977502526.0: 899, 979324847.0: 900, 981107782.0: 901, 983383147.0: 902, 985491777.0: 903, 986186797.0: 904, 986271108.0: 905, 986661836.0: 906, 988873045.0: 907, 989100423.0: 908, 989674164.0: 909, 990099386.0: 910, 991341537.0: 911, 991685584.0: 912, 991759050.0: 913, 993752769.0: 914, 994051458.0: 915, 994429149.0: 916, 997572984.0: 917, 997727292.0: 918, 998957192.0: 919, 999495518.0: 920, 1000155261.0: 921, 1000583488.0: 922, 1000848815.0: 923, 1001427343.0: 924, 1003330518.0: 925, 1005876867.0: 926, 1006061750.0: 927, 1008748262.0: 928, 1009631643.0: 929, 1012458617.0: 930, 1014378441.0: 931, 1014722552.0: 932, 1015638678.0: 933, 1016174564.0: 934, 1016705690.0: 935, 1018232327.0: 936, 1019127385.0: 937, 1019771290.0: 938, 1021138326.0: 939, 1021781137.0: 940, 1022422116.0: 941, 1023333191.0: 942, 1023341968.0: 943, 1023913183.0: 944, 1024933983.0: 945, 1025194536.0: 946, 1025748950.0: 947, 1026442535.0: 948, 1028089904.0: 949, 1028300177.0: 950, 1028914643.0: 951, 1031503201.0: 952, 1031669171.0: 953, 1031774984.0: 954, 1032912557.0: 955, 1033485726.0: 956, 1033684300.0: 957, 1033689297.0: 958, 1033949213.0: 959, 1034193309.0: 960, 1034868464.0: 961, 1043370384.0: 962, 1045457462.0: 963, 1046865414.0: 964, 1050259190.0: 965, 1053283332.0: 966, 1053807823.0: 967, 1054288317.0: 968, 1055658934.0: 969, 1057085033.0: 970, 1057553825.0: 971, 1060707665.0: 972, 1060843593.0: 973, 1061229190.0: 974, 1063375030.0: 975, 1063844734.0: 976, 1064051991.0: 977, 1064948908.0: 978, 1068380268.0: 979, 1068910123.0: 980, 1069268090.0: 981, 1071358805.0: 982, 1071790020.0: 983, 1071873645.0: 984, 1072195753.0: 985, 1072596028.0: 986, 1073435418.0: 987, 1074288461.0: 988, 1074393590.0: 989, 1076048136.0: 990, 1076417099.0: 991, 1076927605.0: 992, 1077524413.0: 993, 1077630128.0: 994, 1078296563.0: 995, 1079024298.0: 996, 1079270291.0: 997, 1079591517.0: 998, 1079619938.0: 999, 1080872557.0: 1000, 1081948705.0: 1001, 1084098934.0: 1002, 1087517809.0: 1003, 1087972021.0: 1004, 1088883432.0: 1005, 1091174130.0: 1006, 1092446590.0: 1007, 1093669799.0: 1008, 1094650437.0: 1009, 1094694837.0: 1010, 1095380903.0: 1011, 1097775608.0: 1012, 1099450633.0: 1013, 1099582708.0: 1014, 1100009684.0: 1015, 1100702525.0: 1016, 1102222353.0: 1017, 1104653194.0: 1018, 1105025450.0: 1019, 1105617825.0: 1020, 1106134751.0: 1021, 1107093344.0: 1022, 1108335332.0: 1023, 1109331771.0: 1024, 1111694517.0: 1025, 1113451461.0: 1026, 1113803167.0: 1027, 1114536509.0: 1028, 1115358475.0: 1029, 1116813915.0: 1030, 1117756652.0: 1031, 1117893809.0: 1032, 1118086296.0: 1033, 1119177226.0: 1034, 1119507432.0: 1035, 1120684095.0: 1036, 1121807455.0: 1037, 1122314637.0: 1038, 1122487909.0: 1039, 1123343809.0: 1040, 1128291484.0: 1041, 1129814124.0: 1042, 1134616056.0: 1043, 1138695114.0: 1044, 1141298287.0: 1045, 1142198352.0: 1046, 1143750870.0: 1047, 1143925606.0: 1048, 1144675445.0: 1049, 1144934377.0: 1050, 1146884793.0: 1051, 1148231984.0: 1052, 1149228634.0: 1053, 1150483292.0: 1054, 1151845829.0: 1055, 1152573395.0: 1056, 1153149588.0: 1057, 1154292193.0: 1058, 1157355083.0: 1059, 1158860285.0: 1060, 1159456309.0: 1061, 1160698028.0: 1062, 1160785884.0: 1063, 1162228747.0: 1064, 1162686272.0: 1065, 1165151010.0: 1066, 1168215078.0: 1067, 1168627548.0: 1068, 1169205318.0: 1069, 1170825345.0: 1070, 1171026088.0: 1071, 1171820051.0: 1072, 1172398918.0: 1073, 1173006553.0: 1074, 1173510389.0: 1075, 1173664864.0: 1076, 1173966385.0: 1077, 1177697432.0: 1078, 1178071495.0: 1079, 1178261216.0: 1080, 1179831900.0: 1081, 1180555198.0: 1082, 1180973803.0: 1083, 1183023814.0: 1084, 1183557560.0: 1085, 1186623379.0: 1086, 1186818066.0: 1087, 1188316421.0: 1088, 1189448976.0: 1089, 1190991053.0: 1090, 1191250548.0: 1091, 1191940377.0: 1092, 1194371858.0: 1093, 1194620283.0: 1094, 1194624580.0: 1095, 1195204275.0: 1096, 1195710034.0: 1097, 1195843990.0: 1098, 1196469709.0: 1099, 1196716964.0: 1100, 1197299820.0: 1101, 1197401743.0: 1102, 1197559101.0: 1103, 1197819440.0: 1104, 1197839188.0: 1105, 1200279281.0: 1106, 1202460288.0: 1107, 1202965385.0: 1108, 1205277503.0: 1109, 1205742814.0: 1110, 1206569006.0: 1111, 1207194895.0: 1112, 1207203166.0: 1113, 1208411903.0: 1114, 1211357286.0: 1115, 1211891935.0: 1116, 1214977409.0: 1117, 1215286248.0: 1118, 1215399269.0: 1119, 1216275514.0: 1120, 1217002398.0: 1121, 1218010135.0: 1122, 1219035386.0: 1123, 1222415299.0: 1124, 1222921979.0: 1125, 1222969170.0: 1126, 1223275690.0: 1127, 1223645247.0: 1128, 1224500108.0: 1129, 1225106668.0: 1130, 1231214224.0: 1131, 1233481405.0: 1132, 1235659358.0: 1133, 1237378194.0: 1134, 1237902425.0: 1135, 1238374699.0: 1136, 1239553976.0: 1137, 1242591433.0: 1138, 1243351742.0: 1139, 1243914048.0: 1140, 1244231089.0: 1141, 1244235406.0: 1142, 1244507096.0: 1143, 1245730982.0: 1144, 1249457445.0: 1145, 1249660407.0: 1146, 1249996930.0: 1147, 1250400907.0: 1148, 1251462715.0: 1149, 1251731527.0: 1150, 1251904776.0: 1151, 1252192418.0: 1152, 1252515979.0: 1153, 1252648550.0: 1154, 1255086178.0: 1155, 1260289323.0: 1156, 1261105421.0: 1157, 1262152564.0: 1158, 1263521430.0: 1159, 1263632974.0: 1160, 1265311860.0: 1161, 1265704799.0: 1162, 1266442094.0: 1163, 1267620352.0: 1164, 1268164466.0: 1165, 1269264217.0: 1166, 1269442936.0: 1167, 1270337169.0: 1168, 1271875852.0: 1169, 1272603904.0: 1170, 1272868204.0: 1171, 1273735150.0: 1172, 1274660102.0: 1173, 1275365164.0: 1174, 1276222327.0: 1175, 1276416856.0: 1176, 1276787292.0: 1177, 1276959558.0: 1178, 1277289005.0: 1179, 1277299343.0: 1180, 1279018583.0: 1181, 1279735060.0: 1182, 1279963753.0: 1183, 1283402922.0: 1184, 1284362270.0: 1185, 1284777928.0: 1186, 1285849558.0: 1187, 1286842741.0: 1188, 1287102745.0: 1189, 1289357960.0: 1190, 1289985561.0: 1191, 1290827808.0: 1192, 1291011605.0: 1193, 1291543403.0: 1194, 1292632358.0: 1195, 1292995054.0: 1196, 1293218108.0: 1197, 1293969694.0: 1198, 1294834879.0: 1199, 1295583580.0: 1200, 1297645369.0: 1201, 1299304103.0: 1202, 1300083920.0: 1203, 1300759490.0: 1204, 1302518907.0: 1205, 1304699519.0: 1206, 1304982362.0: 1207, 1305093266.0: 1208, 1305378066.0: 1209, 1305425083.0: 1210, 1307789585.0: 1211, 1307978846.0: 1212, 1307980227.0: 1213, 1312954660.0: 1214, 1312962933.0: 1215, 1313177924.0: 1216, 1314546975.0: 1217, 1315396724.0: 1218, 1315463413.0: 1219, 1317737112.0: 1220, 1318241260.0: 1221, 1319444544.0: 1222, 1320633951.0: 1223, 1321065778.0: 1224, 1323450255.0: 1225, 1324445117.0: 1226, 1325367716.0: 1227, 1325535217.0: 1228, 1325846936.0: 1229, 1326130233.0: 1230, 1327251836.0: 1231, 1329458067.0: 1232, 1329654543.0: 1233, 1330758854.0: 1234, 1331824942.0: 1235, 1332139847.0: 1236, 1332288547.0: 1237, 1332421350.0: 1238, 1332968183.0: 1239, 1333959718.0: 1240, 1333986858.0: 1241, 1334362955.0: 1242, 1334414050.0: 1243, 1334945685.0: 1244, 1335438874.0: 1245, 1336429248.0: 1246, 1336543938.0: 1247, 1337022426.0: 1248, 1339863716.0: 1249, 1341429774.0: 1250, 1342236132.0: 1251, 1342533129.0: 1252, 1350218884.0: 1253, 1351063781.0: 1254, 1352556540.0: 1255, 1354603295.0: 1256, 1356584403.0: 1257, 1356949582.0: 1258, 1357777146.0: 1259, 1357910625.0: 1260, 1358505721.0: 1261, 1360329846.0: 1262, 1360910270.0: 1263, 1361432255.0: 1264, 1361635623.0: 1265, 1362501207.0: 1266, 1366303936.0: 1267, 1367200097.0: 1268, 1367502166.0: 1269, 1368144887.0: 1270, 1369947565.0: 1271, 1370114044.0: 1272, 1371704398.0: 1273, 1375367059.0: 1274, 1376078954.0: 1275, 1381302231.0: 1276, 1382246117.0: 1277, 1382690334.0: 1278, 1384493901.0: 1279, 1385010739.0: 1280, 1385102174.0: 1281, 1386053029.0: 1282, 1386289873.0: 1283, 1388665901.0: 1284, 1389787233.0: 1285, 1389977987.0: 1286, 1392190790.0: 1287, 1392974883.0: 1288, 1393246600.0: 1289, 1394991801.0: 1290, 1396087449.0: 1291, 1396476140.0: 1292, 1396682241.0: 1293, 1397172636.0: 1294, 1397311630.0: 1295, 1397750788.0: 1296, 1398499815.0: 1297, 1398932580.0: 1298, 1399038687.0: 1299, 1399291062.0: 1300, 1400953094.0: 1301, 1401273417.0: 1302, 1401566492.0: 1303, 1402776522.0: 1304, 1402865840.0: 1305, 1404682723.0: 1306, 1406413091.0: 1307, 1408039333.0: 1308, 1410229958.0: 1309, 1410318461.0: 1310, 1412099461.0: 1311, 1412869630.0: 1312, 1414614261.0: 1313, 1415545065.0: 1314, 1416005009.0: 1315, 1416765538.0: 1316, 1417733615.0: 1317, 1418932867.0: 1318, 1421471034.0: 1319, 1422988755.0: 1320, 1423905598.0: 1321, 1424046947.0: 1322, 1424527793.0: 1323, 1424818306.0: 1324, 1424825631.0: 1325, 1426131741.0: 1326, 1426582023.0: 1327, 1427022588.0: 1328, 1429814222.0: 1329, 1432093781.0: 1330, 1435951455.0: 1331, 1437112372.0: 1332, 1438366840.0: 1333, 1439489736.0: 1334, 1439698697.0: 1335, 1439799809.0: 1336, 1441298260.0: 1337, 1441483105.0: 1338, 1447561894.0: 1339, 1448860238.0: 1340, 1449641035.0: 1341, 1449675702.0: 1342, 1450185639.0: 1343, 1450323298.0: 1344, 1450784879.0: 1345, 1451923156.0: 1346, 1452911975.0: 1347, 1454603137.0: 1348, 1454732016.0: 1349, 1460937672.0: 1350, 1463158337.0: 1351, 1463899230.0: 1352, 1464317252.0: 1353, 1465175396.0: 1354, 1465236091.0: 1355, 1465823237.0: 1356, 1468686481.0: 1357, 1469064153.0: 1358, 1469493584.0: 1359, 1470557299.0: 1360, 1470870819.0: 1361, 1471549898.0: 1362, 1472809093.0: 1363, 1475582949.0: 1364, 1475940046.0: 1365, 1479221990.0: 1366, 1479811453.0: 1367, 1480226780.0: 1368, 1480334918.0: 1369, 1480656031.0: 1370, 1484046437.0: 1371, 1484097721.0: 1372, 1486059592.0: 1373, 1486629216.0: 1374, 1492481950.0: 1375, 1492996832.0: 1376, 1494443532.0: 1377, 1495435004.0: 1378, 1495685269.0: 1379, 1496034612.0: 1380, 1497783882.0: 1381, 1498131435.0: 1382, 1498172479.0: 1383, 1498233186.0: 1384, 1498883173.0: 1385, 1501902903.0: 1386, 1503411574.0: 1387, 1503782503.0: 1388, 1505891316.0: 1389, 1506098897.0: 1390, 1506605231.0: 1391, 1508908501.0: 1392, 1510547265.0: 1393, 1512278203.0: 1394, 1513912631.0: 1395, 1514385615.0: 1396, 1515941341.0: 1397, 1517297975.0: 1398, 1519627922.0: 1399, 1521248153.0: 1400, 1522805387.0: 1401, 1523408844.0: 1402, 1527004794.0: 1403, 1527482171.0: 1404, 1527584178.0: 1405, 1529921875.0: 1406, 1532352597.0: 1407, 1532505588.0: 1408, 1533031498.0: 1409, 1533294757.0: 1410, 1533875053.0: 1411, 1534413692.0: 1412, 1535421869.0: 1413, 1538410653.0: 1414, 1539282393.0: 1415, 1539340076.0: 1416, 1540847998.0: 1417, 1543307044.0: 1418, 1543694769.0: 1419, 1546329757.0: 1420, 1547181132.0: 1421, 1549600074.0: 1422, 1550449251.0: 1423, 1555129076.0: 1424, 1555742055.0: 1425, 1556915888.0: 1426, 1557287360.0: 1427, 1557610985.0: 1428, 1558800820.0: 1429, 1560351436.0: 1430, 1561305361.0: 1431, 1562738344.0: 1432, 1563325654.0: 1433, 1563863492.0: 1434, 1564495691.0: 1435, 1564943352.0: 1436, 1565412514.0: 1437, 1565637934.0: 1438, 1566498202.0: 1439, 1566893851.0: 1440, 1567054328.0: 1441, 1570806741.0: 1442, 1571417746.0: 1443, 1572441174.0: 1444, 1572664452.0: 1445, 1572971392.0: 1446, 1573311769.0: 1447, 1574316192.0: 1448, 1574745037.0: 1449, 1576954507.0: 1450, 1579255846.0: 1451, 1579331275.0: 1452, 1579577330.0: 1453, 1580155962.0: 1454, 1580185349.0: 1455, 1580564680.0: 1456, 1581635534.0: 1457, 1581672749.0: 1458, 1582013580.0: 1459, 1585085564.0: 1460, 1585465962.0: 1461, 1587403212.0: 1462, 1587625142.0: 1463, 1587855657.0: 1464, 1588132552.0: 1465, 1588582381.0: 1466, 1592916335.0: 1467, 1593302189.0: 1468, 1593713110.0: 1469, 1595428000.0: 1470, 1595475068.0: 1471, 1596768390.0: 1472, 1598482175.0: 1473, 1599583173.0: 1474, 1601294286.0: 1475, 1603311353.0: 1476, 1603842951.0: 1477, 1604411090.0: 1478, 1604737363.0: 1479, 1606705481.0: 1480, 1607431236.0: 1481, 1608918412.0: 1482, 1609690489.0: 1483, 1610529873.0: 1484, 1612167351.0: 1485, 1613967080.0: 1486, 1614868174.0: 1487, 1616118914.0: 1488, 1617075541.0: 1489, 1618792845.0: 1490, 1619672218.0: 1491, 1620797856.0: 1492, 1622397391.0: 1493, 1624065988.0: 1494, 1624551442.0: 1495, 1624936241.0: 1496, 1625430735.0: 1497, 1626276609.0: 1498, 1627661938.0: 1499, 1630481461.0: 1500, 1630624125.0: 1501, 1631349840.0: 1502, 1632921318.0: 1503, 1633494485.0: 1504, 1633746628.0: 1505, 1633881480.0: 1506, 1633951917.0: 1507, 1634536293.0: 1508, 1635360390.0: 1509, 1636087205.0: 1510, 1636361344.0: 1511, 1639086192.0: 1512, 1639365508.0: 1513, 1639582786.0: 1514, 1639620088.0: 1515, 1641716519.0: 1516, 1644500638.0: 1517, 1647740774.0: 1518, 1649378643.0: 1519, 1652164963.0: 1520, 1653340573.0: 1521, 1655831143.0: 1522, 1657023651.0: 1523, 1657172195.0: 1524, 1657750651.0: 1525, 1657951286.0: 1526, 1659422081.0: 1527, 1660766952.0: 1528, 1660976341.0: 1529, 1661953335.0: 1530, 1663213300.0: 1531, 1664347437.0: 1532, 1664518242.0: 1533, 1665549890.0: 1534, 1667028646.0: 1535, 1669507327.0: 1536, 1669616441.0: 1537, 1670236235.0: 1538, 1671177598.0: 1539, 1672219598.0: 1540, 1672744916.0: 1541, 1673156981.0: 1542, 1673661436.0: 1543, 1673761264.0: 1544, 1674124600.0: 1545, 1674653775.0: 1546, 1676996300.0: 1547, 1677505051.0: 1548, 1679913083.0: 1549, 1680242682.0: 1550, 1680573019.0: 1551, 1680675026.0: 1552, 1680825394.0: 1553, 1680937663.0: 1554, 1681274175.0: 1555, 1682198496.0: 1556, 1682922221.0: 1557, 1683072713.0: 1558, 1683261167.0: 1559, 1683518030.0: 1560, 1683704955.0: 1561, 1683892532.0: 1562, 1684185390.0: 1563, 1685278652.0: 1564, 1686292343.0: 1565, 1686444291.0: 1566, 1688525089.0: 1567, 1689146857.0: 1568, 1690423255.0: 1569, 1691995085.0: 1570, 1692404818.0: 1571, 1692480696.0: 1572, 1693030176.0: 1573, 1697613992.0: 1574, 1699271358.0: 1575, 1700479871.0: 1576, 1701368455.0: 1577, 1701959622.0: 1578, 1703972593.0: 1579, 1704596892.0: 1580, 1705394523.0: 1581, 1705633978.0: 1582, 1707300781.0: 1583, 1710904021.0: 1584, 1712470198.0: 1585, 1712609951.0: 1586, 1715053311.0: 1587, 1715259312.0: 1588, 1716913673.0: 1589, 1717345636.0: 1590, 1718215275.0: 1591, 1718333067.0: 1592, 1722109953.0: 1593, 1723293502.0: 1594, 1725389281.0: 1595, 1725661085.0: 1596, 1726113656.0: 1597, 1729059148.0: 1598, 1729172884.0: 1599, 1731684767.0: 1600, 1731838107.0: 1601, 1732036788.0: 1602, 1734948593.0: 1603, 1735371656.0: 1604, 1738472118.0: 1605, 1738572765.0: 1606, 1742607830.0: 1607, 1742798594.0: 1608, 1743315297.0: 1609, 1744013090.0: 1610, 1744219577.0: 1611, 1745106011.0: 1612, 1749019353.0: 1613, 1749581604.0: 1614, 1752552013.0: 1615, 1754107451.0: 1616, 1755149186.0: 1617, 1756374713.0: 1618, 1758487525.0: 1619, 1762789842.0: 1620, 1764192164.0: 1621, 1764495989.0: 1622, 1765504816.0: 1623, 1767004711.0: 1624, 1767600623.0: 1625, 1768836982.0: 1626, 1768994822.0: 1627, 1771575753.0: 1628, 1773326127.0: 1629, 1773413306.0: 1630, 1774886310.0: 1631, 1775865346.0: 1632, 1776360444.0: 1633, 1776437417.0: 1634, 1779176798.0: 1635, 1786281983.0: 1636, 1787034236.0: 1637, 1788856274.0: 1638, 1789545442.0: 1639, 1790324990.0: 1640, 1790804759.0: 1641, 1791169820.0: 1642, 1791701090.0: 1643, 1792128163.0: 1644, 1794116201.0: 1645, 1794290041.0: 1646, 1794545888.0: 1647, 1794832457.0: 1648, 1796104907.0: 1649, 1796531326.0: 1650, 1796792223.0: 1651, 1797115830.0: 1652, 1797380839.0: 1653, 1800445458.0: 1654, 1800714123.0: 1655, 1802517704.0: 1656, 1803169469.0: 1657, 1804819084.0: 1658, 1806010189.0: 1659, 1806187639.0: 1660, 1806916277.0: 1661, 1807241419.0: 1662, 1808170839.0: 1663, 1809144640.0: 1664, 1812991344.0: 1665, 1813302345.0: 1666, 1813506724.0: 1667, 1813587640.0: 1668, 1814479578.0: 1669, 1814845879.0: 1670, 1815960075.0: 1671, 1816707223.0: 1672, 1818470098.0: 1673, 1818533452.0: 1674, 1818772881.0: 1675, 1818915413.0: 1676, 1819614086.0: 1677, 1820196366.0: 1678, 1821549483.0: 1679, 1822012783.0: 1680, 1824038745.0: 1681, 1825020909.0: 1682, 1830296002.0: 1683, 1831823102.0: 1684, 1832160092.0: 1685, 1833680438.0: 1686, 1834998539.0: 1687, 1835127111.0: 1688, 1838169041.0: 1689, 1838627920.0: 1690, 1838898425.0: 1691, 1839658107.0: 1692, 1840173317.0: 1693, 1841795067.0: 1694, 1842366222.0: 1695, 1844330085.0: 1696, 1845040838.0: 1697, 1845726063.0: 1698, 1846443726.0: 1699, 1847426079.0: 1700, 1848569319.0: 1701, 1848937267.0: 1702, 1849079286.0: 1703, 1850848424.0: 1704, 1851175721.0: 1705, 1851475592.0: 1706, 1851817091.0: 1707, 1853957556.0: 1708, 1857309211.0: 1709, 1858875525.0: 1710, 1860111158.0: 1711, 1862148352.0: 1712, 1862341397.0: 1713, 1870147104.0: 1714, 1872165207.0: 1715, 1872893620.0: 1716, 1874363834.0: 1717, 1874932577.0: 1718, 1875656577.0: 1719, 1876812448.0: 1720, 1876970018.0: 1721, 1878046619.0: 1722, 1881163377.0: 1723, 1882043344.0: 1724, 1882661684.0: 1725, 1883259054.0: 1726, 1883859814.0: 1727, 1883860422.0: 1728, 1884489780.0: 1729, 1884666887.0: 1730, 1886095687.0: 1731, 1886136470.0: 1732, 1886748215.0: 1733, 1887062302.0: 1734, 1887643784.0: 1735, 1888263467.0: 1736, 1889977515.0: 1737, 1890188910.0: 1738, 1891288541.0: 1739, 1892789479.0: 1740, 1896799096.0: 1741, 1897858330.0: 1742, 1900137373.0: 1743, 1900370815.0: 1744, 1903092492.0: 1745, 1905704826.0: 1746, 1906618857.0: 1747, 1907245729.0: 1748, 1907382486.0: 1749, 1908024120.0: 1750, 1908067033.0: 1751, 1910508559.0: 1752, 1911126344.0: 1753, 1912860382.0: 1754, 1913061111.0: 1755, 1913809684.0: 1756, 1916598087.0: 1757, 1916679631.0: 1758, 1916953547.0: 1759, 1919618441.0: 1760, 1919931360.0: 1761, 1920146801.0: 1762, 1921629747.0: 1763, 1923640308.0: 1764, 1925101068.0: 1765, 1926326378.0: 1766, 1927106070.0: 1767, 1927392108.0: 1768, 1927567091.0: 1769, 1927902774.0: 1770, 1928115067.0: 1771, 1929996487.0: 1772, 1931047614.0: 1773, 1931612357.0: 1774, 1933396846.0: 1775, 1935203194.0: 1776, 1937526053.0: 1777, 1938093715.0: 1778, 1938591805.0: 1779, 1939393341.0: 1780, 1941011107.0: 1781, 1942292976.0: 1782, 1944795944.0: 1783, 1946260293.0: 1784, 1947110055.0: 1785, 1949587391.0: 1786, 1949638499.0: 1787, 1951436663.0: 1788, 1952226317.0: 1789, 1952754910.0: 1790, 1954209798.0: 1791, 1955269264.0: 1792, 1955682680.0: 1793, 1957219817.0: 1794, 1958076484.0: 1795, 1959491151.0: 1796, 1959779396.0: 1797, 1960623802.0: 1798, 1961439882.0: 1799, 1961837468.0: 1800, 1962217252.0: 1801, 1963071481.0: 1802, 1963123910.0: 1803, 1963379088.0: 1804, 1963670577.0: 1805, 1966994331.0: 1806, 1967608534.0: 1807, 1968330605.0: 1808, 1968435670.0: 1809, 1968648127.0: 1810, 1969672015.0: 1811, 1969961710.0: 1812, 1970155989.0: 1813, 1970827892.0: 1814, 1971242567.0: 1815, 1971302157.0: 1816, 1971418978.0: 1817, 1971487790.0: 1818, 1971950314.0: 1819, 1972137845.0: 1820, 1974503951.0: 1821, 1975299187.0: 1822, 1976477075.0: 1823, 1977395884.0: 1824, 1977987028.0: 1825, 1978257966.0: 1826, 1978731047.0: 1827, 1979918101.0: 1828, 1981424212.0: 1829, 1982001874.0: 1830, 1989003286.0: 1831, 1989257031.0: 1832, 1990040742.0: 1833, 1990440187.0: 1834, 1990498782.0: 1835, 1991845877.0: 1836, 1992525496.0: 1837, 1994235087.0: 1838, 1995146970.0: 1839, 1995563022.0: 1840, 1996192611.0: 1841, 1997640166.0: 1842, 1997885327.0: 1843, 1998109230.0: 1844, 1999471799.0: 1845, 1999865820.0: 1846, 2000604205.0: 1847, 2000713673.0: 1848, 2001568360.0: 1849, 2003539954.0: 1850, 2004569538.0: 1851, 2006586613.0: 1852, 2009205878.0: 1853, 2009257698.0: 1854, 2009348727.0: 1855, 2011257138.0: 1856, 2012146833.0: 1857, 2013518242.0: 1858, 2014510530.0: 1859, 2015086938.0: 1860, 2015303475.0: 1861, 2016045116.0: 1862, 2018439452.0: 1863, 2018465703.0: 1864, 2019733447.0: 1865, 2021014052.0: 1866, 2023002656.0: 1867, 2023443097.0: 1868, 2023861433.0: 1869, 2024337819.0: 1870, 2024593410.0: 1871, 2024639173.0: 1872, 2027136345.0: 1873, 2027466535.0: 1874, 2029615840.0: 1875, 2031073219.0: 1876, 2031126656.0: 1877, 2031915919.0: 1878, 2032752501.0: 1879, 2036850892.0: 1880, 2038017044.0: 1881, 2038454497.0: 1882, 2040266747.0: 1883, 2045068319.0: 1884, 2045251566.0: 1885, 2047195876.0: 1886, 2048152694.0: 1887, 2049397649.0: 1888, 2052096674.0: 1889, 2052696426.0: 1890, 2055925358.0: 1891, 2056543470.0: 1892, 2057398324.0: 1893, 2058305173.0: 1894, 2060058894.0: 1895, 2060594297.0: 1896, 2062540685.0: 1897, 2062806107.0: 1898, 2064680151.0: 1899, 2065573855.0: 1900, 2068502522.0: 1901, 2069148690.0: 1902, 2073673115.0: 1903, 2074344006.0: 1904, 2082835753.0: 1905, 2082935779.0: 1906, 2084139019.0: 1907, 2084598334.0: 1908, 2084960723.0: 1909, 2087380615.0: 1910, 2087969734.0: 1911, 2088298936.0: 1912, 2090549769.0: 1913, 2092789786.0: 1914, 2093605670.0: 1915, 2094292237.0: 1916, 2094556908.0: 1917, 2095323974.0: 1918, 2096958661.0: 1919, 2097907985.0: 1920, 2100343578.0: 1921, 2100969786.0: 1922, 2101378362.0: 1923, 2101560079.0: 1924, 2101680245.0: 1925, 2102040456.0: 1926, 2102609545.0: 1927, 2102988727.0: 1928, 2103263332.0: 1929, 2103410337.0: 1930, 2105118831.0: 1931, 2107516994.0: 1932, 2109728864.0: 1933, 2111504022.0: 1934, 2112301687.0: 1935, 2114594005.0: 1936, 2118423404.0: 1937, 2118507440.0: 1938, 2120381402.0: 1939, 2124930509.0: 1940, 2126230172.0: 1941, 2127364585.0: 1942, 2129907744.0: 1943, 2130431555.0: 1944, 2131940853.0: 1945, 2132146384.0: 1946, 2132151196.0: 1947, 2132540989.0: 1948, 2132783598.0: 1949, 2132972478.0: 1950, 2133013765.0: 1951, 2135403557.0: 1952, 2136594797.0: 1953, 2137080555.0: 1954, 2137923003.0: 1955, 2138231594.0: 1956, 2139044315.0: 1957, 2139422781.0: 1958, 2140454649.0: 1959, 2141197320.0: 1960, 2142006911.0: 1961, 2143362075.0: 1962, 2144102560.0: 1963, 2146864768.0: 1964, 2147491810.0: 1965, 2148395587.0: 1966, 2149101274.0: 1967, 2150760210.0: 1968, 2152628414.0: 1969, 2152707904.0: 1970, 2153064356.0: 1971, 2153304581.0: 1972, 2154933479.0: 1973, 2156052169.0: 1974, 2160218537.0: 1975, 2161265616.0: 1976, 2165733240.0: 1977, 2166744704.0: 1978, 2170770074.0: 1979, 2171594076.0: 1980, 2173390443.0: 1981, 2174261371.0: 1982, 2176042704.0: 1983, 2176128986.0: 1984, 2177847885.0: 1985, 2178122636.0: 1986, 2179869454.0: 1987, 2180961975.0: 1988, 2181545256.0: 1989, 2182322685.0: 1990, 2182563732.0: 1991, 2182712200.0: 1992, 2182786405.0: 1993, 2184395559.0: 1994, 2184647358.0: 1995, 2185396178.0: 1996, 2187202691.0: 1997, 2189130410.0: 1998, 2189322883.0: 1999, 2190747407.0: 2000, 2190988355.0: 2001, 2191311495.0: 2002, 2194023032.0: 2003, 2194275009.0: 2004, 2194913673.0: 2005, 2196832185.0: 2006, 2199979986.0: 2007, 2200525573.0: 2008, 2201676400.0: 2009, 2202394394.0: 2010, 2203533793.0: 2011, 2203654591.0: 2012, 2205134955.0: 2013, 2206810040.0: 2014, 2207595989.0: 2015, 2208346153.0: 2016, 2211311666.0: 2017, 2212374050.0: 2018, 2212519753.0: 2019, 2213120974.0: 2020, 2214355687.0: 2021, 2214753394.0: 2022, 2216442026.0: 2023, 2218427896.0: 2024, 2219623371.0: 2025, 2220306025.0: 2026, 2222010431.0: 2027, 2222597883.0: 2028, 2223751210.0: 2029, 2224137982.0: 2030, 2225514146.0: 2031, 2226381371.0: 2032, 2226473368.0: 2033, 2228057136.0: 2034, 2229261711.0: 2035, 2230909388.0: 2036, 2231370727.0: 2037, 2232659610.0: 2038, 2232860339.0: 2039, 2234213794.0: 2040, 2238074140.0: 2041, 2238949445.0: 2042, 2239398797.0: 2043, 2242133720.0: 2044, 2243310055.0: 2045, 2244229127.0: 2046, 2245737068.0: 2047, 2247165598.0: 2048, 2247600212.0: 2049, 2247746326.0: 2050, 2248323327.0: 2051, 2249558268.0: 2052, 2249952021.0: 2053, 2251366572.0: 2054, 2251787878.0: 2055, 2252118178.0: 2056, 2252874393.0: 2057, 2255408215.0: 2058, 2257785518.0: 2059, 2259655348.0: 2060, 2260470645.0: 2061, 2260531274.0: 2062, 2262833403.0: 2063, 2264135617.0: 2064, 2267181913.0: 2065, 2267434605.0: 2066, 2268403228.0: 2067, 2269154432.0: 2068, 2269989074.0: 2069, 2270499011.0: 2070, 2270968587.0: 2071, 2271227482.0: 2072, 2271388214.0: 2073, 2273237290.0: 2074, 2274034671.0: 2075, 2274785509.0: 2076, 2275247157.0: 2077, 2276240261.0: 2078, 2277130902.0: 2079, 2279075630.0: 2080, 2279768193.0: 2081, 2281921521.0: 2082, 2282064635.0: 2083, 2283420595.0: 2084, 2283559322.0: 2085, 2285020828.0: 2086, 2285026049.0: 2087, 2285266280.0: 2088, 2285355987.0: 2089, 2285605065.0: 2090, 2287139912.0: 2091, 2288213294.0: 2092, 2289782230.0: 2093, 2293580901.0: 2094, 2293841426.0: 2095, 2295455045.0: 2096, 2295668401.0: 2097, 2295937229.0: 2098, 2295966071.0: 2099, 2296844432.0: 2100, 2298558560.0: 2101, 2299291420.0: 2102, 2300540088.0: 2103, 2300791803.0: 2104, 2301798808.0: 2105, 2302124471.0: 2106, 2303757277.0: 2107, 2305034235.0: 2108, 2305251293.0: 2109, 2307696180.0: 2110, 2307955610.0: 2111, 2309939953.0: 2112, 2312140026.0: 2113, 2313787823.0: 2114, 2314783893.0: 2115, 2314861419.0: 2116, 2316762114.0: 2117, 2317434142.0: 2118, 2317883094.0: 2119, 2318947347.0: 2120, 2319530945.0: 2121, 2320517144.0: 2122, 2320837975.0: 2123, 2321532901.0: 2124, 2322098697.0: 2125, 2323459728.0: 2126, 2326444045.0: 2127, 2326959482.0: 2128, 2328342680.0: 2129, 2328866555.0: 2130, 2329389793.0: 2131, 2330457612.0: 2132, 2330881406.0: 2133, 2330940820.0: 2134, 2332000331.0: 2135, 2333316681.0: 2136, 2333715542.0: 2137, 2334255492.0: 2138, 2338715042.0: 2139, 2338763691.0: 2140, 2340490118.0: 2141, 2342449117.0: 2142, 2343694595.0: 2143, 2344997641.0: 2144, 2346421205.0: 2145, 2349561778.0: 2146, 2352539210.0: 2147, 2353128575.0: 2148, 2353814641.0: 2149, 2355983943.0: 2150, 2356311084.0: 2151, 2356439119.0: 2152, 2361367371.0: 2153, 2362068367.0: 2154, 2362232742.0: 2155, 2362442039.0: 2156, 2364746692.0: 2157, 2366512633.0: 2158, 2366696073.0: 2159, 2366793445.0: 2160, 2368865276.0: 2161, 2369317198.0: 2162, 2369620993.0: 2163, 2370163407.0: 2164, 2370316142.0: 2165, 2371008394.0: 2166, 2371194890.0: 2167, 2377805560.0: 2168, 2378191608.0: 2169, 2378984144.0: 2170, 2379083996.0: 2171, 2380222819.0: 2172, 2380708918.0: 2173, 2383004642.0: 2174, 2384475342.0: 2175, 2385233950.0: 2176, 2388211451.0: 2177, 2388618625.0: 2178, 2391491668.0: 2179, 2391810583.0: 2180, 2392131724.0: 2181, 2394264989.0: 2182, 2394796259.0: 2183, 2396319261.0: 2184, 2396705086.0: 2185, 2397135405.0: 2186, 2397265128.0: 2187, 2397862883.0: 2188, 2398969731.0: 2189, 2399815518.0: 2190, 2400098615.0: 2191, 2401590917.0: 2192, 2404599033.0: 2193, 2404799696.0: 2194, 2405042122.0: 2195, 2405393029.0: 2196, 2406105473.0: 2197, 2406313124.0: 2198, 2406587779.0: 2199, 2407645773.0: 2200, 2407957932.0: 2201, 2408017031.0: 2202, 2408240265.0: 2203, 2411003092.0: 2204, 2411256488.0: 2205, 2411469148.0: 2206, 2413330556.0: 2207, 2415816370.0: 2208, 2420882076.0: 2209, 2423467445.0: 2210, 2425072347.0: 2211, 2427282056.0: 2212, 2427835312.0: 2213, 2428723397.0: 2214, 2429795061.0: 2215, 2430860756.0: 2216, 2432545036.0: 2217, 2433203832.0: 2218, 2433863874.0: 2219, 2434113297.0: 2220, 2434296496.0: 2221, 2435166625.0: 2222, 2435642002.0: 2223, 2435666985.0: 2224, 2436228369.0: 2225, 2436665430.0: 2226, 2437532937.0: 2227, 2438445121.0: 2228, 2439019671.0: 2229, 2440124663.0: 2230, 2440588399.0: 2231, 2440839481.0: 2232, 2442846165.0: 2233, 2443317075.0: 2234, 2444230764.0: 2235, 2445995012.0: 2236, 2446668175.0: 2237, 2449010604.0: 2238, 2450040584.0: 2239, 2452189903.0: 2240, 2453082407.0: 2241, 2454590226.0: 2242, 2456510226.0: 2243, 2457018850.0: 2244, 2458246812.0: 2245, 2461333218.0: 2246, 2463505618.0: 2247, 2464080456.0: 2248, 2464751193.0: 2249, 2465294441.0: 2250, 2465426921.0: 2251, 2465863854.0: 2252, 2467525309.0: 2253, 2469603223.0: 2254, 2470055007.0: 2255, 2470367798.0: 2256, 2470770340.0: 2257, 2471197017.0: 2258, 2471698760.0: 2259, 2471980699.0: 2260, 2472355749.0: 2261, 2473810760.0: 2262, 2474111299.0: 2263, 2475706734.0: 2264, 2477368379.0: 2265, 2477885772.0: 2266, 2478423618.0: 2267, 2478481288.0: 2268, 2479659936.0: 2269, 2480185274.0: 2270, 2480701913.0: 2271, 2481539931.0: 2272, 2483640228.0: 2273, 2483805128.0: 2274, 2485377039.0: 2275, 2486231996.0: 2276, 2486685337.0: 2277, 2487149905.0: 2278, 2488780870.0: 2279, 2489246606.0: 2280, 2491229431.0: 2281, 2491695659.0: 2282, 2491715394.0: 2283, 2491770473.0: 2284, 2492036371.0: 2285, 2493136322.0: 2286, 2495897634.0: 2287, 2497141649.0: 2288, 2497405881.0: 2289, 2497771133.0: 2290, 2500871923.0: 2291, 2501830139.0: 2292, 2504402972.0: 2293, 2506704237.0: 2294, 2509757623.0: 2295, 2510203376.0: 2296, 2512311280.0: 2297, 2513121398.0: 2298, 2516117308.0: 2299, 2516717119.0: 2300, 2517481614.0: 2301, 2517730592.0: 2302, 2518001782.0: 2303, 2518457582.0: 2304, 2520415320.0: 2305, 2520488622.0: 2306, 2520674244.0: 2307, 2520856203.0: 2308, 2521331128.0: 2309, 2523713259.0: 2310, 2524016832.0: 2311, 2524294825.0: 2312, 2524714203.0: 2313, 2527325161.0: 2314, 2531034011.0: 2315, 2531697928.0: 2316, 2532776908.0: 2317, 2533398085.0: 2318, 2533480175.0: 2319, 2535385516.0: 2320, 2537686970.0: 2321, 2541210936.0: 2322, 2542680525.0: 2323, 2542826773.0: 2324, 2544805084.0: 2325, 2545843948.0: 2326, 2546815792.0: 2327, 2547521449.0: 2328, 2548461250.0: 2329, 2549640617.0: 2330, 2549764972.0: 2331, 2551552811.0: 2332, 2552222624.0: 2333, 2554255297.0: 2334, 2557312589.0: 2335, 2562420089.0: 2336, 2562906901.0: 2337, 2563630996.0: 2338, 2564386796.0: 2339, 2566199887.0: 2340, 2567449714.0: 2341, 2568411906.0: 2342, 2568612907.0: 2343, 2569266587.0: 2344, 2569718003.0: 2345, 2569719379.0: 2346, 2570104065.0: 2347, 2571363140.0: 2348, 2572031717.0: 2349, 2572530175.0: 2350, 2576643545.0: 2351, 2578203914.0: 2352, 2578229473.0: 2353, 2580175707.0: 2354, 2580311386.0: 2355, 2580330446.0: 2356, 2581630397.0: 2357, 2582591518.0: 2358, 2584736361.0: 2359, 2590690802.0: 2360, 2591555888.0: 2361, 2592367948.0: 2362, 2592587788.0: 2363, 2594614469.0: 2364, 2595979624.0: 2365, 2597511062.0: 2366, 2598851494.0: 2367, 2599367944.0: 2368, 2599598735.0: 2369, 2599964733.0: 2370, 2600168968.0: 2371, 2600647369.0: 2372, 2601289194.0: 2373, 2604999106.0: 2374, 2605470853.0: 2375, 2606321299.0: 2376, 2606600442.0: 2377, 2606779371.0: 2378, 2606780665.0: 2379, 2607111106.0: 2380, 2607851371.0: 2381, 2607926817.0: 2382, 2608206680.0: 2383, 2609566467.0: 2384, 2609702146.0: 2385, 2612186463.0: 2386, 2613101759.0: 2387, 2615922424.0: 2388, 2617357331.0: 2389, 2619070273.0: 2390, 2619668451.0: 2391, 2620413155.0: 2392, 2620519000.0: 2393, 2622227175.0: 2394, 2622401303.0: 2395, 2623619571.0: 2396, 2623648460.0: 2397, 2623892645.0: 2398, 2624100612.0: 2399, 2624346173.0: 2400, 2625469533.0: 2401, 2626030305.0: 2402, 2626858770.0: 2403, 2628583590.0: 2404, 2628835104.0: 2405, 2631862598.0: 2406, 2632595423.0: 2407, 2634484203.0: 2408, 2635011976.0: 2409, 2635679027.0: 2410, 2637376066.0: 2411, 2639316261.0: 2412, 2640970110.0: 2413, 2641178514.0: 2414, 2642979194.0: 2415, 2643521899.0: 2416, 2643896849.0: 2417, 2645087098.0: 2418, 2646547343.0: 2419, 2647353564.0: 2420, 2648596495.0: 2421, 2648802413.0: 2422, 2649729060.0: 2423, 2651503806.0: 2424, 2653824861.0: 2425, 2654552600.0: 2426, 2655455818.0: 2427, 2655456490.0: 2428, 2656921880.0: 2429, 2657478763.0: 2430, 2658284755.0: 2431, 2658593466.0: 2432, 2658869019.0: 2433, 2660250286.0: 2434, 2661381079.0: 2435, 2661785410.0: 2436, 2662638833.0: 2437, 2664698187.0: 2438, 2666810257.0: 2439, 2667164096.0: 2440, 2667625044.0: 2441, 2670176739.0: 2442, 2672507475.0: 2443, 2673902112.0: 2444, 2675309846.0: 2445, 2678536756.0: 2446, 2678573323.0: 2447, 2679895205.0: 2448, 2680739465.0: 2449, 2681083683.0: 2450, 2682009162.0: 2451, 2683202851.0: 2452, 2689327208.0: 2453, 2689366024.0: 2454, 2689860659.0: 2455, 2691039705.0: 2456, 2691644984.0: 2457, 2697269099.0: 2458, 2699479944.0: 2459, 2699591882.0: 2460, 2701069457.0: 2461, 2701477141.0: 2462, 2703048975.0: 2463, 2703591205.0: 2464, 2706278947.0: 2465, 2707261682.0: 2466, 2707267607.0: 2467, 2707400170.0: 2468, 2707768266.0: 2469, 2708236290.0: 2470, 2709330907.0: 2471, 2709715943.0: 2472, 2709955175.0: 2473, 2710039502.0: 2474, 2710371594.0: 2475, 2711602873.0: 2476, 2711907310.0: 2477, 2713663222.0: 2478, 2715757017.0: 2479, 2717579554.0: 2480, 2719136362.0: 2481, 2719674996.0: 2482, 2720004699.0: 2483, 2720085215.0: 2484, 2720820131.0: 2485, 2722714680.0: 2486, 2725231350.0: 2487, 2726156318.0: 2488, 2727639495.0: 2489, 2728067082.0: 2490, 2729241657.0: 2491, 2730082357.0: 2492, 2730346585.0: 2493, 2730805868.0: 2494, 2733506357.0: 2495, 2733965895.0: 2496, 2734499641.0: 2497, 2735403732.0: 2498, 2736427024.0: 2499, 2736469675.0: 2500, 2736777410.0: 2501, 2737493595.0: 2502, 2738317424.0: 2503, 2739354229.0: 2504, 2739545019.0: 2505, 2739589252.0: 2506, 2739801837.0: 2507, 2741188988.0: 2508, 2742277628.0: 2509, 2744413649.0: 2510, 2746006871.0: 2511, 2746497275.0: 2512, 2747549118.0: 2513, 2747667062.0: 2514, 2747941715.0: 2515, 2750704398.0: 2516, 2750958962.0: 2517, 2750959855.0: 2518, 2751991110.0: 2519, 2752670610.0: 2520, 2753434085.0: 2521, 2754024605.0: 2522, 2754078626.0: 2523, 2754494293.0: 2524, 2755385868.0: 2525, 2756121154.0: 2526, 2756589962.0: 2527, 2758946011.0: 2528, 2761263467.0: 2529, 2761266422.0: 2530, 2762772878.0: 2531, 2764142926.0: 2532, 2764865873.0: 2533, 2765307249.0: 2534, 2766907127.0: 2535, 2769118989.0: 2536, 2769376475.0: 2537, 2769918390.0: 2538, 2774524770.0: 2539, 2775727682.0: 2540, 2775868728.0: 2541, 2778252894.0: 2542, 2778919589.0: 2543, 2779007060.0: 2544, 2779193916.0: 2545, 2779319925.0: 2546, 2780899360.0: 2547, 2781875264.0: 2548, 2782135340.0: 2549, 2783868203.0: 2550, 2784607710.0: 2551, 2785127451.0: 2552, 2785374834.0: 2553, 2785576915.0: 2554, 2786123714.0: 2555, 2787331642.0: 2556, 2789062986.0: 2557, 2789526119.0: 2558, 2791418564.0: 2559, 2791866636.0: 2560, 2792391958.0: 2561, 2793399369.0: 2562, 2793946784.0: 2563, 2796744128.0: 2564, 2799080703.0: 2565, 2799739679.0: 2566, 2800211334.0: 2567, 2801437487.0: 2568, 2802566592.0: 2569, 2804005905.0: 2570, 2804294769.0: 2571, 2805579818.0: 2572, 2808488599.0: 2573, 2808748406.0: 2574, 2808919996.0: 2575, 2811414664.0: 2576, 2812857202.0: 2577, 2814805365.0: 2578, 2815329726.0: 2579, 2816374791.0: 2580, 2816569178.0: 2581, 2816580709.0: 2582, 2816756988.0: 2583, 2818726102.0: 2584, 2819193565.0: 2585, 2819380241.0: 2586, 2819431629.0: 2587, 2824058514.0: 2588, 2824606336.0: 2589, 2824646512.0: 2590, 2826882123.0: 2591, 2827339412.0: 2592, 2827871210.0: 2593, 2829009493.0: 2594, 2829347963.0: 2595, 2829782308.0: 2596, 2830372543.0: 2597, 2832281892.0: 2598, 2834527713.0: 2599, 2836360024.0: 2600, 2837253447.0: 2601, 2837895878.0: 2602, 2838163179.0: 2603, 2839209832.0: 2604, 2839464510.0: 2605, 2840046755.0: 2606, 2840295294.0: 2607, 2841562337.0: 2608, 2842318019.0: 2609, 2842423928.0: 2610, 2842903360.0: 2611, 2844045277.0: 2612, 2845996972.0: 2613, 2847573888.0: 2614, 2847779493.0: 2615, 2847945441.0: 2616, 2849600019.0: 2617, 2849825568.0: 2618, 2851738738.0: 2619, 2852697411.0: 2620, 2855550297.0: 2621, 2857530261.0: 2622, 2860433436.0: 2623, 2863495808.0: 2624, 2864040888.0: 2625, 2864496383.0: 2626, 2864937165.0: 2627, 2868964522.0: 2628, 2871048576.0: 2629, 2871790287.0: 2630, 2872442137.0: 2631, 2872987376.0: 2632, 2873846546.0: 2633, 2875336591.0: 2634, 2876014545.0: 2635, 2879526747.0: 2636, 2880433418.0: 2637, 2881268267.0: 2638, 2881407338.0: 2639, 2881946029.0: 2640, 2882989887.0: 2641, 2884567658.0: 2642, 2885342540.0: 2643, 2885621779.0: 2644, 2888143166.0: 2645, 2889910328.0: 2646, 2890759577.0: 2647, 2891979537.0: 2648, 2892993772.0: 2649, 2893562624.0: 2650, 2894251635.0: 2651, 2895248832.0: 2652, 2896580652.0: 2653, 2896872884.0: 2654, 2897204637.0: 2655, 2897490628.0: 2656, 2898174155.0: 2657, 2898405651.0: 2658, 2898866776.0: 2659, 2899301186.0: 2660, 2899406386.0: 2661, 2899512691.0: 2662, 2900883944.0: 2663, 2902113517.0: 2664, 2903624545.0: 2665, 2903704581.0: 2666, 2904219045.0: 2667, 2904322927.0: 2668, 2904398404.0: 2669, 2904807645.0: 2670, 2907524691.0: 2671, 2908354880.0: 2672, 2911737383.0: 2673, 2912005001.0: 2674, 2913909972.0: 2675, 2914926957.0: 2676, 2916026328.0: 2677, 2916186854.0: 2678, 2919642721.0: 2679, 2919686917.0: 2680, 2922014906.0: 2681, 2922205220.0: 2682, 2923363673.0: 2683, 2924158687.0: 2684, 2924678695.0: 2685, 2924946289.0: 2686, 2925148863.0: 2687, 2925460358.0: 2688, 2925702977.0: 2689, 2926795533.0: 2690, 2928063906.0: 2691, 2929184875.0: 2692, 2931078666.0: 2693, 2932895420.0: 2694, 2933343129.0: 2695, 2933675357.0: 2696, 2936316395.0: 2697, 2936512478.0: 2698, 2937260114.0: 2699, 2939279001.0: 2700, 2940105355.0: 2701, 2941044484.0: 2702, 2942067708.0: 2703, 2942359764.0: 2704, 2942406664.0: 2705, 2944246750.0: 2706, 2945185121.0: 2707, 2946929641.0: 2708, 2950162159.0: 2709, 2950285990.0: 2710, 2950703091.0: 2711, 2951217805.0: 2712, 2954962198.0: 2713, 2955415262.0: 2714, 2955929866.0: 2715, 2956230992.0: 2716, 2957059017.0: 2717, 2957376928.0: 2718, 2957510657.0: 2719, 2959634945.0: 2720, 2960180025.0: 2721, 2960221570.0: 2722, 2960399696.0: 2723, 2962107206.0: 2724, 2963250844.0: 2725, 2963388097.0: 2726, 2963708900.0: 2727, 2965521234.0: 2728, 2966042464.0: 2729, 2968535290.0: 2730, 2969540675.0: 2731, 2970443767.0: 2732, 2971020684.0: 2733, 2971100496.0: 2734, 2971836842.0: 2735, 2974320595.0: 2736, 2975453929.0: 2737, 2979985365.0: 2738, 2980964582.0: 2739, 2981117029.0: 2740, 2983607755.0: 2741, 2984789152.0: 2742, 2985352573.0: 2743, 2986314837.0: 2744, 2986843536.0: 2745, 2987308632.0: 2746, 2987847241.0: 2747, 2988007860.0: 2748, 2988801969.0: 2749, 2989411416.0: 2750, 2989915488.0: 2751, 2990246081.0: 2752, 2991610451.0: 2753, 2993134415.0: 2754, 2993598599.0: 2755, 2994804425.0: 2756, 2995850416.0: 2757, 2997080601.0: 2758, 3000574149.0: 2759, 3001297234.0: 2760, 3005224442.0: 2761, 3008094638.0: 2762, 3008245351.0: 2763, 3014102974.0: 2764, 3014589177.0: 2765, 3016274997.0: 2766, 3016737452.0: 2767, 3018853287.0: 2768, 3020389997.0: 2769, 3022252670.0: 2770, 3022292685.0: 2771, 3023181851.0: 2772, 3023628700.0: 2773, 3023933774.0: 2774, 3024998883.0: 2775, 3025472753.0: 2776, 3029772134.0: 2777, 3030517429.0: 2778, 3030741036.0: 2779, 3032428836.0: 2780, 3040780415.0: 2781, 3041442728.0: 2782, 3043645833.0: 2783, 3045772417.0: 2784, 3048338677.0: 2785, 3048531164.0: 2786, 3050182144.0: 2787, 3050439449.0: 2788, 3055333023.0: 2789, 3055450497.0: 2790, 3055521962.0: 2791, 3055895498.0: 2792, 3057762356.0: 2793, 3058127549.0: 2794, 3058656691.0: 2795, 3060175519.0: 2796, 3061574037.0: 2797, 3062202553.0: 2798, 3062940704.0: 2799, 3063748964.0: 2800, 3064330937.0: 2801, 3064448124.0: 2802, 3065881256.0: 2803, 3066535974.0: 2804, 3066877870.0: 2805, 3069391820.0: 2806, 3069908658.0: 2807, 3072132896.0: 2808, 3072378659.0: 2809, 3072707608.0: 2810, 3072866745.0: 2811, 3073464827.0: 2812, 3074493438.0: 2813, 3074804423.0: 2814, 3074965350.0: 2815, 3075268879.0: 2816, 3076080969.0: 2817, 3078640485.0: 2818, 3079822426.0: 2819, 3080553699.0: 2820, 3081733963.0: 2821, 3082633998.0: 2822, 3082930902.0: 2823, 3082983811.0: 2824, 3083558909.0: 2825, 3083629272.0: 2826, 3086113413.0: 2827, 3087429710.0: 2828, 3088286197.0: 2829, 3089003604.0: 2830, 3091632470.0: 2831, 3091942418.0: 2832, 3093703322.0: 2833, 3093931367.0: 2834, 3094829379.0: 2835, 3095721976.0: 2836, 3096955979.0: 2837, 3097287311.0: 2838, 3099268060.0: 2839, 3099400877.0: 2840, 3106272459.0: 2841, 3109727304.0: 2842, 3110289617.0: 2843, 3110521660.0: 2844, 3113070031.0: 2845, 3113799804.0: 2846, 3113854241.0: 2847, 3115872486.0: 2848, 3116797714.0: 2849, 3119755659.0: 2850, 3120429769.0: 2851, 3120669009.0: 2852, 3120880003.0: 2853, 3123468593.0: 2854, 3124050291.0: 2855, 3125620564.0: 2856, 3126799833.0: 2857, 3127156426.0: 2858, 3127163158.0: 2859, 3127436477.0: 2860, 3129957520.0: 2861, 3130872751.0: 2862, 3134874838.0: 2863, 3135206655.0: 2864, 3135463854.0: 2865, 3135470643.0: 2866, 3135641980.0: 2867, 3135697053.0: 2868, 3136840268.0: 2869, 3137187205.0: 2870, 3137957794.0: 2871, 3140032058.0: 2872, 3144083807.0: 2873, 3144130947.0: 2874, 3144977335.0: 2875, 3145740619.0: 2876, 3146729606.0: 2877, 3148282136.0: 2878, 3148819871.0: 2879, 3149258068.0: 2880, 3152018221.0: 2881, 3152418424.0: 2882, 3152950022.0: 2883, 3154040976.0: 2884, 3154290935.0: 2885, 3154849094.0: 2886, 3158081706.0: 2887, 3158626851.0: 2888, 3160055547.0: 2889, 3162765087.0: 2890, 3163279969.0: 2891, 3165798196.0: 2892, 3165891132.0: 2893, 3166442365.0: 2894, 3167436033.0: 2895, 3167577723.0: 2896, 3168091754.0: 2897, 3168796915.0: 2898, 3168963743.0: 2899, 3170190442.0: 2900, 3171229860.0: 2901, 3171515663.0: 2902, 3172154375.0: 2903, 3173051213.0: 2904, 3174230464.0: 2905, 3174370836.0: 2906, 3174835676.0: 2907, 3175557538.0: 2908, 3176466635.0: 2909, 3176725866.0: 2910, 3176932099.0: 2911, 3177782682.0: 2912, 3177997640.0: 2913, 3179454038.0: 2914, 3180016772.0: 2915, 3180060005.0: 2916, 3180242359.0: 2917, 3182497285.0: 2918, 3182604518.0: 2919, 3182928079.0: 2920, 3184004144.0: 2921, 3185744009.0: 2922, 3188622536.0: 2923, 3189961067.0: 2924, 3191302225.0: 2925, 3191674160.0: 2926, 3194610965.0: 2927, 3195086903.0: 2928, 3195682547.0: 2929, 3196713417.0: 2930, 3197124304.0: 2931, 3197337651.0: 2932, 3199466035.0: 2933, 3200600390.0: 2934, 3201676543.0: 2935, 3202378198.0: 2936, 3202991524.0: 2937, 3203732581.0: 2938, 3204099364.0: 2939, 3204735358.0: 2940, 3205230211.0: 2941, 3207298474.0: 2942, 3207311251.0: 2943, 3208150907.0: 2944, 3210165006.0: 2945, 3212030029.0: 2946, 3212723692.0: 2947, 3214086113.0: 2948, 3214231354.0: 2949, 3217925566.0: 2950, 3218136756.0: 2951, 3219731425.0: 2952, 3219936942.0: 2953, 3220834386.0: 2954, 3222943670.0: 2955, 3223032077.0: 2956, 3223518350.0: 2957, 3223844789.0: 2958, 3224308015.0: 2959, 3224791405.0: 2960, 3225755013.0: 2961, 3226149542.0: 2962, 3226194329.0: 2963, 3226406896.0: 2964, 3227416031.0: 2965, 3227830338.0: 2966, 3231018188.0: 2967, 3231364213.0: 2968, 3232282589.0: 2969, 3233444760.0: 2970, 3233806453.0: 2971, 3233830026.0: 2972, 3234179349.0: 2973, 3236224969.0: 2974, 3237308947.0: 2975, 3237563503.0: 2976, 3239616572.0: 2977, 3239659799.0: 2978, 3239812617.0: 2979, 3241496572.0: 2980, 3242222123.0: 2981, 3244401161.0: 2982, 3246184707.0: 2983, 3246232031.0: 2984, 3248105970.0: 2985, 3248671279.0: 2986, 3250229822.0: 2987, 3251365688.0: 2988, 3254527524.0: 2989, 3255059464.0: 2990, 3255660480.0: 2991, 3259992894.0: 2992, 3260120142.0: 2993, 3261350615.0: 2994, 3261950239.0: 2995, 3265803027.0: 2996, 3266565194.0: 2997, 3266757731.0: 2998, 3268661909.0: 2999, 3269229428.0: 3000, 3269339332.0: 3001, 3271586488.0: 3002, 3272460982.0: 3003, 3273972456.0: 3004, 3275040909.0: 3005, 3275399640.0: 3006, 3276946535.0: 3007, 3278210927.0: 3008, 3279515789.0: 3009, 3280820577.0: 3010, 3281098736.0: 3011, 3281714984.0: 3012, 3282384419.0: 3013, 3283270915.0: 3014, 3283377177.0: 3015, 3284405878.0: 3016, 3285023537.0: 3017, 3286529142.0: 3018, 3287700767.0: 3019, 3289691284.0: 3020, 3293126385.0: 3021, 3293368632.0: 3022, 3293708430.0: 3023, 3294162068.0: 3024, 3295513314.0: 3025, 3295524513.0: 3026, 3296352633.0: 3027, 3297002958.0: 3028, 3299461743.0: 3029, 3299965783.0: 3030, 3301503546.0: 3031, 3301934243.0: 3032, 3302979866.0: 3033, 3305155846.0: 3034, 3305735886.0: 3035, 3306282719.0: 3036, 3307098402.0: 3037, 3308342774.0: 3038, 3310840517.0: 3039, 3312025617.0: 3040, 3312698201.0: 3041, 3313903199.0: 3042, 3315917455.0: 3043, 3316903133.0: 3044, 3317569164.0: 3045, 3318085386.0: 3046, 3319664723.0: 3047, 3319994820.0: 3048, 3322572641.0: 3049, 3323010330.0: 3050, 3324350780.0: 3051, 3324720315.0: 3052, 3327113029.0: 3053, 3328107135.0: 3054, 3329527054.0: 3055, 3331449405.0: 3056, 3331966787.0: 3057, 3332781049.0: 3058, 3333885171.0: 3059, 3333975468.0: 3060, 3335336179.0: 3061, 3337581622.0: 3062, 3338137067.0: 3063, 3340946409.0: 3064, 3341161856.0: 3065, 3341343132.0: 3066, 3341762120.0: 3067, 3343043894.0: 3068, 3343258463.0: 3069, 3343528876.0: 3070, 3343857815.0: 3071, 3344674164.0: 3072, 3345957527.0: 3073, 3346214342.0: 3074, 3346421012.0: 3075, 3346527151.0: 3076, 3348400246.0: 3077, 3349261170.0: 3078, 3349703948.0: 3079, 3350040723.0: 3080, 3351606212.0: 3081, 3354882156.0: 3082, 3354962133.0: 3083, 3355660776.0: 3084, 3356286485.0: 3085, 3357653149.0: 3086, 3357750513.0: 3087, 3358346556.0: 3088, 3359592429.0: 3089, 3361990046.0: 3090, 3362555073.0: 3091, 3363078363.0: 3092, 3363403130.0: 3093, 3364568300.0: 3094, 3366131270.0: 3095, 3366906903.0: 3096, 3366913340.0: 3097, 3369199443.0: 3098, 3369594402.0: 3099, 3370870328.0: 3100, 3371999944.0: 3101, 3372856414.0: 3102, 3373023155.0: 3103, 3374694909.0: 3104, 3375388871.0: 3105, 3376031142.0: 3106, 3376621112.0: 3107, 3381578079.0: 3108, 3384068773.0: 3109, 3384965584.0: 3110, 3386016873.0: 3111, 3388089587.0: 3112, 3388829325.0: 3113, 3388841394.0: 3114, 3389132850.0: 3115, 3389942341.0: 3116, 3390274056.0: 3117, 3391609819.0: 3118, 3392290434.0: 3119, 3392526678.0: 3120, 3392602043.0: 3121, 3393629630.0: 3122, 3394386013.0: 3123, 3394966421.0: 3124, 3396031966.0: 3125, 3396218124.0: 3126, 3398233587.0: 3127, 3400568921.0: 3128, 3400941203.0: 3129, 3401287325.0: 3130, 3402579110.0: 3131, 3403511961.0: 3132, 3404048415.0: 3133, 3405227808.0: 3134, 3406141537.0: 3135, 3406648588.0: 3136, 3409686588.0: 3137, 3410223797.0: 3138, 3411914349.0: 3139, 3414665956.0: 3140, 3415007991.0: 3141, 3417610922.0: 3142, 3418039275.0: 3143, 3419147671.0: 3144, 3419541244.0: 3145, 3420400091.0: 3146, 3421664508.0: 3147, 3422104318.0: 3148, 3423493940.0: 3149, 3423517629.0: 3150, 3428144623.0: 3151, 3428880661.0: 3152, 3431399901.0: 3153, 3433569545.0: 3154, 3434278338.0: 3155, 3435000864.0: 3156, 3435499378.0: 3157, 3436759995.0: 3158, 3436797619.0: 3159, 3437822864.0: 3160, 3438929926.0: 3161, 3439759815.0: 3162, 3439802236.0: 3163, 3440833283.0: 3164, 3441395268.0: 3165, 3442335021.0: 3166, 3442608613.0: 3167, 3442923404.0: 3168, 3443522628.0: 3169, 3445018963.0: 3170, 3445103951.0: 3171, 3445308322.0: 3172, 3446658091.0: 3173, 3447419352.0: 3174, 3448269830.0: 3175, 3453371012.0: 3176, 3453834304.0: 3177, 3454291109.0: 3178, 3454292280.0: 3179, 3454560985.0: 3180, 3455144243.0: 3181, 3455753491.0: 3182, 3458036338.0: 3183, 3460381767.0: 3184, 3460826596.0: 3185, 3460882797.0: 3186, 3461865919.0: 3187, 3462527914.0: 3188, 3462688839.0: 3189, 3463659503.0: 3190, 3464704299.0: 3191, 3465190745.0: 3192, 3466499511.0: 3193, 3466584298.0: 3194, 3466781849.0: 3195, 3468640368.0: 3196, 3472130333.0: 3197, 3472965848.0: 3198, 3473809799.0: 3199, 3474539714.0: 3200, 3476934529.0: 3201, 3477166876.0: 3202, 3477184960.0: 3203, 3477896324.0: 3204, 3478293492.0: 3205, 3480250837.0: 3206, 3480830493.0: 3207, 3481707041.0: 3208, 3482385629.0: 3209, 3483101721.0: 3210, 3485673486.0: 3211, 3488020725.0: 3212, 3490510166.0: 3213, 3491828967.0: 3214, 3492187271.0: 3215, 3496707882.0: 3216, 3496815072.0: 3217, 3499489310.0: 3218, 3504758732.0: 3219, 3504778483.0: 3220, 3505804879.0: 3221, 3506586340.0: 3222, 3508006740.0: 3223, 3510893297.0: 3224, 3514283392.0: 3225, 3514356959.0: 3226, 3515813430.0: 3227, 3515878829.0: 3228, 3517084911.0: 3229, 3518506759.0: 3230, 3519864675.0: 3231, 3519979361.0: 3232, 3520177257.0: 3233, 3521614729.0: 3234, 3521926888.0: 3235, 3521978177.0: 3236, 3522507318.0: 3237, 3523893147.0: 3238, 3525224736.0: 3239, 3525345661.0: 3240, 3526240202.0: 3241, 3527843628.0: 3242, 3529036788.0: 3243, 3531099877.0: 3244, 3533705898.0: 3245, 3533928642.0: 3246, 3534634723.0: 3247, 3535707947.0: 3248, 3536066714.0: 3249, 3536404413.0: 3250, 3536938924.0: 3251, 3537321174.0: 3252, 3538982076.0: 3253, 3538989675.0: 3254, 3539897672.0: 3255, 3541392132.0: 3256, 3542098955.0: 3257, 3542415970.0: 3258, 3542683587.0: 3259, 3542994682.0: 3260, 3543984794.0: 3261, 3544195796.0: 3262, 3544513725.0: 3263, 3544779036.0: 3264, 3547447844.0: 3265, 3547667533.0: 3266, 3548913976.0: 3267, 3549602912.0: 3268, 3549608445.0: 3269, 3549945010.0: 3270, 3550388097.0: 3271, 3550525404.0: 3272, 3551193265.0: 3273, 3551240472.0: 3274, 3551334354.0: 3275, 3556677982.0: 3276, 3558054935.0: 3277, 3558398036.0: 3278, 3558606397.0: 3279, 3558711430.0: 3280, 3559181573.0: 3281, 3559777997.0: 3282, 3559938278.0: 3283, 3560966883.0: 3284, 3561873426.0: 3285, 3564674845.0: 3286, 3565245048.0: 3287, 3566427463.0: 3288, 3568012737.0: 3289, 3568502893.0: 3290, 3569427168.0: 3291, 3569771777.0: 3292, 3569822888.0: 3293, 3570234309.0: 3294, 3573506169.0: 3295, 3575497442.0: 3296, 3576214423.0: 3297, 3576388405.0: 3298, 3577026541.0: 3299, 3577996243.0: 3300, 3580398176.0: 3301, 3582230948.0: 3302, 3583783068.0: 3303, 3583866482.0: 3304, 3584679043.0: 3305, 3584810159.0: 3306, 3585183767.0: 3307, 3587095771.0: 3308, 3587398450.0: 3309, 3588935587.0: 3310, 3589937071.0: 3311, 3590485379.0: 3312, 3591069259.0: 3313, 3591340066.0: 3314, 3591704774.0: 3315, 3592057241.0: 3316, 3592599475.0: 3317, 3594297175.0: 3318, 3595156149.0: 3319, 3597359252.0: 3320, 3598330701.0: 3321, 3598768984.0: 3322, 3598815985.0: 3323, 3599092593.0: 3324, 3599573257.0: 3325, 3600882554.0: 3326, 3601030008.0: 3327, 3602384480.0: 3328, 3605910477.0: 3329, 3610496771.0: 3330, 3612035230.0: 3331, 3612554405.0: 3332, 3613003014.0: 3333, 3613471055.0: 3334, 3617296982.0: 3335, 3617878321.0: 3336, 3619831805.0: 3337, 3621424837.0: 3338, 3621911326.0: 3339, 3623369735.0: 3340, 3624112509.0: 3341, 3627441151.0: 3342, 3627631133.0: 3343, 3628857234.0: 3344, 3629343844.0: 3345, 3630604446.0: 3346, 3631911752.0: 3347, 3633104375.0: 3348, 3633938798.0: 3349, 3636067182.0: 3350, 3636184491.0: 3351, 3637565049.0: 3352, 3638491696.0: 3353, 3639023461.0: 3354, 3639554587.0: 3355, 3639981786.0: 3356, 3640723191.0: 3357, 3642852337.0: 3358, 3643860487.0: 3359, 3643933962.0: 3360, 3644078190.0: 3361, 3645956312.0: 3362, 3646176945.0: 3363, 3646753321.0: 3364, 3648285595.0: 3365, 3649617047.0: 3366, 3649985933.0: 3367, 3652421276.0: 3368, 3654316815.0: 3369, 3654770218.0: 3370, 3656276818.0: 3371, 3658757267.0: 3372, 3658939383.0: 3373, 3659180754.0: 3374, 3659632793.0: 3375, 3660108714.0: 3376, 3661137690.0: 3377, 3663872460.0: 3378, 3666519729.0: 3379, 3667303199.0: 3380, 3668544578.0: 3381, 3668929880.0: 3382, 3669586427.0: 3383, 3672063799.0: 3384, 3675676289.0: 3385, 3676271945.0: 3386, 3676479912.0: 3387, 3679079695.0: 3388, 3680860305.0: 3389, 3681068154.0: 3390, 3682562966.0: 3391, 3684786362.0: 3392, 3685278987.0: 3393, 3687127429.0: 3394, 3687375828.0: 3395, 3688259236.0: 3396, 3689930103.0: 3397, 3691502652.0: 3398, 3692214159.0: 3399, 3693820505.0: 3400, 3694316943.0: 3401, 3694755430.0: 3402, 3695991684.0: 3403, 3696190897.0: 3404, 3697612569.0: 3405, 3699088024.0: 3406, 3700443234.0: 3407, 3701282590.0: 3408, 3701811149.0: 3409, 3703175676.0: 3410, 3703583035.0: 3411, 3703906578.0: 3412, 3704902724.0: 3413, 3705587275.0: 3414, 3706204924.0: 3415, 3706724235.0: 3416, 3707250821.0: 3417, 3710132124.0: 3418, 3710368476.0: 3419, 3711110607.0: 3420, 3713352451.0: 3421, 3715532768.0: 3422, 3715756170.0: 3423, 3718214799.0: 3424, 3718924822.0: 3425, 3719494446.0: 3426, 3720056425.0: 3427, 3720628315.0: 3428, 3721704930.0: 3429, 3726261713.0: 3430, 3727953673.0: 3431, 3728341672.0: 3432, 3728549057.0: 3433, 3728594942.0: 3434, 3729237163.0: 3435, 3730049494.0: 3436, 3730439287.0: 3437, 3731364999.0: 3438, 3731669742.0: 3439, 3731711061.0: 3440, 3732173782.0: 3441, 3733167947.0: 3442, 3735373626.0: 3443, 3736510930.0: 3444, 3736771123.0: 3445, 3739107973.0: 3446, 3741132004.0: 3447, 3742255691.0: 3448, 3747291670.0: 3449, 3747783109.0: 3450, 3748490065.0: 3451, 3749901826.0: 3452, 3750417276.0: 3453, 3751310019.0: 3454, 3753066025.0: 3455, 3755344306.0: 3456, 3755592406.0: 3457, 3756842154.0: 3458, 3756848207.0: 3459, 3757327735.0: 3460, 3758548601.0: 3461, 3758597843.0: 3462, 3759522357.0: 3463, 3759596543.0: 3464, 3759790394.0: 3465, 3760195279.0: 3466, 3762042137.0: 3467, 3762566700.0: 3468, 3762632492.0: 3469, 3765350774.0: 3470, 3765501358.0: 3471, 3767077211.0: 3472, 3770240634.0: 3473, 3772720959.0: 3474, 3772866132.0: 3475, 3774702586.0: 3476, 3774831935.0: 3477, 3775217321.0: 3478, 3775563800.0: 3479, 3776361910.0: 3480, 3777182086.0: 3481, 3778849336.0: 3482, 3779462685.0: 3483, 3779567782.0: 3484, 3780068654.0: 3485, 3782036215.0: 3486, 3782307187.0: 3487, 3782385215.0: 3488, 3782623318.0: 3489, 3782943821.0: 3490, 3785212826.0: 3491, 3785365643.0: 3492, 3785677695.0: 3493, 3785948419.0: 3494, 3789223139.0: 3495, 3789271821.0: 3496, 3789713253.0: 3497, 3793188453.0: 3498, 3793841264.0: 3499, 3794069405.0: 3500, 3795520422.0: 3501, 3795916938.0: 3502, 3796076096.0: 3503, 3797633890.0: 3504, 3798889979.0: 3505, 3801717094.0: 3506, 3803833190.0: 3507, 3805297998.0: 3508, 3808417706.0: 3509, 3809274718.0: 3510, 3810627030.0: 3511, 3810846873.0: 3512, 3811443243.0: 3513, 3811638799.0: 3514, 3811806636.0: 3515, 3812086570.0: 3516, 3812218311.0: 3517, 3812465172.0: 3518, 3812851952.0: 3519, 3814314776.0: 3520, 3816428641.0: 3521, 3816969983.0: 3522, 3818720596.0: 3523, 3819335471.0: 3524, 3820907317.0: 3525, 3821228212.0: 3526, 3822812611.0: 3527, 3824860641.0: 3528, 3825925589.0: 3529, 3828619009.0: 3530, 3829218505.0: 3531, 3829646898.0: 3532, 3830000768.0: 3533, 3830204879.0: 3534, 3830472205.0: 3535, 3830714846.0: 3536, 3831574343.0: 3537, 3832594901.0: 3538, 3832835038.0: 3539, 3837180378.0: 3540, 3837636382.0: 3541, 3839078188.0: 3542, 3839603023.0: 3543, 3840985421.0: 3544, 3843004318.0: 3545, 3845014105.0: 3546, 3845136817.0: 3547, 3847006313.0: 3548, 3847671743.0: 3549, 3849088900.0: 3550, 3849589108.0: 3551, 3850023548.0: 3552, 3850563082.0: 3553, 3854687190.0: 3554, 3856257758.0: 3555, 3857592015.0: 3556, 3857997183.0: 3557, 3858127103.0: 3558, 3860638058.0: 3559, 3860814374.0: 3560, 3861020983.0: 3561, 3865529345.0: 3562, 3866519649.0: 3563, 3866849711.0: 3564, 3866925865.0: 3565, 3867106553.0: 3566, 3869110083.0: 3567, 3869589445.0: 3568, 3870765306.0: 3569, 3872522521.0: 3570, 3874490243.0: 3571, 3874963554.0: 3572, 3875213639.0: 3573, 3875528506.0: 3574, 3875763567.0: 3575, 3880552970.0: 3576, 3882558048.0: 3577, 3886361555.0: 3578, 3888050462.0: 3579, 3888402515.0: 3580, 3890531650.0: 3581, 3894325544.0: 3582, 3897828174.0: 3583, 3900665764.0: 3584, 3901423845.0: 3585, 3901690745.0: 3586, 3902795456.0: 3587, 3902802594.0: 3588, 3904685107.0: 3589, 3906668252.0: 3590, 3907607989.0: 3591, 3911784395.0: 3592, 3913183886.0: 3593, 3913300700.0: 3594, 3913879828.0: 3595, 3915012494.0: 3596, 3915181501.0: 3597, 3916552748.0: 3598, 3916634276.0: 3599, 3916760133.0: 3600, 3917859985.0: 3601, 3918166322.0: 3602, 3918987832.0: 3603, 3919987521.0: 3604, 3920009685.0: 3605, 3920860263.0: 3606, 3923160060.0: 3607, 3925770582.0: 3608, 3926402846.0: 3609, 3929283284.0: 3610, 3929404415.0: 3611, 3932489446.0: 3612, 3932563244.0: 3613, 3932823300.0: 3614, 3933024744.0: 3615, 3934634375.0: 3616, 3935151913.0: 3617, 3935410823.0: 3618, 3935814141.0: 3619, 3937395692.0: 3620, 3937938201.0: 3621, 3939260490.0: 3622, 3939595751.0: 3623, 3940110489.0: 3624, 3941414019.0: 3625, 3942800108.0: 3626, 3943072901.0: 3627, 3944371172.0: 3628, 3944540119.0: 3629, 3946035740.0: 3630, 3946234574.0: 3631, 3947469697.0: 3632, 3948150101.0: 3633, 3949359461.0: 3634, 3949363802.0: 3635, 3949684907.0: 3636, 3949963666.0: 3637, 3950660811.0: 3638, 3951114871.0: 3639, 3952257974.0: 3640, 3952451460.0: 3641, 3956547500.0: 3642, 3957711553.0: 3643, 3957723533.0: 3644, 3958090115.0: 3645, 3958179657.0: 3646, 3959786079.0: 3647, 3960190332.0: 3648, 3960965330.0: 3649, 3964363795.0: 3650, 3964535660.0: 3651, 3965362284.0: 3652, 3965388503.0: 3653, 3965615621.0: 3654, 3966197871.0: 3655, 3966204797.0: 3656, 3966738165.0: 3657, 3966837710.0: 3658, 3967221431.0: 3659, 3967861584.0: 3660, 3968155343.0: 3661, 3968630616.0: 3662, 3971349961.0: 3663, 3971603381.0: 3664, 3972160863.0: 3665, 3972527145.0: 3666, 3973446422.0: 3667, 3974954606.0: 3668, 3976715037.0: 3669, 3980152537.0: 3670, 3982089933.0: 3671, 3983408484.0: 3672, 3983782332.0: 3673, 3984940203.0: 3674, 3988566526.0: 3675, 3990220544.0: 3676, 3990905648.0: 3677, 3992291865.0: 3678, 3992739486.0: 3679, 3992936619.0: 3680, 3993550133.0: 3681, 3993967844.0: 3682, 3994151828.0: 3683, 3994599516.0: 3684, 3994820149.0: 3685, 3994999997.0: 3686, 3995990117.0: 3687, 3995991749.0: 3688, 3997488082.0: 3689, 3998384489.0: 3690, 4002628943.0: 3691, 4003381022.0: 3692, 4005261285.0: 3693, 4006265089.0: 3694, 4006305228.0: 3695, 4006439885.0: 3696, 4006496775.0: 3697, 4007547006.0: 3698, 4008164651.0: 3699, 4011385654.0: 3700, 4011970268.0: 3701, 4016327986.0: 3702, 4016721627.0: 3703, 4018099021.0: 3704, 4019988628.0: 3705, 4020380166.0: 3706, 4020835853.0: 3707, 4024328058.0: 3708, 4024350363.0: 3709, 4024620896.0: 3710, 4024803833.0: 3711, 4025625305.0: 3712, 4028323944.0: 3713, 4031914069.0: 3714, 4032498589.0: 3715, 4033188512.0: 3716, 4033538925.0: 3717, 4034521532.0: 3718, 4036053107.0: 3719, 4036670627.0: 3720, 4037584166.0: 3721, 4037778195.0: 3722, 4038827669.0: 3723, 4038947328.0: 3724, 4040220600.0: 3725, 4044535914.0: 3726, 4046852154.0: 3727, 4046977297.0: 3728, 4047218740.0: 3729, 4048237524.0: 3730, 4048491023.0: 3731, 4050255041.0: 3732, 4051469303.0: 3733, 4052758948.0: 3734, 4053017144.0: 3735, 4054362658.0: 3736, 4055463683.0: 3737, 4055579619.0: 3738, 4055615708.0: 3739, 4058102500.0: 3740, 4058458221.0: 3741, 4059196660.0: 3742, 4060558193.0: 3743, 4061752237.0: 3744, 4062033348.0: 3745, 4062743389.0: 3746, 4064857108.0: 3747, 4066240049.0: 3748, 4066733706.0: 3749, 4066885794.0: 3750, 4067449322.0: 3751, 4067655431.0: 3752, 4067727571.0: 3753, 4068044146.0: 3754, 4068159794.0: 3755, 4068324123.0: 3756, 4069104375.0: 3757, 4070181686.0: 3758, 4073664237.0: 3759, 4074507002.0: 3760, 4075854018.0: 3761, 4076221960.0: 3762, 4076786560.0: 3763, 4078114399.0: 3764, 4078635068.0: 3765, 4080907630.0: 3766, 4081840989.0: 3767, 4082114303.0: 3768, 4084280901.0: 3769, 4084596905.0: 3770, 4085061229.0: 3771, 4086605997.0: 3772, 4086732392.0: 3773, 4087809213.0: 3774, 4088713901.0: 3775, 4093370563.0: 3776, 4093626714.0: 3777, 4096145220.0: 3778, 4097694438.0: 3779, 4098027404.0: 3780, 4098912631.0: 3781, 4101426213.0: 3782, 4103212355.0: 3783, 4104023530.0: 3784, 4104618175.0: 3785, 4105151937.0: 3786, 4105511168.0: 3787, 4108303639.0: 3788, 4108603882.0: 3789, 4108808159.0: 3790, 4109081470.0: 3791, 4110111345.0: 3792, 4110454206.0: 3793, 4111074491.0: 3794, 4111251859.0: 3795, 4111496962.0: 3796, 4111500349.0: 3797, 4112431902.0: 3798, 4113572392.0: 3799, 4117428072.0: 3800, 4117614582.0: 3801, 4118065076.0: 3802, 4119913685.0: 3803, 4120057753.0: 3804, 4120637969.0: 3805, 4120776590.0: 3806, 4121094900.0: 3807, 4123830740.0: 3808, 4124346655.0: 3809, 4129478166.0: 3810, 4133213219.0: 3811, 4134065610.0: 3812, 4136049109.0: 3813, 4137222990.0: 3814, 4137658605.0: 3815, 4138542375.0: 3816, 4138870604.0: 3817, 4140133947.0: 3818, 4142472088.0: 3819, 4144443252.0: 3820, 4146044492.0: 3821, 4146755599.0: 3822, 4147168071.0: 3823, 4147564420.0: 3824, 4148725718.0: 3825, 4149352242.0: 3826, 4150331463.0: 3827, 4152725087.0: 3828, 4152914958.0: 3829, 4153554758.0: 3830, 4155524317.0: 3831, 4157650457.0: 3832, 4158020236.0: 3833, 4161382817.0: 3834, 4161635575.0: 3835, 4163005971.0: 3836, 4163272079.0: 3837, 4164238826.0: 3838, 4166083654.0: 3839, 4166537102.0: 3840, 4166816231.0: 3841, 4167326431.0: 3842, 4167675774.0: 3843, 4167921943.0: 3844, 4168142652.0: 3845, 4172532802.0: 3846, 4173015498.0: 3847, 4173326910.0: 3848, 4177092132.0: 3849, 4177362943.0: 3850, 4178432702.0: 3851, 4179482424.0: 3852, 4180083800.0: 3853, 4180473992.0: 3854, 4182359924.0: 3855, 4183317783.0: 3856, 4183643448.0: 3857, 4183688813.0: 3858, 4185227319.0: 3859, 4187109402.0: 3860, 4187427457.0: 3861, 4189749365.0: 3862, 4191245031.0: 3863, 4192068008.0: 3864, 4192947061.0: 3865, 4193939221.0: 3866, 4194905455.0: 3867, 4195702387.0: 3868, 4195867167.0: 3869, 4196590726.0: 3870, 4197790570.0: 3871, 4198153367.0: 3872, 4198488536.0: 3873, 4199270801.0: 3874, 4199394536.0: 3875, 4199487480.0: 3876, 4199909148.0: 3877, 4202994161.0: 3878, 4203061531.0: 3879, 4203545219.0: 3880, 4206714478.0: 3881, 4207591498.0: 3882, 4209085600.0: 3883, 4211885860.0: 3884, 4212064557.0: 3885, 4216024295.0: 3886, 4218640601.0: 3887, 4218766522.0: 3888, 4219643943.0: 3889, 4220247392.0: 3890, 4223183837.0: 3891, 4224548121.0: 3892, 4225184161.0: 3893, 4226547465.0: 3894, 4229211871.0: 3895, 4229864640.0: 3896, 4230680816.0: 3897, 4233237189.0: 3898, 4234249021.0: 3899, 4234331444.0: 3900, 4236668419.0: 3901, 4238931765.0: 3902, 4240630687.0: 3903, 4241846212.0: 3904, 4245802132.0: 3905, 4246918113.0: 3906, 4247129480.0: 3907, 4247725632.0: 3908, 4248790149.0: 3909, 4249226071.0: 3910, 4250368142.0: 3911, 4250785621.0: 3912, 4251709588.0: 3913, 4253829305.0: 3914, 4254607288.0: 3915, 4255555167.0: 3916, 4255581267.0: 3917, 4256008347.0: 3918, 4256540140.0: 3919, 4257783405.0: 3920, 4258306679.0: 3921, 4259366554.0: 3922, 4259929576.0: 3923, 4260933853.0: 3924, 4261808374.0: 3925, 4262156170.0: 3926, 4263003182.0: 3927, 4264595745.0: 3928, 4267162443.0: 3929, 4267915117.0: 3930, 4268757793.0: 3931, 4270231404.0: 3932, 4270560930.0: 3933, 4273038175.0: 3934, 4273871506.0: 3935, 4274049114.0: 3936, 4275520620.0: 3937, 4276052242.0: 3938, 4277053753.0: 3939, 4277851800.0: 3940, 4278189059.0: 3941, 4278236430.0: 3942, 4278368877.0: 3943, 4278479719.0: 3944, 4280093477.0: 3945, 4280935622.0: 3946, 4281398085.0: 3947, 4281701898.0: 3948, 4283152790.0: 3949, 4284771768.0: 3950, 4286348608.0: 3951, 4289462715.0: 3952, 4289885427.0: 3953, 4291244977.0: 3954, 4292741211.0: 3955, 4292878342.0: 3956, 4293605058.0: 3957, 3705928035.0: 3958, 171603501.0: 3959, 1082709134.0: 3960, 2251344263.0: 3961, 2405657161.0: 3962, 634472695.0: 3963, 1158014302.0: 3964, 574491480.0: 3965, 1863523370.0: 3966, 3954698166.0: 3967, 2016681332.0: 3968, 3101804643.0: 3969, 988880072.0: 3970, 4189234443.0: 3971, 3533165494.0: 3972, 459576900.0: 3973, 3783224222.0: 3974, 1373552536.0: 3975, 1737481942.0: 3976, 2757405801.0: 3977, 1518985770.0: 3978, 2378660884.0: 3979, 3354044394.0: 3980, 4671327.0: 3981, 1678817360.0: 3982, 3393178403.0: 3983, 3555497569.0: 3984, 2129501432.0: 3985, 3861822166.0: 3986, 2530200394.0: 3987, 521329327.0: 3988, 1701549198.0: 3989, 4019055851.0: 3990, 2618135776.0: 3991, 1060432112.0: 3992, 1373779842.0: 3993, 1165746410.0: 3994, 2237722676.0: 3995, 2388288942.0: 3996, 183361712.0: 3997, 742517266.0: 3998, 3629863786.0: 3999, 2055672895.0: 4000, 486037284.0: 4001, 383626161.0: 4002, 308048873.0: 4003, 418243033.0: 4004, 248595987.0: 4005, 2991809638.0: 4006, 1282601454.0: 4007, 1861606864.0: 4008, 1708315239.0: 4009, 2564029923.0: 4010, 3042687353.0: 4011, 1545524255.0: 4012, 1555515190.0: 4013, 926570818.0: 4014, 1455916005.0: 4015, 2840803648.0: 4016, 743631043.0: 4017, 34335603.0: 4018, 2260617109.0: 4019, 453272983.0: 4020, 37405453.0: 4021, 4139054662.0: 4022, 3225828200.0: 4023, 3017296268.0: 4024, 2722419525.0: 4025, 1028539384.0: 4026, 45595289.0: 4027, 3530773934.0: 4028, 1115621860.0: 4029, 1822924082.0: 4030, 3379607147.0: 4031, 2386382788.0: 4032, 1799462318.0: 4033, 2739141452.0: 4034, 3797804456.0: 4035, 1189040136.0: 4036, 1196019087.0: 4037, 1718434818.0: 4038, 4112358899.0: 4039, 772835571.0: 4040, 3902863773.0: 4041, 2710180255.0: 4042, 1203761256.0: 4043, 4207630918.0: 4044, 1841066170.0: 4045, 3247798490.0: 4046, 1847798197.0: 4047, 1537303209.0: 4048, 613142508.0: 4049, 3470986566.0: 4050, 690793157.0: 4051, 3586390778.0: 4052, 277409344.0: 4053, 1474605285.0: 4054, 4133773836.0: 4055, 2446021806.0: 4056, 968551844.0: 4057, 1025994479.0: 4058, 818946985.0: 4059, 1415274112.0: 4060, 4276203739.0: 4061, 3335589213.0: 4062, 977156554.0: 4063, 64720428.0: 4064, 3835132408.0: 4065, 84198746.0: 4066, 3357388236.0: 4067, 3897072167.0: 4068, 3165617149.0: 4069, 235522047.0: 4070, 1017143247.0: 4071, 667687164.0: 4072, 120547460.0: 4073, 1416288314.0: 4074, 3008704536.0: 4075, 1134290931.0: 4076, 2405400344.0: 4077, 766255510.0: 4078, 2881622404.0: 4079, 3858573368.0: 4080, 867561285.0: 4081, 1902423708.0: 4082, 2018127733.0: 4083, 758860193.0: 4084, 3341215423.0: 4085, 3655034315.0: 4086, 538121054.0: 4087, 4257251342.0: 4088, 2734841866.0: 4089, 2050600885.0: 4090, 2798235639.0: 4091, 3341549425.0: 4092, 1365628283.0: 4093, 3925048071.0: 4094, 2762442570.0: 4095, 1026471448.0: 4096, 2109013668.0: 4097, 2882757842.0: 4098, 928492092.0: 4099, 3988924405.0: 4100, 2242635361.0: 4101, 3838552886.0: 4102, 2619083320.0: 4103, 2717025954.0: 4104, 2551006777.0: 4105, 3965872980.0: 4106, 2310613508.0: 4107, 4252638726.0: 4108, 1982904045.0: 4109, 899025613.0: 4110, 1171757041.0: 4111, 3968345816.0: 4112, 854820086.0: 4113, 1943544925.0: 4114, 555617830.0: 4115, 1122405581.0: 4116, 692148667.0: 4117, 3454085610.0: 4118, 4224450352.0: 4119, 2631085882.0: 4120, 3415485471.0: 4121, 1056454499.0: 4122, 2033897728.0: 4123, 1066322696.0: 4124, 2885433817.0: 4125, 3640696908.0: 4126, 3247961270.0: 4127, 1380627215.0: 4128, 3134288402.0: 4129, 3728776245.0: 4130, 1772221596.0: 4131, 3837693652.0: 4132, 251980084.0: 4133, 3957914326.0: 4134, 704039417.0: 4135, 2415546217.0: 4136, 1993860897.0: 4137, 3349579351.0: 4138, 366306464.0: 4139, 198405531.0: 4140, 1366620841.0: 4141, 3869853106.0: 4142, 2440868358.0: 4143, 374560368.0: 4144, 2008170079.0: 4145, 1400947867.0: 4146, 2776596083.0: 4147, 59456903.0: 4148, 253285530.0: 4149, 2712021996.0: 4150, 90294462.0: 4151, 1999616626.0: 4152, 263176461.0: 4153, 2580118161.0: 4154, 1955176736.0: 4155, 3930911178.0: 4156, 2977000070.0: 4157, 2157250512.0: 4158, 565463831.0: 4159, 3234623339.0: 4160, 2810753394.0: 4161, 3740025133.0: 4162, 4292275667.0: 4163, 1435026158.0: 4164, 1777131949.0: 4165, 2737702962.0: 4166, 1285590329.0: 4167, 3192133294.0: 4168, 971312921.0: 4169, 2944804901.0: 4170, 3907004658.0: 4171, 1619338616.0: 4172, 1570010166.0: 4173, 2505534768.0: 4174, 652543764.0: 4175, 3262354747.0: 4176, 1022138232.0: 4177, 360528373.0: 4178, 650493144.0: 4179, 1778533375.0: 4180, 4062991668.0: 4181, 4146576477.0: 4182, 2135766856.0: 4183, 249721993.0: 4184, 1125257795.0: 4185, 1058639480.0: 4186, 2222333651.0: 4187, 2933586839.0: 4188, 1498376914.0: 4189, 3899837824.0: 4190, 70941688.0: 4191, 1801989168.0: 4192, 2941744440.0: 4193, 3246567471.0: 4194, 2375173202.0: 4195, 2749552055.0: 4196, 909654739.0: 4197, 3899110070.0: 4198, 4109286232.0: 4199, 696077546.0: 4200, 3230895574.0: 4201, 879501536.0: 4202, 1553952156.0: 4203, 1714479564.0: 4204, 2205285555.0: 4205, 1331567743.0: 4206, 215172524.0: 4207, 3895168945.0: 4208, 3242743077.0: 4209, 4114960196.0: 4210, 615901105.0: 4211, 289142566.0: 4212, 1117352057.0: 4213, 1349019880.0: 4214, 1108747507.0: 4215, 1413175391.0: 4216, 3483302448.0: 4217, 2363241754.0: 4218, 481128290.0: 4219, 47946298.0: 4220, 3472542303.0: 4221, 1487512912.0: 4222, 4028974031.0: 4223, 1374972286.0: 4224, 3452752266.0: 4225, 2484745562.0: 4226, 4035720057.0: 4227, 579213628.0: 4228, 497640849.0: 4229, 2294285095.0: 4230, 960343599.0: 4231, 3688119781.0: 4232, 1632706100.0: 4233, 452863568.0: 4234, 955492504.0: 4235, 1072296613.0: 4236, 2710559936.0: 4237, 3589419729.0: 4238, 3727740464.0: 4239, 2188853579.0: 4240, 776040156.0: 4241, 1725938793.0: 4242, 304443868.0: 4243, 3685941842.0: 4244, 2384127918.0: 4245, 3456307610.0: 4246, 465547215.0: 4247, 4248322821.0: 4248, 1096431070.0: 4249, 1279457355.0: 4250, 864581089.0: 4251, 3866854032.0: 4252, 1803094096.0: 4253, 1440764458.0: 4254, 1865393783.0: 4255, 777000179.0: 4256, 284473268.0: 4257, 3480131057.0: 4258, 245888358.0: 4259, 1996614799.0: 4260, 3142739321.0: 4261, 3678978403.0: 4262, 3607511859.0: 4263, 3161412729.0: 4264, 859406207.0: 4265, 3100238537.0: 4266, 1811900338.0: 4267, 3726764624.0: 4268, 2159684407.0: 4269, 1296319127.0: 4270, 1445386962.0: 4271, 3707626970.0: 4272, 1664697078.0: 4273, 1202297416.0: 4274, 673968144.0: 4275, 3206973451.0: 4276, 843121821.0: 4277, 728228157.0: 4278, 1296931424.0: 4279, 1326653475.0: 4280, 2446294327.0: 4281, 3693578518.0: 4282, 1414687256.0: 4283, 3006843112.0: 4284, 3613920942.0: 4285, 1246604551.0: 4286, 37773888.0: 4287, 316738834.0: 4288, 2776053357.0: 4289, 1136748276.0: 4290, 1093603388.0: 4291, 2225351374.0: 4292, 1143819814.0: 4293, 981230940.0: 4294, 221510456.0: 4295, 2794929467.0: 4296, 1822523729.0: 4297, 3692796999.0: 4298, 3729541096.0: 4299, 3273897563.0: 4300, 1919885535.0: 4301, 2343552931.0: 4302, 352462344.0: 4303, 2089533360.0: 4304, 82246046.0: 4305, 1452780426.0: 4306, 2620689034.0: 4307, 2834023641.0: 4308, 3986163906.0: 4309, 1785166948.0: 4310, 2282663504.0: 4311, 1768143575.0: 4312, 1512761313.0: 4313, 2589912667.0: 4314, 1409218202.0: 4315, 1428649750.0: 4316, 707893586.0: 4317, 1627453467.0: 4318, 2784470058.0: 4319, 1369736088.0: 4320, 1796225559.0: 4321, 1682338085.0: 4322, 1749181038.0: 4323, 2276431280.0: 4324, 2981052414.0: 4325, 3980199429.0: 4326, 1547037165.0: 4327, 2608991833.0: 4328, 122850449.0: 4329, 1709587844.0: 4330, 1849808492.0: 4331, 4095535708.0: 4332, 1097855268.0: 4333, 3807324691.0: 4334, 865455050.0: 4335, 2946413048.0: 4336, 3599390608.0: 4337, 422174065.0: 4338, 607893626.0: 4339, 3099859096.0: 4340, 2008527998.0: 4341, 303103468.0: 4342, 3892808386.0: 4343, 2657241530.0: 4344, 3304536881.0: 4345, 2358046198.0: 4346, 1301941501.0: 4347, 3851555763.0: 4348, 4124886376.0: 4349, 289313385.0: 4350, 629310427.0: 4351, 928936651.0: 4352, 1466769917.0: 4353, 652183167.0: 4354, 3781951101.0: 4355, 2505866228.0: 4356, 2459247397.0: 4357, 3420830729.0: 4358, 3911508586.0: 4359, 3920669266.0: 4360, 978217935.0: 4361, 3790613338.0: 4362, 2679390740.0: 4363, 2601285333.0: 4364, 2156872856.0: 4365, 1466477072.0: 4366, 2085872639.0: 4367, 4291964455.0: 4368, 750298447.0: 4369, 1359609938.0: 4370, 4216003851.0: 4371, 1871353350.0: 4372, 4096682899.0: 4373, 1633009757.0: 4374, 2601564228.0: 4375, 1252374339.0: 4376, 377718067.0: 4377, 1057760200.0: 4378, 1769098382.0: 4379, 4175409386.0: 4380, 291220978.0: 4381, 1391498927.0: 4382, 1477449901.0: 4383, 3684093270.0: 4384, 3826532907.0: 4385, 3058451577.0: 4386, 3801849062.0: 4387, 939868007.0: 4388, 1822049827.0: 4389, 2962471136.0: 4390, 2755906603.0: 4391, 1833413964.0: 4392, 4116258837.0: 4393, 1151515927.0: 4394, 3425725044.0: 4395, 1074563364.0: 4396, 1813903569.0: 4397, 2370631943.0: 4398, 774477465.0: 4399, 566276979.0: 4400, 2743493358.0: 4401, 3862091143.0: 4402, 2904989711.0: 4403, 4008183944.0: 4404, 249230842.0: 4405, 4087552600.0: 4406, 3061489993.0: 4407, 2088583374.0: 4408, 1208685406.0: 4409, 1159933197.0: 4410, 1663808828.0: 4411, 1968255838.0: 4412, 3787751851.0: 4413, 2237595454.0: 4414, 1294251895.0: 4415, 2642604305.0: 4416, 2058828431.0: 4417, 4194710669.0: 4418, 1890521851.0: 4419, 2052945667.0: 4420, 1711329148.0: 4421, 1304882459.0: 4422, 3414476681.0: 4423, 3904074370.0: 4424, 3260844527.0: 4425, 2423001846.0: 4426, 977755991.0: 4427, 462787389.0: 4428, 2374644245.0: 4429, 2600819997.0: 4430, 3585800399.0: 4431, 3679763071.0: 4432, 2024360241.0: 4433, 3870717716.0: 4434, 1328277001.0: 4435, 2596607843.0: 4436, 602550292.0: 4437, 3872154680.0: 4438, 2086641157.0: 4439, 3136248399.0: 4440, 218270322.0: 4441, 2905596732.0: 4442, 1404229415.0: 4443, 1494401207.0: 4444, 4070772302.0: 4445, 3168278861.0: 4446, 2955726823.0: 4447, 1541047087.0: 4448, 2357565617.0: 4449, 2239496612.0: 4450, 746822971.0: 4451, 3931212480.0: 4452, 1082592311.0: 4453, 669029406.0: 4454, 482304093.0: 4455, 1020878330.0: 4456, 2994009039.0: 4457, 1971630639.0: 4458, 4045192067.0: 4459, 3161262025.0: 4460, 2605265914.0: 4461, 3943673677.0: 4462, 1446288955.0: 4463, 2319414163.0: 4464, 135196610.0: 4465, 3392869706.0: 4466, 948125733.0: 4467, 1960924196.0: 4468, 1034061781.0: 4469, 1496229391.0: 4470, 2023720164.0: 4471, 1432993967.0: 4472, 1365947428.0: 4473, 3784448803.0: 4474, 2614956857.0: 4475, 426200085.0: 4476, 1347636328.0: 4477, 4243549246.0: 4478, 2710398726.0: 4479, 1224010243.0: 4480, 1039202418.0: 4481, 3949481542.0: 4482, 637714233.0: 4483, 1071549849.0: 4484, 86225377.0: 4485, 1771300121.0: 4486, 1963776997.0: 4487, 2340511381.0: 4488, 3883402796.0: 4489, 1004354078.0: 4490, 570441240.0: 4491, 2188050272.0: 4492, 186826175.0: 4493, 2026754065.0: 4494, 3596129660.0: 4495, 2876604870.0: 4496, 2513960679.0: 4497, 669407448.0: 4498, 1611113166.0: 4499, 1497315543.0: 4500, 3311447001.0: 4501, 933134801.0: 4502, 762778017.0: 4503, 1210920726.0: 4504, 2897947430.0: 4505, 2401324313.0: 4506, 4054165186.0: 4507, 4207370862.0: 4508, 2694619840.0: 4509, 1919350824.0: 4510, 3671476848.0: 4511, 3185199119.0: 4512, 3178087411.0: 4513, 293421884.0: 4514, 920736567.0: 4515, 3864037591.0: 4516, 3163757705.0: 4517, 4251933343.0: 4518, 853524101.0: 4519, 283627412.0: 4520, 423145128.0: 4521, 1632699305.0: 4522, 3817042621.0: 4523, 450092435.0: 4524, 285870667.0: 4525, 4092832243.0: 4526, 3966451868.0: 4527, 548479324.0: 4528, 850787217.0: 4529, 2063454410.0: 4530, 2769296391.0: 4531, 184461409.0: 4532, 2808031215.0: 4533, 3686371421.0: 4534, 3271292991.0: 4535, 3250965361.0: 4536, 3169544155.0: 4537, 929824507.0: 4538, 131505265.0: 4539, 592796302.0: 4540, 1450053836.0: 4541, 1648479761.0: 4542, 1887196671.0: 4543, 2061056701.0: 4544, 3578684590.0: 4545, 2374216039.0: 4546, 4169593563.0: 4547, 1350166481.0: 4548, 2747276350.0: 4549, 135346954.0: 4550, 793285006.0: 4551, 2870314777.0: 4552, 3557671490.0: 4553, 666545033.0: 4554, 2000189470.0: 4555, 3268752271.0: 4556, 177805524.0: 4557, 2281744573.0: 4558, 3089145472.0: 4559, 1359318959.0: 4560, 1223606835.0: 4561, 2825542599.0: 4562, 2886823447.0: 4563, 2919426056.0: 4564, 1494726757.0: 4565, 577695801.0: 4566, 4170048543.0: 4567, 326401834.0: 4568, 292331037.0: 4569, 2646448099.0: 4570, 922474486.0: 4571, 2487529574.0: 4572, 896092843.0: 4573, 1330298751.0: 4574, 3996622231.0: 4575, 524383011.0: 4576, 3444187074.0: 4577, 3314957350.0: 4578, 1416298470.0: 4579, 3049087341.0: 4580, 3561569915.0: 4581, 1970154183.0: 4582, 2311577804.0: 4583, 2520813616.0: 4584, 2040403001.0: 4585, 1784237893.0: 4586, 591691502.0: 4587, 3206808679.0: 4588, 3030241214.0: 4589, 2181903405.0: 4590, 1322713366.0: 4591, 3889465955.0: 4592, 2859579254.0: 4593, 1396404024.0: 4594, 3533698760.0: 4595, 3088539548.0: 4596, 4033289932.0: 4597, 2660059556.0: 4598, 2626150175.0: 4599, 2251394037.0: 4600, 173235002.0: 4601, 590919328.0: 4602, 3250374980.0: 4603, 2939251561.0: 4604, 277215118.0: 4605, 2617810907.0: 4606, 427359581.0: 4607, 974373290.0: 4608, 2096396674.0: 4609, 431192717.0: 4610, 1995338672.0: 4611, 3065772498.0: 4612, 1912862156.0: 4613, 3072106907.0: 4614, 137158683.0: 4615, 1011416576.0: 4616, 4023700853.0: 4617, 1252243723.0: 4618, 991142862.0: 4619, 1288170849.0: 4620, 2194381122.0: 4621, 543822187.0: 4622, 324441695.0: 4623, 1828626069.0: 4624, 4225864763.0: 4625, 681995844.0: 4626, 2412180788.0: 4627, 3752607154.0: 4628, 2049816867.0: 4629, 206800004.0: 4630, 3031657615.0: 4631, 2592238653.0: 4632, 3453502569.0: 4633, 223851060.0: 4634, 3506871437.0: 4635, 2678072205.0: 4636, 2277289475.0: 4637, 4169250106.0: 4638, 3044747856.0: 4639, 2486872706.0: 4640, 2207866236.0: 4641, 668788037.0: 4642, 2767825352.0: 4643, 3501194212.0: 4644, 1971662562.0: 4645, 1452456867.0: 4646, 2161207834.0: 4647, 1440128384.0: 4648, 3557078789.0: 4649, 2759258802.0: 4650, 3801148449.0: 4651, 834494213.0: 4652, 1963982088.0: 4653, 1549849003.0: 4654, 1585357333.0: 4655, 1725417563.0: 4656, 4102950702.0: 4657, 59521542.0: 4658, 1153925772.0: 4659, 2529407293.0: 4660, 470372957.0: 4661, 892125316.0: 4662, 3122957481.0: 4663, 1919039761.0: 4664, 4061437452.0: 4665, 1579915859.0: 4666, 3779296975.0: 4667, 1214701600.0: 4668, 1288350528.0: 4669, 2701946589.0: 4670, 1737085461.0: 4671, 3441671231.0: 4672, 329842547.0: 4673, 3512878139.0: 4674, 120591266.0: 4675, 4198687321.0: 4676, 1003134039.0: 4677, 1522265273.0: 4678, 967446557.0: 4679, 2595464214.0: 4680, 1008207201.0: 4681, 3394140198.0: 4682, 1821859380.0: 4683, 972447019.0: 4684, 1112467732.0: 4685, 3479247372.0: 4686, 1193851882.0: 4687, 2675466034.0: 4688, 4065972136.0: 4689, 2172660035.0: 4690, 1867679129.0: 4691, 3368719656.0: 4692, 3904084835.0: 4693, 1850067721.0: 4694, 1529557390.0: 4695, 1627706701.0: 4696, 1228382470.0: 4697, 633040526.0: 4698, 3564430698.0: 4699, 3643433138.0: 4700, 3445861980.0: 4701, 4071413495.0: 4702, 192205648.0: 4703, 3001485464.0: 4704, 375326058.0: 4705, 2680044026.0: 4706, 256712675.0: 4707, 2784461565.0: 4708, 1569311261.0: 4709, 4013549399.0: 4710, 2467155267.0: 4711, 1936480092.0: 4712, 859663587.0: 4713, 3009403906.0: 4714, 1506346288.0: 4715, 2242272603.0: 4716, 2800697342.0: 4717, 855762169.0: 4718, 2256253793.0: 4719, 932176920.0: 4720, 1260877424.0: 4721, 3828998816.0: 4722, 3629139374.0: 4723, 2209485206.0: 4724, 3264085015.0: 4725, 599711148.0: 4726, 3776687224.0: 4727, 1850075992.0: 4728, 334407606.0: 4729, 1489803979.0: 4730, 4057543263.0: 4731, 2632110679.0: 4732, 4034600244.0: 4733, 1518393010.0: 4734, 3137964843.0: 4735, 141639125.0: 4736, 636214565.0: 4737, 1208995127.0: 4738, 1756804144.0: 4739, 3398011068.0: 4740, 4060089327.0: 4741, 2560301058.0: 4742, 1119990382.0: 4743, 1217471383.0: 4744, 506573319.0: 4745, 349569241.0: 4746, 1585382574.0: 4747, 288870746.0: 4748, 2444314498.0: 4749, 1488296190.0: 4750, 3995391245.0: 4751, 2567933347.0: 4752, 1886948246.0: 4753, 1512934226.0: 4754, 2524470024.0: 4755, 2941539570.0: 4756, 498774913.0: 4757, 2334697.0: 4758, 4184591599.0: 4759, 4031412292.0: 4760, 1375073138.0: 4761, 4283813086.0: 4762, 2505758014.0: 4763, 3954720527.0: 4764, 1895289068.0: 4765, 3922928093.0: 4766, 367369765.0: 4767, 2353482421.0: 4768, 3690826875.0: 4769, 1928282167.0: 4770, 4215264988.0: 4771, 3553889767.0: 4772, 1423181306.0: 4773, 1996901726.0: 4774, 975657352.0: 4775, 1586626480.0: 4776, 2284770384.0: 4777, 1755446168.0: 4778, 3473960714.0: 4779, 3967260669.0: 4780, 645122623.0: 4781, 74147786.0: 4782, 3813734608.0: 4783, 1322416580.0: 4784, 268323446.0: 4785, 4041755206.0: 4786, 477961771.0: 4787, 2606715506.0: 4788, 2711047990.0: 4789, 3108975986.0: 4790, 1590436478.0: 4791, 1935250342.0: 4792, 3149579446.0: 4793, 1712245137.0: 4794, 1173714384.0: 4795, 2673021912.0: 4796, 1718161748.0: 4797, 3020374574.0: 4798, 3293475394.0: 4799, 3423776420.0: 4800, 1734273777.0: 4801, 3322959302.0: 4802, 1693573479.0: 4803, 2370477182.0: 4804, 517914260.0: 4805, 1458547023.0: 4806, 2481238282.0: 4807, 3031797141.0: 4808, 3151916581.0: 4809, 3498852103.0: 4810, 4281423358.0: 4811, 3946275957.0: 4812, 3938101109.0: 4813, 882238461.0: 4814, 2078702505.0: 4815, 1854726117.0: 4816, 2526143944.0: 4817, 2191907426.0: 4818, 2918741409.0: 4819, 2916618145.0: 4820, 1194958730.0: 4821, 2701701300.0: 4822, 3689707575.0: 4823, 633011078.0: 4824, 2286717184.0: 4825, 2833185344.0: 4826, 2968360828.0: 4827, 1398185030.0: 4828, 3075215920.0: 4829, 1714811365.0: 4830, 2921771879.0: 4831, 2570459442.0: 4832, 4292778465.0: 4833, 3546127615.0: 4834, 1241450485.0: 4835, 3087601937.0: 4836, 233369371.0: 4837, 1484804732.0: 4838, 1378992204.0: 4839, 284269871.0: 4840, 1903574558.0: 4841, 966922454.0: 4842, 3886699038.0: 4843, 1735026391.0: 4844, 4128327662.0: 4845, 3871684890.0: 4846, 2631999771.0: 4847, 221884934.0: 4848, 2485566784.0: 4849, 2102684588.0: 4850, 173307423.0: 4851, 702858950.0: 4852, 3347651536.0: 4853, 4278820550.0: 4854, 3659851851.0: 4855, 371727523.0: 4856, 3509932389.0: 4857, 1640535064.0: 4858, 2025957990.0: 4859, 3095294603.0: 4860, 3805335153.0: 4861, 1085986598.0: 4862, 1687254530.0: 4863, 1397899823.0: 4864, 60189166.0: 4865, 2215913161.0: 4866, 3412735839.0: 4867, 1591902543.0: 4868, 4160188602.0: 4869, 2800878240.0: 4870, 1246327662.0: 4871, 2640459376.0: 4872, 1582252773.0: 4873, 1966565622.0: 4874, 593014911.0: 4875, 3034793184.0: 4876, 3946161917.0: 4877, 3539730724.0: 4878, 2850236971.0: 4879, 3596259457.0: 4880, 2454847273.0: 4881, 2927151509.0: 4882, 4157963078.0: 4883, 3378126290.0: 4884, 3510074493.0: 4885, 3822086919.0: 4886, 2030864886.0: 4887, 2021593580.0: 4888, 3712561615.0: 4889, 2526737164.0: 4890, 4141134618.0: 4891, 1871097319.0: 4892, 2627050272.0: 4893, 4004214172.0: 4894, 1059725184.0: 4895, 1789809927.0: 4896, 403975356.0: 4897, 3707439439.0: 4898, 3996199332.0: 4899, 762046019.0: 4900, 1489617162.0: 4901, 3412295588.0: 4902, 3987607617.0: 4903, 2913492430.0: 4904, 3274957547.0: 4905, 3537056954.0: 4906, 2528103829.0: 4907, 411147633.0: 4908, 1230461600.0: 4909, 3467623881.0: 4910, 1990852037.0: 4911, 1122605252.0: 4912, 1816927998.0: 4913, 2488473135.0: 4914, 4251249014.0: 4915, 3258552553.0: 4916, 4192496766.0: 4917, 946158008.0: 4918, 3378592082.0: 4919, 4121873544.0: 4920, 227349393.0: 4921, 4103480538.0: 4922, 204113585.0: 4923, 2417625377.0: 4924, 3211056392.0: 4925, 2639706710.0: 4926, 1084463060.0: 4927, 2073086172.0: 4928, 3348672010.0: 4929, 1602084020.0: 4930, 4089602520.0: 4931, 1017881375.0: 4932, 1960978311.0: 4933, 2695577964.0: 4934, 3708782037.0: 4935, 752726969.0: 4936, 1749435317.0: 4937, 1908848549.0: 4938, 3363678995.0: 4939, 920283452.0: 4940, 277799555.0: 4941, 3944430254.0: 4942, 2808156082.0: 4943, 337230643.0: 4944, 2659384327.0: 4945, 948877940.0: 4946, 3109081385.0: 4947, 3056867056.0: 4948, 2579259251.0: 4949, 953579619.0: 4950, 1240146720.0: 4951, 2457699050.0: 4952, 1718955258.0: 4953, 2527537181.0: 4954, 2049999997.0: 4955, 808422268.0: 4956, 3915569405.0: 4957, 523792662.0: 4958, 1837079967.0: 4959, 1795775061.0: 4960, 3036902558.0: 4961, 3741985883.0: 4962, 282666304.0: 4963, 1545011352.0: 4964, 2239651300.0: 4965, 1050384690.0: 4966, 2587506323.0: 4967, 2334924902.0: 4968, 3746858500.0: 4969, 4148427271.0: 4970, 1155392600.0: 4971, 1260336631.0: 4972, 3462241502.0: 4973, 1235132000.0: 4974, 1712143069.0: 4975, 3571836193.0: 4976, 992295449.0: 4977, 3213626490.0: 4978, 3111391097.0: 4979, 812023211.0: 4980, 1312464569.0: 4981, 3485084219.0: 4982, 3420926053.0: 4983, 2019826509.0: 4984, 312288522.0: 4985, 2600573988.0: 4986, 3195868118.0: 4987, 3342053830.0: 4988, 33311733.0: 4989, 3123375547.0: 4990, 2108146967.0: 4991, 1274535154.0: 4992, 3458384989.0: 4993, 2770636833.0: 4994, 1220906713.0: 4995, 1177897473.0: 4996, 1127339680.0: 4997, 3968721813.0: 4998, 189219496.0: 4999, 683889119.0: 5000, 3563325930.0: 5001, 2010579396.0: 5002, 3371384361.0: 5003, 1993805504.0: 5004, 3053242537.0: 5005, 1055726918.0: 5006, 1916464038.0: 5007, 391328788.0: 5008, 738397932.0: 5009, 4114714925.0: 5010, 3873178352.0: 5011, 414881642.0: 5012, 1998892927.0: 5013, 3042230452.0: 5014, 923515314.0: 5015, 935192496.0: 5016, 339432006.0: 5017, 3573160107.0: 5018, 2613407177.0: 5019, 3612135678.0: 5020, 2731830180.0: 5021, 90507655.0: 5022, 698610111.0: 5023, 3703282365.0: 5024, 1474977020.0: 5025, 3846775684.0: 5026, 2100587891.0: 5027, 1222229263.0: 5028, 4028727035.0: 5029, 3419035373.0: 5030, 4018444716.0: 5031, 442035101.0: 5032, 347957731.0: 5033, 2104000253.0: 5034, 1582496974.0: 5035, 3172042071.0: 5036, 164245887.0: 5037, 2928643073.0: 5038, 3530886868.0: 5039, 724315659.0: 5040, 3007327630.0: 5041, 3242947823.0: 5042, 3632339123.0: 5043, 1268679180.0: 5044, 2535882373.0: 5045, 3988034688.0: 5046, 2258043186.0: 5047, 1477627827.0: 5048, 3831314966.0: 5049, 932788704.0: 5050, 531024654.0: 5051, 1358656841.0: 5052, 3680971655.0: 5053, 2690465168.0: 5054, 1636803425.0: 5055, 3223251423.0: 5056, 3282190522.0: 5057, 1404883402.0: 5058, 780273825.0: 5059, 1321954887.0: 5060, 3125928389.0: 5061, 1036374251.0: 5062, 3502880040.0: 5063, 2891156201.0: 5064, 3431043924.0: 5065, 3884751437.0: 5066, 1895443133.0: 5067, 2770933596.0: 5068, 3171506899.0: 5069, 4249821343.0: 5070, 690331229.0: 5071, 1921543117.0: 5072, 2515016325.0: 5073, 1221054171.0: 5074, 1227375965.0: 5075, 1665905635.0: 5076, 3035719049.0: 5077, 3380416101.0: 5078, 2066593319.0: 5079, 4145469741.0: 5080, 4118370837.0: 5081, 2818396916.0: 5082, 1879367058.0: 5083, 90582890.0: 5084, 4210418593.0: 5085, 948188860.0: 5086, 4090119334.0: 5087, 3778890958.0: 5088, 2664536938.0: 5089, 3496022529.0: 5090, 1408629988.0: 5091, 4160523370.0: 5092, 699386462.0: 5093, 1676205338.0: 5094, 1811382842.0: 5095, 2565203958.0: 5096, 4178420562.0: 5097, 3858255687.0: 5098, 986518532.0: 5099, 900614474.0: 5100, 1375698874.0: 5101, 2151150545.0: 5102, 4166858588.0: 5103, 4112080074.0: 5104, 3547358367.0: 5105, 681667013.0: 5106, 499908852.0: 5107, 518355007.0: 5108, 3290899820.0: 5109, 1026722742.0: 5110, 2032672681.0: 5111, 386959393.0: 5112, 3215472042.0: 5113, 1914025581.0: 5114, 1811181942.0: 5115, 2517726751.0: 5116, 94654748.0: 5117, 1422229552.0: 5118, 3132591126.0: 5119, 3776092384.0: 5120, 171138533.0: 5121, 4145294757.0: 5122, 4194055279.0: 5123, 855539367.0: 5124, 1308232226.0: 5125, 3707511914.0: 5126, 840301931.0: 5127, 783196867.0: 5128, 1608015079.0: 5129, 1296653145.0: 5130, 972003890.0: 5131, 502741759.0: 5132, 3576038473.0: 5133, 2050917008.0: 5134, 646274496.0: 5135, 4043669609.0: 5136, 2552393384.0: 5137, 135652707.0: 5138, 4201556274.0: 5139, 1064744435.0: 5140, 1802822305.0: 5141, 1323870884.0: 5142, 4278111229.0: 5143, 2759283721.0: 5144, 3172223646.0: 5145, 4282163295.0: 5146, 2559237245.0: 5147, 2499644791.0: 5148, 2842635281.0: 5149, 1726575036.0: 5150, 945368297.0: 5151, 3412616431.0: 5152, 2166474587.0: 5153, 1481613592.0: 5154, 3538503101.0: 5155, 1715660844.0: 5156, 639046281.0: 5157, 4046503664.0: 5158, 763880996.0: 5159, 3037355862.0: 5160, 3886583958.0: 5161, 2998197323.0: 5162, 607936430.0: 5163, 584166678.0: 5164, 3028969975.0: 5165, 858484800.0: 5166, 697749286.0: 5167, 224020373.0: 5168, 1701042425.0: 5169, 4164421831.0: 5170, 3739457940.0: 5171, 3599486364.0: 5172, 65345297.0: 5173, 3044320685.0: 5174, 1174549821.0: 5175, 1930896415.0: 5176, 423820191.0: 5177, 856924358.0: 5178, 2325851849.0: 5179, 1135616065.0: 5180, 640670129.0: 5181, 3630688322.0: 5182, 2670509863.0: 5183, 2998478362.0: 5184, 1113716160.0: 5185, 3641039006.0: 5186, 691917034.0: 5187, 1133695851.0: 5188, 3066231783.0: 5189, 134765384.0: 5190, 339636832.0: 5191, 2726539570.0: 5192, 506404823.0: 5193, 2956086678.0: 5194, 3007922900.0: 5195, 1447374142.0: 5196, 2887271903.0: 5197, 491098737.0: 5198, 2639786634.0: 5199, 2406391784.0: 5200, 1545113445.0: 5201, 735080831.0: 5202, 3823617771.0: 5203, 186655605.0: 5204, 2893113544.0: 5205, 4149000930.0: 5206, 2535929433.0: 5207, 2906634124.0: 5208, 3536197814.0: 5209, 84004449.0: 5210, 1355491434.0: 5211, 972599602.0: 5212, 658389483.0: 5213, 3651847790.0: 5214, 2751277117.0: 5215, 1696743754.0: 5216, 3419418681.0: 5217, 4172504568.0: 5218, 638831840.0: 5219, 919640860.0: 5220, 1731013335.0: 5221, 1158581638.0: 5222, 3096767873.0: 5223, 1444352761.0: 5224, 3409482230.0: 5225, 2606511681.0: 5226, 822365559.0: 5227, 2152434292.0: 5228, 4076675276.0: 5229, 2324396079.0: 5230, 2389880993.0: 5231, 3020025060.0: 5232, 3524734097.0: 5233, 1626554031.0: 5234, 2839155799.0: 5235, 2413099531.0: 5236, 3104055564.0: 5237, 3963752788.0: 5238, 3984535974.0: 5239, 3659394355.0: 5240, 3768010115.0: 5241, 1050778312.0: 5242, 2341167284.0: 5243, 2078097826.0: 5244, 3010102839.0: 5245, 344703031.0: 5246, 1115038252.0: 5247, 3976774399.0: 5248, 639827497.0: 5249, 3901416979.0: 5250, 3872251026.0: 5251, 2115266573.0: 5252, 1659023027.0: 5253, 259343713.0: 5254, 150302827.0: 5255, 2676764787.0: 5256, 168606087.0: 5257, 3442174375.0: 5258, 2662832836.0: 5259, 992400059.0: 5260, 3091622794.0: 5261, 3395276284.0: 5262, 2534601379.0: 5263, 4111772011.0: 5264, 1916769140.0: 5265, 3508829868.0: 5266, 1736623896.0: 5267, 1980247403.0: 5268, 2614283136.0: 5269, 3276464501.0: 5270, 2017858708.0: 5271, 3032694496.0: 5272, 1031842333.0: 5273, 23735326.0: 5274, 339008955.0: 5275, 4271352588.0: 5276, 2526358453.0: 5277, 3205740178.0: 5278, 1895880849.0: 5279, 1726292121.0: 5280, 3241354854.0: 5281, 1893726790.0: 5282, 2040579568.0: 5283, 2212716924.0: 5284, 3552987608.0: 5285, 2181794053.0: 5286, 3175696560.0: 5287, 1742090408.0: 5288, 3503900817.0: 5289, 3769209930.0: 5290, 1943011619.0: 5291, 3862667456.0: 5292, 1012314840.0: 5293, 2391039414.0: 5294, 3521646440.0: 5295, 2368066576.0: 5296, 898340809.0: 5297, 4156365729.0: 5298, 3840834509.0: 5299, 2531116149.0: 5300, 4052017025.0: 5301, 2841252488.0: 5302, 3771360166.0: 5303, 88429405.0: 5304, 405313249.0: 5305, 3742065799.0: 5306, 2798383093.0: 5307, 2231160917.0: 5308, 139069406.0: 5309, 2503752496.0: 5310, 3381964965.0: 5311, 3809371954.0: 5312, 3518356822.0: 5313, 2208863575.0: 5314, 3332902760.0: 5315, 3551323897.0: 5316, 3493785788.0: 5317, 977498625.0: 5318, 1235003812.0: 5319, 4263803757.0: 5320, 2737044883.0: 5321, 3372038340.0: 5322, 4293685539.0: 5323, 452277085.0: 5324, 3147333747.0: 5325, 1443328061.0: 5326, 2138443075.0: 5327, 3513162322.0: 5328, 1567819971.0: 5329, 609579705.0: 5330, 4167719986.0: 5331, 3919622100.0: 5332, 2368536536.0: 5333, 2399843425.0: 5334, 926844715.0: 5335, 2702319696.0: 5336, 1819282351.0: 5337, 2176999085.0: 5338, 1002495479.0: 5339, 2682722404.0: 5340, 3398014241.0: 5341, 3883146531.0: 5342, 1640210022.0: 5343, 95378274.0: 5344, 3283616178.0: 5345, 4118563388.0: 5346, 2272123899.0: 5347, 3417640866.0: 5348, 256491914.0: 5349, 1392983039.0: 5350, 2006445732.0: 5351, 188629149.0: 5352, 107598746.0: 5353, 909583153.0: 5354, 687443143.0: 5355, 1196356881.0: 5356, 811795833.0: 5357, 3336100314.0: 5358, 3817062356.0: 5359, 3698504016.0: 5360, 1684912332.0: 5361, 1079865099.0: 5362, 321527876.0: 5363, 125811456.0: 5364, 1510548226.0: 5365, 2838708127.0: 5366, 53620725.0: 5367, 821257625.0: 5368, 2928241947.0: 5369, 4006315864.0: 5370, 442372187.0: 5371, 375002435.0: 5372, 3118349866.0: 5373, 1986207585.0: 5374, 1743255683.0: 5375, 3224098630.0: 5376, 1714947140.0: 5377, 3572718488.0: 5378, 2227523918.0: 5379, 1251735002.0: 5380, 3521176848.0: 5381, 513747295.0: 5382, 2163981564.0: 5383, 3606427188.0: 5384, 2161608335.0: 5385, 3810330060.0: 5386, 2979451563.0: 5387, 2781030412.0: 5388, 1918967804.0: 5389, 135823736.0: 5390, 2424329497.0: 5391, 3682989797.0: 5392, 1432914035.0: 5393, 1181417103.0: 5394, 2839019174.0: 5395, 861784102.0: 5396, 2079753744.0: 5397, 983952621.0: 5398, 3931161116.0: 5399, 3468803972.0: 5400, 2416199161.0: 5401, 923775679.0: 5402, 1380246958.0: 5403, 2776644396.0: 5404, 1715264045.0: 5405, 4173448610.0: 5406, 1969361190.0: 5407, 3693771959.0: 5408, 2807643020.0: 5409, 166374510.0: 5410, 97933564.0: 5411, 2435418688.0: 5412, 1853869515.0: 5413, 2687827861.0: 5414, 4284498158.0: 5415, 1441839548.0: 5416, 909674275.0: 5417, 1808423211.0: 5418, 161400527.0: 5419, 206624721.0: 5420, 2306981882.0: 5421, 599961766.0: 5422, 685839642.0: 5423, 418875149.0: 5424, 559737560.0: 5425, 1409988783.0: 5426, 2462509888.0: 5427, 3026368505.0: 5428, 2403285073.0: 5429, 1955335441.0: 5430, 3961976424.0: 5431, 2781744939.0: 5432, 1940304470.0: 5433, 1013715170.0: 5434, 1357358216.0: 5435, 2444129572.0: 5436, 1473273606.0: 5437, 2317738871.0: 5438, 1444798681.0: 5439, 340109501.0: 5440, 2740330005.0: 5441, 3963500876.0: 5442, 3248551146.0: 5443, 2743054219.0: 5444, 625836953.0: 5445, 1270453967.0: 5446, 2192178206.0: 5447, 2561549979.0: 5448, 2472943569.0: 5449, 1802256176.0: 5450, 2449220049.0: 5451, 496564036.0: 5452, 1391491908.0: 5453, 2604206554.0: 5454, 3885017059.0: 5455, 2564821660.0: 5456, 3481519982.0: 5457, 2537227663.0: 5458, 3230098419.0: 5459, 4061236773.0: 5460, 3133923612.0: 5461, 3960161859.0: 5462, 2049498220.0: 5463, 1633170940.0: 5464, 823883391.0: 5465, 3958753899.0: 5466, 2183280795.0: 5467, 1859774371.0: 5468, 3083297820.0: 5469, 4218046161.0: 5470, 4242324291.0: 5471, 3168207023.0: 5472, 4208484853.0: 5473, 3575171789.0: 5474, 790046779.0: 5475, 2655920514.0: 5476, 3735079922.0: 5477, 1554887477.0: 5478, 2633169661.0: 5479, 41459611.0: 5480, 3333248169.0: 5481, 1976791573.0: 5482, 1288547521.0: 5483, 1181479039.0: 5484, 1562240302.0: 5485, 889776754.0: 5486, 283166741.0: 5487, 4186139936.0: 5488, 3698020167.0: 5489, 4174629533.0: 5490, 4143572513.0: 5491, 3023360637.0: 5492, 465611643.0: 5493, 292475645.0: 5494, 1534772353.0: 5495, 395119628.0: 5496, 3686538160.0: 5497, 3423073094.0: 5498, 1497530403.0: 5499, 4107867828.0: 5500, 4086100156.0: 5501, 2948516856.0: 5502, 1274667985.0: 5503, 2389507193.0: 5504, 3597633277.0: 5505, 4279986444.0: 5506, 1719301034.0: 5507, 681027183.0: 5508, 1977907754.0: 5509, 3496361764.0: 5510, 840750755.0: 5511, 4281970806.0: 5512, 3050903634.0: 5513, 2247757914.0: 5514, 1913326422.0: 5515, 2315118094.0: 5516, 111378815.0: 5517, 1395559009.0: 5518, 3859167844.0: 5519, 3450911872.0: 5520, 4237942603.0: 5521, 2133577869.0: 5522, 411622978.0: 5523, 554639860.0: 5524, 2607575050.0: 5525, 2077521210.0: 5526, 2182060549.0: 5527, 886136347.0: 5528, 3274365185.0: 5529, 1069727311.0: 5530, 377400848.0: 5531, 570833803.0: 5532, 1437902234.0: 5533, 4239835541.0: 5534, 3917229965.0: 5535, 2149616843.0: 5536, 1824913518.0: 5537, 206535078.0: 5538, 3853764212.0: 5539, 328615572.0: 5540, 2128472703.0: 5541, 1181789543.0: 5542, 3674162487.0: 5543, 1702081605.0: 5544, 4099811625.0: 5545, 116279774.0: 5546, 3949091891.0: 5547, 3439585557.0: 5548, 2629767065.0: 5549, 2568695459.0: 5550, 2617600634.0: 5551, 1391259059.0: 5552, 1373157097.0: 5553, 3542144820.0: 5554, 2121357206.0: 5555, 3126594356.0: 5556, 3634471807.0: 5557, 2231022892.0: 5558, 2523560545.0: 5559, 340558709.0: 5560, 1296347560.0: 5561, 2159506507.0: 5562, 2124019289.0: 5563, 94109352.0: 5564, 3108375761.0: 5565, 2256793367.0: 5566, 1413697144.0: 5567, 1432624619.0: 5568, 2850334978.0: 5569, 3871940454.0: 5570, 1468255459.0: 5571, 1812326441.0: 5572, 781505881.0: 5573, 232655403.0: 5574, 3596776284.0: 5575, 2676499439.0: 5576, 145171614.0: 5577, 3604341534.0: 5578, 2044098181.0: 5579, 1172112894.0: 5580, 2850779579.0: 5581, 3097086630.0: 5582, 2236611714.0: 5583, 274324071.0: 5584, 4148801576.0: 5585, 4117787101.0: 5586, 462450338.0: 5587, 3120564202.0: 5588, 470706883.0: 5589, 923756507.0: 5590, 2497465685.0: 5591, 3398173714.0: 5592, 275600961.0: 5593, 2359681713.0: 5594, 734762534.0: 5595, 701174504.0: 5596, 3015068609.0: 5597, 2839581757.0: 5598, 2306286519.0: 5599, 1222729426.0: 5600, 3474239843.0: 5601, 30424662.0: 5602, 4156907839.0: 5603, 2321213379.0: 5604, 3776333449.0: 5605, 171798956.0: 5606, 1247071557.0: 5607, 42902140.0: 5608, 3623923528.0: 5609, 4010978237.0: 5610, 838476891.0: 5611, 309109784.0: 5612, 2909106522.0: 5613, 4204098756.0: 5614, 2288480376.0: 5615, 3859984263.0: 5616, 3788045276.0: 5617, 56339611.0: 5618, 773941251.0: 5619, 1543559028.0: 5620, 3211506775.0: 5621, 962620642.0: 5622, 3140967138.0: 5623, 1249416094.0: 5624, 300826922.0: 5625, 3431495696.0: 5626, 401870393.0: 5627, 3437307630.0: 5628, 1443894648.0: 5629, 1019902390.0: 5630, 1339115765.0: 5631, 745153531.0: 5632, 1146812592.0: 5633, 486896489.0: 5634, 2069358407.0: 5635, 2922580216.0: 5636, 2325681966.0: 5637, 2653147900.0: 5638, 1889475422.0: 5639, 846977021.0: 5640, 852535143.0: 5641, 806134159.0: 5642, 3397758656.0: 5643, 3863936415.0: 5644, 2558765370.0: 5645, 4206906498.0: 5646, 4215306787.0: 5647, 2877721784.0: 5648, 2143183168.0: 5649, 2982805605.0: 5650, 1903982229.0: 5651, 2873644327.0: 5652, 290535071.0: 5653, 3574958844.0: 5654, 4191411851.0: 5655, 2099057553.0: 5656, 3931633075.0: 5657, 3470331580.0: 5658, 3943350116.0: 5659, 3663645142.0: 5660, 3379959969.0: 5661, 1854571679.0: 5662, 3425576620.0: 5663, 3561278426.0: 5664, 2207127608.0: 5665, 1401749370.0: 5666, 2729372693.0: 5667, 261913103.0: 5668, 1644581015.0: 5669, 2116835550.0: 5670, 3600348719.0: 5671, 1918545135.0: 5672, 3867955591.0: 5673, 4057077492.0: 5674, 1578147928.0: 5675, 3655191297.0: 5676, 2143587624.0: 5677, 428717065.0: 5678, 610031985.0: 5679, 773189665.0: 5680, 3943343222.0: 5681, 9494066.0: 5682, 2857238873.0: 5683, 478034118.0: 5684, 1944176904.0: 5685, 1689243621.0: 5686, 3212483461.0: 5687, 4284527569.0: 5688, 1067347073.0: 5689, 2448453876.0: 5690, 1664901840.0: 5691, 843718614.0: 5692, 2951906892.0: 5693, 811770818.0: 5694, 3433154958.0: 5695, 2669248958.0: 5696, 4066475402.0: 5697, 2188615458.0: 5698, 485704160.0: 5699, 2999109532.0: 5700, 1388170000.0: 5701, 2799778067.0: 5702, 2721195899.0: 5703, 3028172827.0: 5704, 2199640778.0: 5705, 845491819.0: 5706, 309322257.0: 5707, 449961019.0: 5708, 454089266.0: 5709, 529186477.0: 5710, 2015355916.0: 5711, 2885103389.0: 5712, 3338082103.0: 5713, 2395154152.0: 5714, 232070383.0: 5715, 1806327796.0: 5716, 721938402.0: 5717, 3126149036.0: 5718, 2822344939.0: 5719, 2151991953.0: 5720, 2510072944.0: 5721, 1206194327.0: 5722, 2122697719.0: 5723, 73694760.0: 5724, 4144683733.0: 5725, 1923309962.0: 5726, 1986862216.0: 5727, 4215723241.0: 5728, 704188736.0: 5729, 2021379973.0: 5730, 3540991440.0: 5731, 3043193409.0: 5732, 732985248.0: 5733, 3702054300.0: 5734, 4023047938.0: 5735, 1641472336.0: 5736, 2083716612.0: 5737, 3292994840.0: 5738, 2583751563.0: 5739, 3234265664.0: 5740, 1849663038.0: 5741, 2195453438.0: 5742, 1913848414.0: 5743, 3225614929.0: 5744, 3188395813.0: 5745, 2095145876.0: 5746, 3371041655.0: 5747, 3004400642.0: 5748, 243755127.0: 5749, 1345549340.0: 5750, 1174633953.0: 5751, 1434528170.0: 5752, 40182192.0: 5753, 2147046969.0: 5754, 2495175587.0: 5755, 3627476495.0: 5756, 4278687787.0: 5757, 985783693.0: 5758, 2267614856.0: 5759, 834295940.0: 5760, 3880633046.0: 5761, 1748976000.0: 5762, 2798842607.0: 5763, 1589925452.0: 5764, 2556657060.0: 5765, 2434505212.0: 5766, 216091455.0: 5767, 2219896861.0: 5768, 3398916362.0: 5769, 945084744.0: 5770, 2502319334.0: 5771, 2035115926.0: 5772, 1823193934.0: 5773, 1591998032.0: 5774, 3573513700.0: 5775, 2112540710.0: 5776, 2224265275.0: 5777, 3583199569.0: 5778, 1334614731.0: 5779, 3342171392.0: 5780, 2223872848.0: 5781, 2234497995.0: 5782, 1797588110.0: 5783, 2869813000.0: 5784, 2531614707.0: 5785, 1563914647.0: 5786, 2069561168.0: 5787, 1904624323.0: 5788, 2036971117.0: 5789, 1481711334.0: 5790, 2684449701.0: 5791, 3752025325.0: 5792, 2788319731.0: 5793, 4029818506.0: 5794, 1072945813.0: 5795, 1296068545.0: 5796, 2446209008.0: 5797, 3195504381.0: 5798, 3475484182.0: 5799, 1964956008.0: 5800, 2482502107.0: 5801, 648262414.0: 5802, 3561820973.0: 5803, 3357111205.0: 5804, 2513898968.0: 5805, 158560459.0: 5806, 2282194328.0: 5807, 1881692178.0: 5808, 4148159564.0: 5809, 3784758622.0: 5810, 1949523984.0: 5811, 2716525403.0: 5812, 2131717086.0: 5813, 1043297739.0: 5814, 1766009342.0: 5815, 4244102406.0: 5816, 69091880.0: 5817, 719029083.0: 5818, 2448897813.0: 5819, 561323508.0: 5820, 2264226914.0: 5821, 3478730781.0: 5822, 3960444970.0: 5823, 33892207.0: 5824, 589544449.0: 5825, 520291533.0: 5826, 378524694.0: 5827, 4259865858.0: 5828, 1307358363.0: 5829, 1256572891.0: 5830, 1542629765.0: 5831, 839499024.0: 5832, 26472195.0: 5833, 1345097799.0: 5834, 81728715.0: 5835, 3618402810.0: 5836, 1293244295.0: 5837, 3272006770.0: 5838, 143887983.0: 5839, 2834033724.0: 5840, 587788523.0: 5841, 728681205.0: 5842, 476778406.0: 5843, 261333686.0: 5844, 2524339685.0: 5845, 1904457641.0: 5846, 808666605.0: 5847, 4166537747.0: 5848, 1708932734.0: 5849, 85100283.0: 5850, 673068266.0: 5851, 793129993.0: 5852, 3114831199.0: 5853, 3454124043.0: 5854, 1746266681.0: 5855, 1055205166.0: 5856, 2919731418.0: 5857, 3406568912.0: 5858, 4107198017.0: 5859, 2343012758.0: 5860, 2148657595.0: 5861, 3524682829.0: 5862, 3485213514.0: 5863, 1072066116.0: 5864, 282132542.0: 5865, 2871872545.0: 5866, 3957335948.0: 5867, 3430136609.0: 5868, 811048283.0: 5869, 1596057505.0: 5870, 3667290144.0: 5871, 3329645072.0: 5872, 2345819986.0: 5873, 1690104918.0: 5874, 3042331864.0: 5875, 2046046784.0: 5876, 774675874.0: 5877, 1169345287.0: 5878, 561455921.0: 5879, 3175193896.0: 5880, 2753809140.0: 5881, 3507468101.0: 5882, 2618134514.0: 5883, 2123555668.0: 5884, 3105506020.0: 5885, 3400892528.0: 5886, 3206431539.0: 5887, 4082614411.0: 5888, 3510274524.0: 5889, 3112436157.0: 5890, 1209974510.0: 5891, 68162697.0: 5892, 1165813611.0: 5893, 3174628277.0: 5894, 3644444111.0: 5895, 136684328.0: 5896, 4281699223.0: 5897, 4087453236.0: 5898, 3114652687.0: 5899, 4126658351.0: 5900, 2707994219.0: 5901, 3495824154.0: 5902, 3727548029.0: 5903, 2797541265.0: 5904, 901604222.0: 5905, 2576977800.0: 5906, 3523066809.0: 5907, 2337612371.0: 5908, 1004842639.0: 5909, 4123970135.0: 5910, 1666969894.0: 5911, 3892939051.0: 5912, 3688941950.0: 5913, 2121571017.0: 5914, 4250017217.0: 5915, 1118403036.0: 5916, 1026202446.0: 5917, 555165166.0: 5918, 2044577132.0: 5919, 446186998.0: 5920, 1509702569.0: 5921, 1815704466.0: 5922, 3011736920.0: 5923, 2424256186.0: 5924, 2280618704.0: 5925, 1931191301.0: 5926, 2021145801.0: 5927, 167575253.0: 5928, 584493719.0: 5929, 2695053735.0: 5930, 1138126477.0: 5931, 113054638.0: 5932, 464292824.0: 5933, 3186661302.0: 5934, 1017977326.0: 5935, 495241962.0: 5936, 10298467.0: 5937, 2587590223.0: 5938, 3643627564.0: 5939, 3482574103.0: 5940, 3109016059.0: 5941, 3940988155.0: 5942, 4225435020.0: 5943, 76259499.0: 5944, 1395803376.0: 5945, 2241674144.0: 5946, 1696058746.0: 5947, 3307863246.0: 5948, 2297119157.0: 5949, 1874700284.0: 5950, 925055232.0: 5951, 115817625.0: 5952, 3193777476.0: 5953, 1088294800.0: 5954, 3174158125.0: 5955, 297539039.0: 5956, 507266982.0: 5957, 2364329887.0: 5958, 3925883261.0: 5959, 200948819.0: 5960, 2640385978.0: 5961, 1443369314.0: 5962, 3234546254.0: 5963, 3093170315.0: 5964, 3650150653.0: 5965, 2878830836.0: 5966, 188075666.0: 5967, 234545244.0: 5968, 1549147649.0: 5969, 3433017573.0: 5970, 741863877.0: 5971, 3646540560.0: 5972, 3082340579.0: 5973, 3953799216.0: 5974, 381988592.0: 5975, 690522003.0: 5976, 3530557179.0: 5977, 620966944.0: 5978, 1544158396.0: 5979, 2420830784.0: 5980, 3745423485.0: 5981, 309782352.0: 5982, 3858796270.0: 5983, 1097105.0: 5984, 2622803395.0: 5985, 2679417845.0: 5986, 509362553.0: 5987, 4133191546.0: 5988, 3393198388.0: 5989, 12926176.0: 5990, 2609378246.0: 5991, 399736964.0: 5992, 1077766612.0: 5993, 3389935001.0: 5994, 2398815481.0: 5995, 3887260454.0: 5996, 2244484731.0: 5997, 1736000155.0: 5998, 28458179.0: 5999, 3997771379.0: 6000, 4205140596.0: 6001, 1411681431.0: 6002, 2292920621.0: 6003, 1665308715.0: 6004, 2518944016.0: 6005, 3659219961.0: 6006, 3063040076.0: 6007, 2233107794.0: 6008, 3905497013.0: 6009, 2312655236.0: 6010, 1266243393.0: 6011, 415960855.0: 6012, 3730645534.0: 6013, 3796917670.0: 6014, 3382120006.0: 6015, 4181360466.0: 6016, 68048977.0: 6017, 3307360039.0: 6018, 2527246638.0: 6019, 389291646.0: 6020, 2922722716.0: 6021, 34344103.0: 6022, 3622809692.0: 6023, 4250466163.0: 6024, 2172014348.0: 6025, 3486437983.0: 6026, 2146582781.0: 6027, 1034272820.0: 6028, 1958593850.0: 6029, 2676872837.0: 6030, 2151208154.0: 6031, 602906919.0: 6032, 4071686513.0: 6033, 4272542311.0: 6034, 49210040.0: 6035, 3813942969.0: 6036, 2924990542.0: 6037, 3085168479.0: 6038, 403055491.0: 6039, 368736894.0: 6040, 1452274587.0: 6041, 3860563023.0: 6042, 2319978505.0: 6043, 1131090038.0: 6044, 3390311569.0: 6045, 2240719457.0: 6046, 102249868.0: 6047, 4093478330.0: 6048, 1981544967.0: 6049, 706891326.0: 6050, 2347261096.0: 6051, 278514208.0: 6052, 1076103574.0: 6053, 2977152408.0: 6054, 4221751847.0: 6055, 1913640255.0: 6056, 1662946213.0: 6057, 3338190019.0: 6058, 1901949684.0: 6059, 982463316.0: 6060, 1842801837.0: 6061, 3355348247.0: 6062, 2728019684.0: 6063, 518771003.0: 6064, 2369201114.0: 6065, 2800365527.0: 6066, 124565969.0: 6067, 1424521296.0: 6068, 1299011664.0: 6069, 2046763501.0: 6070, 732595107.0: 6071, 3855690820.0: 6072, 2558026715.0: 6073, 2607328867.0: 6074, 3253994330.0: 6075, 2885358844.0: 6076, 1010686946.0: 6077, 571052650.0: 6078, 1220316396.0: 6079, 1460289568.0: 6080, 2138185749.0: 6081, 4190377598.0: 6082, 352411649.0: 6083, 2761535255.0: 6084, 817414398.0: 6085, 4192621243.0: 6086, 927092581.0: 6087, 2253128514.0: 6088, 40436035.0: 6089, 3927864741.0: 6090, 3941977307.0: 6091, 1834369145.0: 6092, 2230622565.0: 6093, 1001691619.0: 6094, 3596269668.0: 6095, 3183261195.0: 6096, 1227873597.0: 6097, 351526490.0: 6098, 949393155.0: 6099, 4122070755.0: 6100, 289139387.0: 6101, 1334079667.0: 6102, 3303952740.0: 6103, 1444495024.0: 6104, 3647315927.0: 6105, 2154182865.0: 6106, 2760839598.0: 6107, 2890920437.0: 6108, 2427428864.0: 6109, 3079978304.0: 6110, 96044698.0: 6111, 3674639198.0: 6112, 1779587462.0: 6113, 3050627587.0: 6114, 3396006757.0: 6115, 2895581525.0: 6116, 1257752804.0: 6117, 1842670853.0: 6118, 2447061606.0: 6119, 268986842.0: 6120, 2612980515.0: 6121, 3260280866.0: 6122, 811231482.0: 6123, 3999287345.0: 6124, 378049527.0: 6125, 264953991.0: 6126, 2121547869.0: 6127, 2211049175.0: 6128, 308602991.0: 6129, 4166284399.0: 6130, 2183031900.0: 6131, 2128468953.0: 6132, 3158286688.0: 6133, 4150256275.0: 6134, 1219589821.0: 6135, 2656996.0: 6136, 886582108.0: 6137, 988513293.0: 6138, 1844577227.0: 6139, 18252314.0: 6140, 2668542397.0: 6141, 809135653.0: 6142, 847040636.0: 6143, 1615924397.0: 6144, 1096941027.0: 6145, 2262115938.0: 6146, 1781851348.0: 6147, 2985306017.0: 6148, 754293011.0: 6149, 1309610633.0: 6150, 2321799648.0: 6151, 3020618272.0: 6152, 4091077913.0: 6153, 2485727933.0: 6154, 1935888062.0: 6155, 3275741450.0: 6156, 479488538.0: 6157, 3180247082.0: 6158, 1038284621.0: 6159, 1245035296.0: 6160, 2772545466.0: 6161, 3935279596.0: 6162, 122122296.0: 6163, 4186731714.0: 6164, 1375995062.0: 6165, 2958859746.0: 6166, 3697050504.0: 6167, 2648065393.0: 6168, 2883897845.0: 6169, 1531370116.0: 6170, 3959860402.0: 6171, 3861627396.0: 6172, 1865123756.0: 6173, 2877963761.0: 6174, 3124284626.0: 6175, 3681966174.0: 6176, 997493156.0: 6177, 2434577625.0: 6178, 3449447225.0: 6179, 3822867247.0: 6180, 1417756092.0: 6181, 463515044.0: 6182, 3317183310.0: 6183, 3262913222.0: 6184, 1485562261.0: 6185, 3678910638.0: 6186, 3649144116.0: 6187, 3240260444.0: 6188, 884412631.0: 6189, 735404374.0: 6190, 3913301116.0: 6191, 3645648457.0: 6192, 2288485191.0: 6193, 465750264.0: 6194, 4290645636.0: 6195, 2325755077.0: 6196, 1255644622.0: 6197, 789970725.0: 6198, 3817751941.0: 6199, 3215206096.0: 6200, 893660195.0: 6201, 849226062.0: 6202, 620920060.0: 6203, 108072584.0: 6204, 2784702898.0: 6205, 1166302429.0: 6206, 4102629550.0: 6207, 4077208804.0: 6208, 2502153995.0: 6209, 1120869226.0: 6210, 2365654043.0: 6211, 2088838365.0: 6212, 2762620740.0: 6213, 4134633370.0: 6214, 761027915.0: 6215, 1360011807.0: 6216, 2661394755.0: 6217, 928940532.0: 6218, 471061736.0: 6219, 2493603769.0: 6220, 2705645139.0: 6221, 3857509447.0: 6222, 4227078994.0: 6223, 2637349737.0: 6224, 1611957890.0: 6225, 2632751381.0: 6226, 3122181842.0: 6227, 87803857.0: 6228, 2238992273.0: 6229, 3891954074.0: 6230, 3836646573.0: 6231, 2322382850.0: 6232, 1008291261.0: 6233, 483552214.0: 6234, 368047383.0: 6235, 4041584663.0: 6236, 808950660.0: 6237, 2310427593.0: 6238, 4113828785.0: 6239, 3704741801.0: 6240, 47465091.0: 6241, 601236805.0: 6242, 460466960.0: 6243, 1326195640.0: 6244, 2934533060.0: 6245, 3150102500.0: 6246, 2865988980.0: 6247, 1874831519.0: 6248, 2957837114.0: 6249, 2817615577.0: 6250, 1425263785.0: 6251, 3123832602.0: 6252, 396122422.0: 6253, 4178506612.0: 6254, 1036527860.0: 6255, 2706406739.0: 6256, 583790174.0: 6257, 2731117645.0: 6258, 707347520.0: 6259, 1819877479.0: 6260, 3000774892.0: 6261, 3380224832.0: 6262, 3559471268.0: 6263, 1299928522.0: 6264, 1014917079.0: 6265, 3071924553.0: 6266, 2726072514.0: 6267, 4123071214.0: 6268, 1707053103.0: 6269, 2885794760.0: 6270, 868886903.0: 6271, 820902072.0: 6272, 1863849556.0: 6273, 3760279059.0: 6274, 3618933896.0: 6275, 721803559.0: 6276, 2116219354.0: 6277, 3220250262.0: 6278, 300242926.0: 6279, 3778633554.0: 6280, 640757441.0: 6281, 3215580289.0: 6282, 1110175762.0: 6283, 1847560343.0: 6284, 1890568303.0: 6285, 2762572199.0: 6286, 1839166816.0: 6287, 3606956468.0: 6288, 2407006122.0: 6289, 3310638320.0: 6290, 3861537983.0: 6291, 945940433.0: 6292, 1538950640.0: 6293, 1456110004.0: 6294, 1069056591.0: 6295, 4070665677.0: 6296, 3747323878.0: 6297, 1708092492.0: 6298, 3204079131.0: 6299, 771118369.0: 6300, 1220522713.0: 6301, 1183916921.0: 6302, 3048145797.0: 6303, 3319805966.0: 6304, 1197749743.0: 6305, 1203037868.0: 6306, 3877452215.0: 6307, 3319464058.0: 6308, 421796131.0: 6309, 3640775571.0: 6310, 3649042691.0: 6311, 2791666861.0: 6312, 474393912.0: 6313, 2591326506.0: 6314, 3941111986.0: 6315, 867998210.0: 6316, 2445412748.0: 6317, 323190646.0: 6318, 510230496.0: 6319, 1871703764.0: 6320, 1388076568.0: 6321, 1764976979.0: 6322, 3371576832.0: 6323, 25884800.0: 6324, 4112844813.0: 6325, 2696133662.0: 6326, 2170348725.0: 6327, 2734917523.0: 6328, 2846986564.0: 6329, 2297169492.0: 6330, 1915393743.0: 6331, 264674032.0: 6332, 2810908561.0: 6333, 3625203908.0: 6334, 1497527068.0: 6335, 48406338.0: 6336, 82578366.0: 6337, 1914995063.0: 6338, 1489397995.0: 6339, 2955007529.0: 6340, 1157873188.0: 6341, 3309090903.0: 6342, 3428964809.0: 6343, 3073173456.0: 6344, 2638987612.0: 6345, 2698886739.0: 6346, 1871729396.0: 6347, 1243635321.0: 6348, 3121726357.0: 6349, 3965215460.0: 6350, 3681163301.0: 6351, 2009305275.0: 6352, 1848161949.0: 6353, 463909319.0: 6354, 153469260.0: 6355, 2109930124.0: 6356, 980876849.0: 6357, 2754281068.0: 6358, 3951095689.0: 6359, 1924230837.0: 6360, 463373817.0: 6361, 3840115100.0: 6362, 1620984635.0: 6363, 1740065576.0: 6364, 1602161578.0: 6365, 515243961.0: 6366, 951478092.0: 6367, 651792142.0: 6368, 1825936594.0: 6369, 2383077928.0: 6370, 2795848825.0: 6371, 3683656131.0: 6372, 1411528733.0: 6373, 698935163.0: 6374, 2770842091.0: 6375, 1907197297.0: 6376, 2405146993.0: 6377, 3513758106.0: 6378, 4197175118.0: 6379, 3894450549.0: 6380, 190108521.0: 6381, 751847912.0: 6382, 3298869032.0: 6383, 2782287674.0: 6384, 4169161745.0: 6385, 965485070.0: 6386, 616292700.0: 6387, 2615810822.0: 6388, 265671201.0: 6389, 2231843705.0: 6390, 3022907799.0: 6391, 275646055.0: 6392, 2464931025.0: 6393, 1988410705.0: 6394, 2472151680.0: 6395, 382849478.0: 6396, 1521160448.0: 6397, 904833106.0: 6398, 1989468053.0: 6399, 2432764658.0: 6400, 950876756.0: 6401, 648902506.0: 6402, 2922894993.0: 6403, 3206192474.0: 6404, 2188232702.0: 6405, 1502864847.0: 6406, 2624552656.0: 6407, 1945935201.0: 6408, 1168930423.0: 6409, 3456062170.0: 6410, 286485001.0: 6411, 243178626.0: 6412, 2185667003.0: 6413, 3160690482.0: 6414, 1998032135.0: 6415, 2567151515.0: 6416, 4010440367.0: 6417, 1167661528.0: 6418, 1550308906.0: 6419, 2877073934.0: 6420, 2964282778.0: 6421, 3495434105.0: 6422, 3086908665.0: 6423, 2677595734.0: 6424, 460798777.0: 6425, 1319968907.0: 6426, 2534527849.0: 6427, 3506070114.0: 6428, 1502491209.0: 6429, 542375410.0: 6430, 757775300.0: 6431, 3562090115.0: 6432, 3051047906.0: 6433, 2101167803.0: 6434, 3033156519.0: 6435, 357086661.0: 6436, 2760961060.0: 6437, 2747356567.0: 6438, 1830140902.0: 6439, 3614313934.0: 6440, 4161632200.0: 6441, 3604486479.0: 6442, 2982108474.0: 6443, 2948396349.0: 6444, 3956816336.0: 6445, 3551441201.0: 6446, 3959582091.0: 6447, 2027086519.0: 6448, 2870783185.0: 6449, 1314685957.0: 6450, 1150240119.0: 6451, 4085951430.0: 6452, 173559351.0: 6453, 2131353428.0: 6454, 469347843.0: 6455, 3352102902.0: 6456, 4100489469.0: 6457, 1212034503.0: 6458, 348430694.0: 6459, 1723540809.0: 6460, 1782751975.0: 6461, 635326741.0: 6462, 616493429.0: 6463, 1711924404.0: 6464, 124459008.0: 6465, 2762724975.0: 6466, 2883188445.0: 6467, 1374114509.0: 6468, 2376231650.0: 6469, 3220442815.0: 6470, 2148736307.0: 6471, 1282652466.0: 6472, 567101730.0: 6473, 3687711438.0: 6474, 3973718959.0: 6475, 2396414577.0: 6476, 3736975126.0: 6477, 2073218396.0: 6478, 2540274144.0: 6479, 3871886753.0: 6480, 3541639539.0: 6481, 1670181025.0: 6482, 2471369750.0: 6483, 1761295694.0: 6484, 827719370.0: 6485, 2504308438.0: 6486, 1760095070.0: 6487, 2777735968.0: 6488, 3365158775.0: 6489, 1264571631.0: 6490, 744948956.0: 6491, 3581648980.0: 6492, 31108185.0: 6493, 631646791.0: 6494, 3525550263.0: 6495, 670507767.0: 6496, 2643105727.0: 6497, 2581160168.0: 6498, 2609845838.0: 6499, 1176258281.0: 6500, 2239195516.0: 6501, 128896760.0: 6502, 26646481.0: 6503, 3076782292.0: 6504, 3691704222.0: 6505, 3074567443.0: 6506, 2649947213.0: 6507, 2601035964.0: 6508, 3596045765.0: 6509, 1623651373.0: 6510, 412574306.0: 6511, 3136709029.0: 6512, 380734226.0: 6513, 3805020384.0: 6514, 2143309532.0: 6515, 279901226.0: 6516, 53700393.0: 6517, 2879006600.0: 6518, 127413192.0: 6519, 2788183275.0: 6520, 3700231527.0: 6521, 289790138.0: 6522, 835941779.0: 6523, 2705043393.0: 6524, 2963972101.0: 6525, 1803405673.0: 6526, 2955279231.0: 6527, 1472999511.0: 6528, 4151745649.0: 6529, 2233359163.0: 6530, 3685610786.0: 6531, 4264925454.0: 6532, 1272976391.0: 6533, 1635777711.0: 6534, 592870499.0: 6535, 2729877633.0: 6536, 141889667.0: 6537, 2273062306.0: 6538, 585589436.0: 6539, 2632390426.0: 6540, 2285797600.0: 6541, 1116514143.0: 6542, 2569007306.0: 6543, 2521058905.0: 6544, 2714948488.0: 6545, 1415603339.0: 6546, 2142090796.0: 6547, 2347822480.0: 6548, 1006392317.0: 6549, 1330899422.0: 6550, 3387382080.0: 6551, 1438625943.0: 6552, 475236125.0: 6553, 2313584717.0: 6554, 3993284365.0: 6555, 2911983798.0: 6556, 1622930609.0: 6557, 4072867985.0: 6558, 3154797978.0: 6559, 1048731179.0: 6560, 3292526718.0: 6561, 3581601928.0: 6562, 3356788228.0: 6563, 1285167339.0: 6564, 705204615.0: 6565, 2425853813.0: 6566, 969694929.0: 6567, 3662220582.0: 6568, 3092626274.0: 6569, 1413449270.0: 6570, 1877659983.0: 6571, 2984241484.0: 6572, 977971958.0: 6573, 1271744800.0: 6574, 3725089742.0: 6575, 975875113.0: 6576, 2874913566.0: 6577, 3670554446.0: 6578, 902202104.0: 6579, 985862889.0: 6580, 570481297.0: 6581, 3599297622.0: 6582, 2372508068.0: 6583, 2133322604.0: 6584, 62050514.0: 6585, 2632960576.0: 6586, 2454427903.0: 6587, 3645903847.0: 6588, 1812157697.0: 6589, 3968587156.0: 6590, 3860258900.0: 6591, 3521513861.0: 6592, 724752763.0: 6593, 3630738521.0: 6594, 3266990587.0: 6595, 3444707130.0: 6596, 2862105625.0: 6597}]
list_of_cols_to_normalize = [1, 2]

transform_true = False

def column_norm(column,mappings):
    listy = []
    for i,val in enumerate(column.reshape(-1)):
        if not (val in mappings):
            mappings[val] = int(max(mappings.values()))+1
        listy.append(mappings[val])
    return np.array(listy)

def Normalize(data_arr):
    if list_of_cols_to_normalize:
        for i,mapping in zip(list_of_cols_to_normalize,mappings):
            if i>=data_arr.shape[1]:
                break
            col = data_arr[:,i]
            normcol = column_norm(col,mapping)
            data_arr[:,i] = normcol
        return data_arr
    else:
        return data_arr

def transform(X):
    mean = None
    components = None
    whiten = None
    explained_variance = None
    if (transform_true):
        mean = np.array([])
        components = np.array([])
        whiten = None
        explained_variance = np.array([])
        X = X - mean

    X_transformed = np.dot(X, components.T)
    if whiten:
        X_transformed /= np.sqrt(explained_variance)
    return X_transformed

# Preprocessor for CSV files
def preprocess(inputcsvfile, outputcsvfile, headerless=False, testfile=False, target='', ignorecolumns=[], ignorelabels=[]):
    il=[]
    
    ignorelabels=[]
    ignorecolumns=[]
    target="class"


    if (testfile):
        target=''
    
    with open(outputcsvfile, "w+") as outputfile:
        with open(inputcsvfile) as csvfile:
            reader = csv.reader(csvfile)
            if (headerless==False):
                header=next(reader, None)
                try:
                    if (target!=''): 
                        hc=header.index(target)
                    else:
                        hc=len(header)-1
                        target=header[hc]
                except:
                    raise NameError("Target '"+target+"' not found! Header must be same as in file passed to btc.")
                for i in range(0,len(ignorecolumns)):
                    try:
                        col=header.index(ignorecolumns[i])
                        if (col==hc):
                            raise ValueError("Attribute '"+ignorecolumns[i]+"' is the target. Header must be same as in file passed to btc.")
                        il=il+[col]
                    except ValueError:
                        raise
                    except:
                        raise NameError("Attribute '"+ignorecolumns[i]+"' not found in header. Header must be same as in file passed to btc.")
                for i in range(0,len(header)):      
                    if (i==hc):
                        continue
                    if (i in il):
                        continue
                    print(header[i]+",", end = '', file=outputfile)
                print(header[hc],file=outputfile)

                for row in csv.DictReader(open(inputcsvfile)):
                    if (row[target] in ignorelabels):
                        continue
                    for name in header:
                        if (name in ignorecolumns):
                            continue
                        if (name==target):
                            continue
                        if (',' in row[name]):
                            print ('"'+row[name]+'"'+",",end = '', file=outputfile)
                        else:
                            print (row[name]+",",end = '', file=outputfile)
                    print (row[target], file=outputfile)

            else:
                try:
                    if (target!=""): 
                        hc=int(target)
                    else:
                        hc=-1
                except:
                    raise NameError("No header found but attribute name given as target. Header must be same as in file passed to btc.")
                for i in range(0,len(ignorecolumns)):
                    try:
                        col=int(ignorecolumns[i])
                        if (col==hc):
                            raise ValueError("Attribute "+str(col)+" is the target. Cannot ignore. Header must be same as in file passed to btc.")
                        il=il+[col]
                    except ValueError:
                        raise
                    except:
                        raise ValueError("No header found but attribute name given in ignore column list. Header must be same as in file passed to btc.")
                for row in reader:
                    if (hc==-1):
                        hc=len(row)-1
                    if (row[hc] in ignorelabels):
                        continue
                    for i in range(0,len(row)):
                        if (i in il):
                            continue
                        if (i==hc):
                            continue
                        if (',' in row[i]):
                            print ('"'+row[i]+'"'+",",end = '', file=outputfile)
                        else:
                            print(row[i]+",",end = '', file=outputfile)
                    print (row[hc], file=outputfile)

def clean(filename, outfile, rounding=-1, headerless=False, testfile=False):
    
    clean.classlist = []
    clean.testfile = testfile
    clean.mapping = {}
    

    def convert(cell):
        value = str(cell)
        try:
            result = int(value)
            return result
        except:
            try:
                result = float(value)
                if (rounding != -1):
                    result = int(result * math.pow(10, rounding)) / math.pow(10, rounding)
                return result
            except:
                result = (binascii.crc32(value.encode('utf8')) % (1 << 32))
                return result

    # function to return key for any value 
    def get_key(val, clean_classmapping):
        if clean_classmapping == {}:
            return val
        for key, value in clean_classmapping.items(): 
            if val == value:
                return key
        if val not in list(clean_classmapping.values):
            raise ValueError("Label key does not exist")

    def convertclassid(cell):
        if (clean.testfile):
            return convert(cell)
        value = str(cell)
        if (value == ''):
            raise ValueError("All cells in the target column must contain a class label.")

        if (not clean.mapping == {}):
            result = -1
            try:
                result = clean.mapping[cell]
            except:
                raise ValueError("Class label '" + value + "' encountered in input not defined in user-provided mapping.")
            if (not result == int(result)):
                raise ValueError("Class labels must be mapped to integer.")
            if (not str(result) in clean.classlist):
                clean.classlist = clean.classlist + [str(result)]
            return result
        try:
            result = float(cell)
            if (rounding != -1):
                result = int(result * math.pow(10, rounding)) / math.pow(10, rounding)
            else:
                result = int(int(result * 100) / 100)  # round classes to two digits

            if (not str(result) in clean.classlist):
                clean.classlist = clean.classlist + [str(result)]
        except:
            result = (binascii.crc32(value.encode('utf8')) % (1 << 32))
            if (result in clean.classlist):
                result = clean.classlist.index(result)
            else:
                clean.classlist = clean.classlist + [result]
                result = clean.classlist.index(result)
            if (not result == int(result)):
                raise ValueError("Class labels must be mappable to integer.")
        finally:
            if (result < 0):
                raise ValueError("Integer class labels must be positive and contiguous.")

        return result

    rowcount = 0
    with open(filename) as csv_file:
        reader = csv.reader(csv_file)
        f = open(outfile, "w+")
        if (headerless == False):
            next(reader, None)
        outbuf = []
        for row in reader:
            if (row == []):  # Skip empty rows
                continue
            rowcount = rowcount + 1
            rowlen = num_attr
            if (not testfile):
                rowlen = rowlen + 1    
            if (not len(row) == rowlen):
                raise ValueError("Column count must match trained predictor. Row " + str(rowcount) + " differs.")
            i = 0
            for elem in row:
                if(i + 1 < len(row)):
                    outbuf.append(str(convert(elem)))
                    outbuf.append(',')
                else:
                    classid = str(convertclassid(elem))
                    outbuf.append(classid)
                i = i + 1
            if (len(outbuf) < IOBUF):
                outbuf.append(os.linesep)
            else:
                print(''.join(outbuf), file=f)
                outbuf = []
        print(''.join(outbuf), end="", file=f)
        f.close()

        if (testfile == False and not len(clean.classlist) >= 2):
            raise ValueError("Number of classes must be at least 2.")

        return get_key, clean.mapping

# Helper (save an import)
def argmax(l):
    f = lambda i: l[i]
    return max(range(len(l)), key=f)
# Classifier
def classify(row):
    #inits
    x=row
    o=[0]*num_output_logits


    #Nueron Equations
    h_0 = max((((6.9506454 * float(x[0]))+ (-2.851996 * float(x[1]))+ (-0.124609984 * float(x[2]))+ (0.27516884 * float(x[3]))+ (0.10875553 * float(x[4]))+ (0.23424459 * float(x[5]))+ (2.2134452 * float(x[6]))+ (3.1669593 * float(x[7]))+ (2.8094883 * float(x[8]))+ (-4.1858673 * float(x[9]))+ (0.49080503 * float(x[10]))+ (2.1472156 * float(x[11]))+ (2.5149765 * float(x[12]))+ (-1.5079968 * float(x[13]))+ (0.34966168 * float(x[14]))+ (1.2977598 * float(x[15]))+ (0.22421746 * float(x[16]))+ (-0.49602303 * float(x[17]))+ (-2.1190202 * float(x[18]))+ (1.5688713 * float(x[19]))+ (0.12958665 * float(x[20]))+ (0.3451453 * float(x[21]))+ (0.844285 * float(x[22]))+ (1.0977737 * float(x[23]))+ (2.769364 * float(x[24]))+ (-1.6908159 * float(x[25]))+ (0.12745963 * float(x[26]))+ (-0.1414639 * float(x[27]))+ (1.6736214 * float(x[28]))+ (3.9500678 * float(x[29]))+ (2.267745 * float(x[30]))+ (3.4192526 * float(x[31]))+ (-1.1394382 * float(x[32]))+ (1.4300762 * float(x[33]))+ (0.9330554 * float(x[34]))+ (4.9529586 * float(x[35]))+ (4.587442 * float(x[36]))+ (2.059058 * float(x[37]))+ (1.6433778 * float(x[38]))+ (0.4749382 * float(x[39]))+ (-0.8904477 * float(x[40]))+ (0.9999643 * float(x[41]))+ (-1.220018 * float(x[42]))+ (0.073586255 * float(x[43]))+ (-0.5978517 * float(x[44]))+ (1.5776621 * float(x[45]))+ (-0.83729637 * float(x[46]))+ (-1.1577593 * float(x[47]))+ (-3.5681944 * float(x[48]))+ (1.8056821 * float(x[49])))+ ((1.6984589 * float(x[50]))+ (1.7672112 * float(x[51]))+ (0.2950718 * float(x[52]))+ (1.6950074 * float(x[53]))+ (0.9794649 * float(x[54]))+ (1.1266613 * float(x[55]))+ (-1.7069011 * float(x[56]))+ (-0.7079201 * float(x[57]))+ (-0.08943904 * float(x[58]))+ (-4.2947574 * float(x[59]))+ (0.34994814 * float(x[60]))+ (-1.810466 * float(x[61]))+ (2.4668431 * float(x[62]))+ (2.2885675 * float(x[63]))+ (2.8162255 * float(x[64]))+ (0.0057748207 * float(x[65]))+ (0.5034751 * float(x[66]))+ (1.5159036 * float(x[67]))+ (0.53262335 * float(x[68]))+ (1.7165339 * float(x[69]))+ (2.5370219 * float(x[70]))+ (3.5124624 * float(x[71]))+ (3.7462049 * float(x[72]))+ (0.39202744 * float(x[73]))+ (0.19565685 * float(x[74]))+ (-0.30334276 * float(x[75]))+ (-0.84576505 * float(x[76]))+ (-0.70231277 * float(x[77]))+ (-0.4262464 * float(x[78]))+ (1.851289 * float(x[79]))+ (0.006704076 * float(x[80]))+ (-0.15768884 * float(x[81]))+ (1.1804105 * float(x[82]))+ (1.1182492 * float(x[83]))+ (0.93484205 * float(x[84]))+ (1.9143769 * float(x[85]))+ (-4.929016 * float(x[86]))+ (3.6655283 * float(x[87]))+ (-0.58719814 * float(x[88]))+ (1.0587864 * float(x[89]))+ (0.26035273 * float(x[90]))+ (1.7054981 * float(x[91]))+ (0.97846854 * float(x[92]))+ (-0.24108891 * float(x[93]))+ (2.0049884 * float(x[94]))+ (1.8601735 * float(x[95]))+ (0.83092874 * float(x[96]))+ (-1.600443 * float(x[97]))+ (0.530704 * float(x[98]))+ (2.021467 * float(x[99])))+ ((0.58932436 * float(x[100]))+ (0.59963274 * float(x[101]))+ (-1.4397365 * float(x[102]))+ (-0.8005083 * float(x[103]))+ (3.727396 * float(x[104]))+ (-0.4720317 * float(x[105]))+ (-0.386195 * float(x[106]))+ (-1.1673715 * float(x[107]))+ (0.21481983 * float(x[108]))+ (1.5312117 * float(x[109]))+ (3.0786905 * float(x[110]))+ (-0.45932662 * float(x[111]))+ (-1.1442997 * float(x[112]))+ (0.77200365 * float(x[113]))+ (-0.29933888 * float(x[114]))+ (0.18911745 * float(x[115]))+ (-0.24323556 * float(x[116]))+ (3.5553498 * float(x[117]))+ (-5.2427654 * float(x[118]))+ (-0.4687535 * float(x[119]))+ (-3.0873184 * float(x[120]))+ (-4.4069376 * float(x[121]))+ (3.5680094 * float(x[122]))+ (-0.86834717 * float(x[123]))+ (0.21700266 * float(x[124]))+ (-0.73692846 * float(x[125]))+ (3.959116 * float(x[126]))+ (2.9769733 * float(x[127]))+ (-1.4402709 * float(x[128]))+ (3.434569 * float(x[129]))+ (-1.8466128 * float(x[130]))+ (2.499308 * float(x[131]))+ (-0.78383905 * float(x[132]))+ (6.8949313 * float(x[133]))+ (2.572218 * float(x[134]))+ (1.585796 * float(x[135]))+ (1.3877347 * float(x[136]))+ (0.13267037 * float(x[137]))+ (1.0605458 * float(x[138]))+ (-0.3241032 * float(x[139]))+ (-0.53171474 * float(x[140]))+ (-0.02154331 * float(x[141]))+ (1.4125068 * float(x[142]))+ (1.7218022 * float(x[143]))+ (-0.2777337 * float(x[144]))+ (-2.9821076 * float(x[145]))+ (3.9040422 * float(x[146]))+ (0.99955124 * float(x[147]))+ (3.5203977 * float(x[148]))+ (1.2740403 * float(x[149])))+ ((3.101708 * float(x[150]))+ (0.93386453 * float(x[151]))+ (0.7370381 * float(x[152]))+ (2.3361115 * float(x[153]))+ (1.6078305 * float(x[154]))+ (1.9211264 * float(x[155]))+ (2.2449963 * float(x[156]))+ (-0.9752649 * float(x[157]))+ (2.7792358 * float(x[158]))+ (-0.7122393 * float(x[159]))+ (0.5489074 * float(x[160]))+ (0.32706937 * float(x[161]))+ (2.243219 * float(x[162]))+ (3.5502038 * float(x[163]))+ (4.8653164 * float(x[164]))+ (-1.8801914 * float(x[165]))+ (2.5286915 * float(x[166]))+ (2.0127873 * float(x[167]))+ (-5.3069534 * float(x[168]))) + -4.942163), 0)
    h_1 = max((((-1066.3965 * float(x[0]))+ (-41.74791 * float(x[1]))+ (-384.55356 * float(x[2]))+ (-35.1322 * float(x[3]))+ (100.26522 * float(x[4]))+ (-4.3493576 * float(x[5]))+ (41.651638 * float(x[6]))+ (66.97276 * float(x[7]))+ (-5.9996853 * float(x[8]))+ (25.746483 * float(x[9]))+ (116.057976 * float(x[10]))+ (62.64138 * float(x[11]))+ (11.354891 * float(x[12]))+ (180.80766 * float(x[13]))+ (148.46384 * float(x[14]))+ (41.0159 * float(x[15]))+ (183.52834 * float(x[16]))+ (161.75322 * float(x[17]))+ (173.46042 * float(x[18]))+ (-3.9902585 * float(x[19]))+ (127.89484 * float(x[20]))+ (144.69002 * float(x[21]))+ (108.71867 * float(x[22]))+ (86.490555 * float(x[23]))+ (17.140987 * float(x[24]))+ (89.515854 * float(x[25]))+ (-64.35256 * float(x[26]))+ (-64.05647 * float(x[27]))+ (56.63184 * float(x[28]))+ (-24.63177 * float(x[29]))+ (89.84134 * float(x[30]))+ (-16.957872 * float(x[31]))+ (-40.689064 * float(x[32]))+ (30.026033 * float(x[33]))+ (-77.61702 * float(x[34]))+ (64.79553 * float(x[35]))+ (-6.0545545 * float(x[36]))+ (73.28979 * float(x[37]))+ (-49.662216 * float(x[38]))+ (99.91928 * float(x[39]))+ (-32.08681 * float(x[40]))+ (21.003145 * float(x[41]))+ (-21.97632 * float(x[42]))+ (33.662434 * float(x[43]))+ (-15.176801 * float(x[44]))+ (16.116829 * float(x[45]))+ (190.18124 * float(x[46]))+ (169.51805 * float(x[47]))+ (187.65935 * float(x[48]))+ (81.00971 * float(x[49])))+ ((76.1534 * float(x[50]))+ (131.38286 * float(x[51]))+ (59.817368 * float(x[52]))+ (126.05872 * float(x[53]))+ (32.575615 * float(x[54]))+ (60.603718 * float(x[55]))+ (69.040016 * float(x[56]))+ (-87.71935 * float(x[57]))+ (99.20863 * float(x[58]))+ (18.512794 * float(x[59]))+ (98.45244 * float(x[60]))+ (-21.965239 * float(x[61]))+ (-25.885284 * float(x[62]))+ (57.316914 * float(x[63]))+ (-31.814854 * float(x[64]))+ (20.468925 * float(x[65]))+ (1.8724098 * float(x[66]))+ (81.27011 * float(x[67]))+ (-33.37952 * float(x[68]))+ (95.21903 * float(x[69]))+ (-62.965443 * float(x[70]))+ (-0.6043707 * float(x[71]))+ (-43.999157 * float(x[72]))+ (26.063934 * float(x[73]))+ (23.462845 * float(x[74]))+ (120.93826 * float(x[75]))+ (164.53859 * float(x[76]))+ (126.00891 * float(x[77]))+ (102.42296 * float(x[78]))+ (61.295124 * float(x[79]))+ (171.77736 * float(x[80]))+ (147.39818 * float(x[81]))+ (103.06606 * float(x[82]))+ (68.33341 * float(x[83]))+ (20.790737 * float(x[84]))+ (115.050896 * float(x[85]))+ (18.128843 * float(x[86]))+ (-3.3468976 * float(x[87]))+ (43.077225 * float(x[88]))+ (21.536842 * float(x[89]))+ (111.6018 * float(x[90]))+ (0.7386666 * float(x[91]))+ (-44.395435 * float(x[92]))+ (-8.829593 * float(x[93]))+ (-79.29789 * float(x[94]))+ (66.932724 * float(x[95]))+ (31.229929 * float(x[96]))+ (13.119765 * float(x[97]))+ (-36.239872 * float(x[98]))+ (95.139915 * float(x[99])))+ ((-38.24108 * float(x[100]))+ (24.149433 * float(x[101]))+ (-2.5384276 * float(x[102]))+ (42.248222 * float(x[103]))+ (-77.19572 * float(x[104]))+ (150.98329 * float(x[105]))+ (173.99174 * float(x[106]))+ (178.61528 * float(x[107]))+ (154.35162 * float(x[108]))+ (106.36745 * float(x[109]))+ (105.49269 * float(x[110]))+ (139.47873 * float(x[111]))+ (164.56558 * float(x[112]))+ (137.96207 * float(x[113]))+ (81.98986 * float(x[114]))+ (67.422775 * float(x[115]))+ (65.27505 * float(x[116]))+ (0.6415896 * float(x[117]))+ (-35.431602 * float(x[118]))+ (-65.606285 * float(x[119]))+ (49.407543 * float(x[120]))+ (32.662746 * float(x[121]))+ (70.45553 * float(x[122]))+ (-46.34488 * float(x[123]))+ (-85.47023 * float(x[124]))+ (-74.78127 * float(x[125]))+ (29.12076 * float(x[126]))+ (-80.34929 * float(x[127]))+ (-52.222065 * float(x[128]))+ (-24.70069 * float(x[129]))+ (-33.134804 * float(x[130]))+ (-6.186084 * float(x[131]))+ (104.92012 * float(x[132]))+ (-16.662218 * float(x[133]))+ (-11.146714 * float(x[134]))+ (98.497604 * float(x[135]))+ (145.52037 * float(x[136]))+ (162.49655 * float(x[137]))+ (-54.28938 * float(x[138]))+ (-17.106985 * float(x[139]))+ (16.200226 * float(x[140]))+ (80.82291 * float(x[141]))+ (124.30324 * float(x[142]))+ (129.31108 * float(x[143]))+ (-22.70652 * float(x[144]))+ (-23.09067 * float(x[145]))+ (-40.922264 * float(x[146]))+ (101.0752 * float(x[147]))+ (59.811283 * float(x[148]))+ (68.000786 * float(x[149])))+ ((-19.843552 * float(x[150]))+ (-2.165094 * float(x[151]))+ (-30.46905 * float(x[152]))+ (62.961575 * float(x[153]))+ (67.84593 * float(x[154]))+ (64.18121 * float(x[155]))+ (22.62744 * float(x[156]))+ (-60.752354 * float(x[157]))+ (12.813569 * float(x[158]))+ (136.98892 * float(x[159]))+ (49.006287 * float(x[160]))+ (77.51714 * float(x[161]))+ (29.50201 * float(x[162]))+ (29.898933 * float(x[163]))+ (-46.271236 * float(x[164]))+ (-111.280235 * float(x[165]))+ (21.593557 * float(x[166]))+ (70.05917 * float(x[167]))+ (-82.69946 * float(x[168]))) + -1.4661405), 0)
    o[0] = (-0.0025172085 * h_0)+ (0.44748136 * h_1) + 4.546813

    

    #Output Decision Rule
    if num_output_logits==1:
        return o[0]>=0
    else:
        return argmax(o)


def Predict(arr,headerless,csvfile, get_key, classmapping):
    with open(csvfile, 'r') as csvinput:
        #readers and writers
        writer = csv.writer(sys.stdout, lineterminator=os.linesep)
        reader = csv.reader(csvinput)

        #print original header
        if (not headerless):
            writer.writerow(','.join(next(reader, None) + ["Prediction"]))
        
        
        for i, row in enumerate(reader):
            #use the transformed array as input to predictor
            pred = str(get_key(int(classify(arr[i])), classmapping))
            #use original untransformed line to write out
            row.append(pred)
            writer.writerow(row)


def Validate(arr):
    if n_classes == 2:
        count, correct_count, num_TP, num_TN, num_FP, num_FN, num_class_1, num_class_0 = 0, 0, 0, 0, 0, 0, 0, 0
        outputs=[]
        for i, row in enumerate(arr):
            outputs.append(int(classify(arr[i, :-1].tolist())))
        outputs=np.array(outputs)
        correct_count = int(np.sum(outputs.reshape(-1) == arr[:, -1].reshape(-1)))
        count = outputs.shape[0]
        num_TP = int(np.sum(np.logical_and(outputs.reshape(-1) == 1, arr[:, -1].reshape(-1) == 1)))
        num_TN = int(np.sum(np.logical_and(outputs.reshape(-1) == 0, arr[:, -1].reshape(-1) == 0)))
        num_FN = int(np.sum(np.logical_and(outputs.reshape(-1) == 0, arr[:, -1].reshape(-1) == 1)))
        num_FP = int(np.sum(np.logical_and(outputs.reshape(-1) == 1, arr[:, -1].reshape(-1) == 0)))
        num_class_0 = int(np.sum(arr[:, -1].reshape(-1) == 0))
        num_class_1 = int(np.sum(arr[:, -1].reshape(-1) == 1))
        return count, correct_count, num_TP, num_TN, num_FP, num_FN, num_class_1, num_class_0
    else:
        numeachclass = {}
        count, correct_count = 0, 0
        preds = []
        for i, row in enumerate(arr):
            pred = int(classify(arr[i].tolist()))
            preds.append(pred)
            if pred == int(float(arr[i, -1])):
                correct_count += 1
                if int(float(arr[i, -1])) in numeachclass.keys():
                    numeachclass[int(float(arr[i, -1]))] += 1
                else:
                    numeachclass[int(float(arr[i, -1]))] = 0
            count += 1
        return count, correct_count, numeachclass, preds
    


# Main method
if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Predictor trained on '+TRAINFILE)
    parser.add_argument('csvfile', type=str, help='CSV file containing test set (unlabeled).')
    parser.add_argument('-validate', action='store_true', help='Validation mode. csvfile must be labeled. Output is classification statistics rather than predictions.')
    parser.add_argument('-cleanfile',action='store_true',help='Use this flag to save prediction time if the csvfile you are passing has already been preprocessed. Implies headerless.')
    parser.add_argument('-headerless', help='Do not treat the first line of csvfile as a header.', action='store_true')
    args = parser.parse_args()
    faulthandler.enable()


    #clean if not already clean
    if not args.cleanfile:
        tempdir = tempfile.gettempdir()
        cleanfile = tempdir + os.sep + "clean.csv"
        preprocessedfile = tempdir + os.sep + "prep.csv"
        preprocess(args.csvfile,preprocessedfile,args.headerless,(not args.validate))
        get_key, classmapping = clean(preprocessedfile, cleanfile, -1, args.headerless, (not args.validate))
    else:
        cleanfile=args.csvfile
        preprocessedfile=args.csvfile
        get_key = lambda x,y: x
        classmapping = {}


    #load file
    cleanarr = np.loadtxt(cleanfile, delimiter=',', dtype='float64')


    #Normalize
    cleanarr = Normalize(cleanarr)


    #Transform
    if transform_true:
        if args.validate:
            trans = transform(cleanarr[:, :-1])
            cleanarr = np.concatenate((trans, cleanarr[:, -1].reshape(-1, 1)), axis = 1)
        else:
            cleanarr = transform(cleanarr)


    #Predict
    if not args.validate:
        Predict(cleanarr, args.headerless, preprocessedfile, get_key, classmapping)


    #Validate
    else: 
        if n_classes == 2:
            count, correct_count, num_TP, num_TN, num_FP, num_FN, num_class_1, num_class_0 = Validate(cleanarr)
        else:
            count, correct_count, numeachclass, preds = Validate(cleanarr)
            #Correct Labels
            true_labels = cleanarr[:, -1]


        #Report Metrics
        model_cap=343
        if n_classes == 2:
            #Base metrics
            FN = float(num_FN) * 100.0 / float(count)
            FP = float(num_FP) * 100.0 / float(count)
            TN = float(num_TN) * 100.0 / float(count)
            TP = float(num_TP) * 100.0 / float(count)
            num_correct = correct_count

            #Calculated Metrics
            if int(num_TP + num_FN) != 0:
                TPR = num_TP / (num_TP + num_FN) # Sensitivity, Recall
            if int(num_TN + num_FP) != 0:
                TNR = num_TN / (num_TN + num_FP) # Specificity
            if int(num_TP + num_FP) != 0:
                PPV = num_TP / (num_TP + num_FP) # Recall
            if int(num_FN + num_TP) != 0:
                FNR = num_FN / (num_FN + num_TP) # Miss rate
            if int(2 * num_TP + num_FP + num_FN) != 0:
                FONE = 2 * num_TP / (2 * num_TP + num_FP + num_FN) # F1 Score
            if int(num_TP + num_FN + num_FP) != 0:
                TS = num_TP / (num_TP + num_FN + num_FP) # Critical Success Index
            #Best Guess Accuracy
            randguess = int(float(10000.0 * max(num_class_1, num_class_0)) / count) / 100.0
            #Model Accuracy
            modelacc = int(float(num_correct * 10000) / count) / 100.0
            #Report
            print("System Type:                        Binary classifier")
            print("Best-guess accuracy:                {:.2f}%".format(randguess))
            print("Model accuracy:                     {:.2f}%".format(modelacc) + " (" + str(int(num_correct)) + "/" + str(count) + " correct)")
            print("Improvement over best guess:        {:.2f}%".format(modelacc - randguess) + " (of possible " + str(round(100 - randguess, 2)) + "%)")
            print("Model capacity (MEC):               {:.0f} bits".format(model_cap))
            print("Generalization ratio:               {:.2f}".format(int(float(num_correct * 100) / model_cap) / 100.0) + " bits/bit")
            print("Model efficiency:                   {:.2f}%/parameter".format(int(100 * (modelacc - randguess) / model_cap) / 100.0))
            print("System behavior")
            print("True Negatives:                     {:.2f}%".format(TN) + " (" + str(int(num_TN)) + "/" + str(count) + ")")
            print("True Positives:                     {:.2f}%".format(TP) + " (" + str(int(num_TP)) + "/" + str(count) + ")")
            print("False Negatives:                    {:.2f}%".format(FN) + " (" + str(int(num_FN)) + "/" + str(count) + ")")
            print("False Positives:                    {:.2f}%".format(FP) + " (" + str(int(num_FP)) + "/" + str(count) + ")")
            if int(num_TP + num_FN) != 0:
                print("True Pos. Rate/Sensitivity/Recall:  {:.2f}".format(TPR))
            if int(num_TN + num_FP) != 0:
                print("True Neg. Rate/Specificity:         {:.2f}".format(TNR))
            if int(num_TP + num_FP) != 0:
                print("Precision:                          {:.2f}".format(PPV))
            if int(2 * num_TP + num_FP + num_FN) != 0:
                print("F-1 Measure:                        {:.2f}".format(FONE))
            if int(num_TP + num_FN) != 0:
                print("False Negative Rate/Miss Rate:      {:.2f}".format(FNR))
            if int(num_TP + num_FN + num_FP) != 0:
                print("Critical Success Index:             {:.2f}".format(TS))

        #Multiclass
        else:
            num_correct = correct_count
            modelacc = int(float(num_correct * 10000) / count) / 100.0
            randguess = round(max(numeachclass.values()) / sum(numeachclass.values()) * 100, 2)
            print("System Type:                        " + str(n_classes) + "-way classifier")
            print("Best-guess accuracy:                {:.2f}%".format(randguess))
            print("Model accuracy:                     {:.2f}%".format(modelacc) + " (" + str(int(num_correct)) + "/" + str(count) + " correct)")
            print("Improvement over best guess:        {:.2f}%".format(modelacc - randguess) + " (of possible " + str(round(100 - randguess, 2)) + "%)")
            print("Model capacity (MEC):               {:.0f} bits".format(model_cap))
            print("Generalization ratio:               {:.2f}".format(int(float(num_correct * 100) / model_cap) / 100.0) + " bits/bit")





            def confusion_matrix(y_true, y_pred, labels=None, sample_weight=None, normalize=None):
                #check for numpy/scipy is imported
                try:
                    from scipy.sparse import coo_matrix #required for multiclass metrics
                    try:
                        np.array
                    except:
                        import numpy as np
                except:
                    raise ValueError("Scipy and Numpy Required for Multiclass Metrics")
                # Compute confusion matrix to evaluate the accuracy of a classification.
                # By definition a confusion matrix :math:C is such that :math:C_{i, j}
                # is equal to the number of observations known to be in group :math:i and
                # predicted to be in group :math:j.
                # Thus in binary classification, the count of true negatives is
                # :math:C_{0,0}, false negatives is :math:C_{1,0}, true positives is
                # :math:C_{1,1} and false positives is :math:C_{0,1}.
                # Read more in the :ref:User Guide <confusion_matrix>.
                # Parameters
                # ----------
                # y_true : array-like of shape (n_samples,)
                # Ground truth (correct) target values.
                # y_pred : array-like of shape (n_samples,)
                # Estimated targets as returned by a classifier.
                # labels : array-like of shape (n_classes), default=None
                # List of labels to index the matrix. This may be used to reorder
                # or select a subset of labels.
                # If None is given, those that appear at least once
                # in y_true or y_pred are used in sorted order.
                # sample_weight : array-like of shape (n_samples,), default=None
                # Sample weights.
                # normalize : {'true', 'pred', 'all'}, default=None
                # Normalizes confusion matrix over the true (rows), predicted (columns)
                # conditions or all the population. If None, confusion matrix will not be
                # normalized.
                # Returns
                # -------
                # C : ndarray of shape (n_classes, n_classes)
                # Confusion matrix.
                # References
                # ----------
                if labels is None:
                    labels = np.array(list(set(list(y_true.astype('int')))))
                else:
                    labels = np.asarray(labels)
                    if np.all([l not in y_true for l in labels]):
                        raise ValueError("At least one label specified must be in y_true")


                if sample_weight is None:
                    sample_weight = np.ones(y_true.shape[0], dtype=np.int64)
                else:
                    sample_weight = np.asarray(sample_weight)
                if y_true.shape[0]!=y_pred.shape[0]:
                    raise ValueError("y_true and y_pred must be of the same length")

                if normalize not in ['true', 'pred', 'all', None]:
                    raise ValueError("normalize must be one of {'true', 'pred', 'all', None}")


                n_labels = labels.size
                label_to_ind = {y: x for x, y in enumerate(labels)}
                # convert yt, yp into index
                y_pred = np.array([label_to_ind.get(x, n_labels + 1) for x in y_pred])
                y_true = np.array([label_to_ind.get(x, n_labels + 1) for x in y_true])
                # intersect y_pred, y_true with labels, eliminate items not in labels
                ind = np.logical_and(y_pred < n_labels, y_true < n_labels)
                y_pred = y_pred[ind]
                y_true = y_true[ind]
                # also eliminate weights of eliminated items
                sample_weight = sample_weight[ind]
                # Choose the accumulator dtype to always have high precision
                if sample_weight.dtype.kind in {'i', 'u', 'b'}:
                    dtype = np.int64
                else:
                    dtype = np.float64
                cm = coo_matrix((sample_weight, (y_true, y_pred)), shape=(n_labels, n_labels), dtype=dtype,).toarray()


                with np.errstate(all='ignore'):
                    if normalize == 'true':
                        cm = cm / cm.sum(axis=1, keepdims=True)
                    elif normalize == 'pred':
                        cm = cm / cm.sum(axis=0, keepdims=True)
                    elif normalize == 'all':
                        cm = cm / cm.sum()
                    cm = np.nan_to_num(cm)
                return cm


            print("Confusion Matrix:")
            mtrx = confusion_matrix(np.array(true_labels).reshape(-1), np.array(preds).reshape(-1))
            mtrx = mtrx / np.sum(mtrx) * 100.0
            print(' ' + np.array2string(mtrx, formatter={'float': (lambda x: '{:.2f}%'.format(round(float(x), 2)))})[1:-1])


    #Clean Up
    if not args.cleanfile:
        os.remove(cleanfile)
        os.remove(preprocessedfile)
